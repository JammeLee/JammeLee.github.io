<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>提审Google Play遇到的三大问题</title>
    <url>/2018/08/31/Cocos2d-X/20180831_001/</url>
    <content><![CDATA[<p>&#8194;&#8194;&#8194;&#8194;最近在搞Google Play相关的工作，中间遇到很多问题，也学习到了很多。总结下来，发布一个Google系列。首先先说一说首次提审的时候，遇到的三大问题吧。<br><br>&#8194;&#8194;&#8194;&#8194;在后台提交之后，没多久我收到了一封来自Google团队的邮件。具体提出了三个问题。</p>
<ul>
<li>Libpng library</li>
<li>OpenSSL</li>
<li>SSL Error Handler</li>
</ul>
<p><img src="/2018/08/31/Cocos2d-X/20180831_001/20180831223855.png" alt="images"></p>
<p>&#8194;&#8194;&#8194;&#8194;前两个问题都是因为我们游戏使用的引擎版本太旧导致的，毕竟是Cocos2d2.2.6的版本，所以在网上搜了很多的so，都是有问题的。这里贴一个地址，可以前往<a href="https://github.com/cocos2d/cocos2d-x-3rd-party-libs-bin/tree/v2" target="_blank" rel="noopener">下载</a>。使用<b>cocos2d-x-3rd-party-libs-bin-2\cocos2dx\platform\third_party\android\prebuilt</b>下的libcurl、zlib和libpng替换引擎<b>cocos2dx\platform\third_party\android\prebuilt</b>下的文件夹，Android.mk文件自行检查修改。<br><br>&#8194;&#8194;&#8194;&#8194;替换之后可以使用命令行查询OpenSSL，查看输出内容中的版本是否符合Google要求。（我这里是1.0.2g，所以符合要求）<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ unzip -p YourApp.apk | strings | grep &quot;OpenSSL&quot;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">IDEA part of OpenSSL 1.0.2g  1 Mar 2016</span><br><span class="line">CAMELLIA part of OpenSSL 1.0.2g  1 Mar 2016</span><br><span class="line">EDSA part of OpenSSL 1.0.2g  1 Mar 2016</span><br><span class="line">ECDSA part of OpenSSL 1.0.2g  1 Mar 2016</span><br><span class="line">ECDH part of OpenSSL 1.0.2g  1 Mar 2016</span><br><span class="line">RAND part of OpenSSL 1.0.2g  1 Mar 2016</span><br><span class="line">CONF part of OpenSSL 1.0.2g  1 Mar 2016</span><br><span class="line">CONF_def part of OpenSSL 1.0.2g  1 Mar 2016</span><br><span class="line">TXT_DB part of OpenSSL 1.0.2g  1 Mar 2016</span><br><span class="line">+SHA part of OpenSSL 1.0.2g  1 Mar 2016</span><br><span class="line">RIPE-MD160 part of OpenSSL 1.0.2g  1 Mar 2016</span><br><span class="line">3RC4 part of OpenSSL 1.0.2g  1 Mar 2016</span><br><span class="line">:Blowfish part of OpenSSL 1.0.2g  1 Mar 2016</span><br><span class="line">\CAST part of OpenSSL 1.0.2g  1 Mar 2016</span><br></pre></td></tr></table></figure>
<p>&#8194;&#8194;&#8194;&#8194;浪费我时间最久的就是SSL Error Handler问题了。点开邮件中的连接，看到Google给出的解释是，我的app中使用的 WebViewClient.onReceivedSslError方法有安全隐患。在app中使用过该方法的小伙伴可以尝试这样修改一下。<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedSslError</span><span class="params">(WebView view, <span class="keyword">final</span> SslErrorHandler handler, SslError error)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>);</span><br><span class="line">    builder.setMessage(R.string.notification_error_ssl_cert_invalid);</span><br><span class="line">    builder.setPositiveButton(<span class="string">"continue"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">            handler.proceed();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    builder.setNegativeButton(<span class="string">"cancel"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">            handler.cancel();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">final</span> AlertDialog dialog = builder.create();</span><br><span class="line">    dialog.show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>&#8194;&#8194;&#8194;&#8194;本以为找到改一下就可以结束了。但是…我查了一下代码，我并没有使用过这个方法！！！我询问了自家SDK的开发工程师，得知SDK中确实使用过此方法，改正之后又发给我了一个新的jar。替换之后，再次打包提审，再次被拒。<br><br>&#8194;&#8194;&#8194;&#8194;懵了~后来在网上看到有人说umeng分享SDK中的jar有问题，使用如下命令：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ find . -name &#39;*.jar&#39; -exec zipgrep -i onreceivedsslerror &#123;&#125; \;</span><br></pre></td></tr></table></figure><br>&#8194;&#8194;&#8194;&#8194;得出如下输出：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">com&#x2F;umeng&#x2F;socialize&#x2F;view&#x2F;q.class:Binary file (standard input) matches</span><br><span class="line">com&#x2F;umeng&#x2F;socialize&#x2F;view&#x2F;j.class:Binary file (standard input) matches</span><br></pre></td></tr></table></figure><br>&#8194;&#8194;&#8194;&#8194;感人~反正是上Google，也用不到umeng分享了。就直接把分享相关的模块干掉了。以防万一，我把所有用到的jar都查询了一遍，确认无误后。再次提审，通过。美滋滋~</p>
<p>参考文献：<br><br><a href="https://blog.csdn.net/amazing_alex/article/details/71410670" target="_blank" rel="noopener">https://blog.csdn.net/amazing_alex/article/details/71410670</a></p>
<p><a href="https://blog.csdn.net/kingoneyun/article/details/54581764?locationNum=6&amp;fps=1" target="_blank" rel="noopener">https://blog.csdn.net/kingoneyun/article/details/54581764?locationNum=6&amp;fps=1</a></p>
]]></content>
      <tags>
        <tag>Cocos2d</tag>
      </tags>
  </entry>
  <entry>
    <title>重建二叉树</title>
    <url>/2019/03/16/Interview/20190316_001/</url>
    <content><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p><br></p>
<hr>
<p>&#8194;&#8194;&#8194;&#8194;输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。</p>
<hr>
<p><br></p>
<ul>
<li>前序遍历的顺序为：根左右</li>
<li>中序遍历的顺序为：左根右</li>
</ul>
<h3 id="主要思路：递归"><a href="#主要思路：递归" class="headerlink" title="主要思路：递归"></a>主要思路：递归</h3><ol>
<li>根据前序遍历的第一个节点确定根节点</li>
<li>在中序遍历中找到根节点的位置</li>
<li>根左边的就是左子树，右边的就是右子树</li>
<li>构建根和左右子树</li>
<li>递归的进行1、2、3和4</li>
</ol>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for binary tree</span></span><br><span class="line"><span class="comment"> * struct TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode *left;</span></span><br><span class="line"><span class="comment"> *     TreeNode *right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) : val(x), left(NULL), right(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">TreeNode* <span class="title">reConstructBinaryTree</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; pre,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; vin)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(pre.<span class="built_in">size</span>() != vin.<span class="built_in">size</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"length not equls"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(pre.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"pre length is 0"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> length = pre.<span class="built_in">size</span>();</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"pre length is "</span> &lt;&lt; length &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//前序遍历的第一个结点是root结点</span></span><br><span class="line">        <span class="keyword">int</span> value = pre[<span class="number">0</span>];</span><br><span class="line">        TreeNode *root = <span class="keyword">new</span> TreeNode(value);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"this root is "</span> &lt;&lt; root-&gt;val &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//然后再中序遍历中找到根的位置 左边的就是左子树 右边的就是右子树</span></span><br><span class="line">        <span class="keyword">int</span> rootIdx = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(;rootIdx &lt; length; rootIdx ++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(vin[rootIdx] == value)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"the root at "</span> &lt;&lt; rootIdx &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(rootIdx &gt;= length)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"can't find root (value = "</span> &lt;&lt; value &lt;&lt; <span class="string">") in vin"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//确定左子树的长度 和 右子树的长度</span></span><br><span class="line">        <span class="keyword">int</span> leftLength = rootIdx;</span><br><span class="line">        <span class="keyword">int</span> rightLength = length - rootIdx - <span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">        vector&lt;int&gt; preLeft(leftLength), inLeft(leftLength);</span><br><span class="line">        vector&lt;int&gt; preRight(rightLength), inRight(rightLength);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i &lt; rootIdx)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//左子树</span></span><br><span class="line">                <span class="comment">//前序遍历的第一个节点是根结点，因此是i+1</span></span><br><span class="line">                preLeft[i] = pre[i + <span class="number">1</span>];</span><br><span class="line">                inLeft[i] = vin[i];</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; preLeft[i] &lt;&lt; inLeft[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i &gt; rootIdx)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//右子树</span></span><br><span class="line">                preRight[i - rootIdx - <span class="number">1</span>] = pre[i];</span><br><span class="line">                inRight[i - rootIdx - <span class="number">1</span>] = vin[i];</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; preRight[i] &lt;&lt; inRight[i] &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"left tree is"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; leftLength; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; preLeft[i] &lt;&lt; <span class="string">" "</span> &lt;&lt; inLeft[i] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"right tree is"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rightLength; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; preRight[i] &lt;&lt; <span class="string">" "</span> &lt;&lt; inRight[i] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        root-&gt;left = reConstructBinaryTree(preLeft, inLeft);</span><br><span class="line">        root-&gt;right = reConstructBinaryTree(preRight, inRight);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Interview</tag>
      </tags>
  </entry>
  <entry>
    <title>Cocos2d-X2.2.6版本添加图片后缀名</title>
    <url>/2018/03/31/Cocos2d-X/%E5%90%8E%E7%BC%80%E5%90%8D/</url>
    <content><![CDATA[<!--&#8194;&#8194;&#8194;&#8194;年前遇到一件特别扯淡的事情，因为项目初期的热更新模式没有设计好。采用的是解压方式，下载的热更新压缩包解压之后就留在手机内存卡里了，导致资源直接漏在外边，结果有些安卓手机的相册会把游戏资源图片检索出来，因为图片是加密过的，所以检索到相册中并不能正常显示，结果被一个傻X手机厂商发现了（因为在该手机厂商的应用商店上架了，具体不点名了）。因为游戏中每个功能模块需要的图片资源都是单独放在一个目录下的，而且游戏上线了两年了，模块比较多，导致文件夹也很多，结果相册是按照文件夹检索的，相册里多出了好几个文件夹，渠道技术客服说会把他们的相册搞崩溃（手机是有多垃圾，多了两个文件夹，相册就会崩溃），其实不然，我专门找了他家的手机试了一下，一点问题都没有。我前去询问，结果他们就改口了，说了一堆反正就是必须改，没商量。后来我问把文件夹隐藏掉可以么，并且还找了一个TX的游戏给他们示例，结果他说那款游戏也有问题，还没来得及下架呢，呵呵了。我就知道是故意找茬了，毕竟年底了么，为了KPI。那我改就是了。于是我把所有图片的PNG后缀名全部改了。啰嗦了这么多，切入正题。-->
<p>&#8194;&#8194;&#8194;&#8194;本以为Cocos是把所有文件转换成二进制数据加载进内存的，所以代码中应该不去管后缀名了，然后我把图片更换png扩展名为metek，加密脚本中添加了新扩展名。CCFileUtils中也添加了新扩展名，用于解密流程中。一切准备就绪，发现安卓设备还是不能识别新扩展名。跟了一下代码，发现CCTextureeCache中computeImageFormatType和addImage方法中，通过eImageFormat变量的赋值为图片类型扩展名的枚举值。然后我在png的if条件中加入了新的扩展名后，发现还是无法解析出图片。于是，我打印了图片文件的头，发现标识头不是PNG格式，这时我开始怀疑是解密流程有问题。但是，因为单独加密的文件替换到iOS包中，是可以解析出图片的。这点可以证明加密流程是没有问题的。应该是android和ios走的读取文件并解密的接口不对。最终发现android走的是CCFileUitlsAndroid文件中的接口，后来在该文件中发现了这个数组。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">char</span> decodeSuffix[][<span class="number">50</span>] = &#123; <span class="string">".lua"</span>, <span class="string">".png"</span> &#125;;</span><br></pre></td></tr></table></figure>
<p>&#8194;&#8194;&#8194;&#8194;于是，在数组中添加新扩展名后，解密流程就可以识别并解析metek文件了。</p>
]]></content>
      <tags>
        <tag>Cocos2d</tag>
      </tags>
  </entry>
  <entry>
    <title>用两个栈实现队列</title>
    <url>/2019/03/17/Interview/20190317_001/</url>
    <content><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p><br></p>
<hr>
<p>&#8194;&#8194;&#8194;&#8194;用两个栈来实现一个队列，完成队列的Push和Pop操作。 队列中的元素为int类型。</p>
<hr>
<p><br></p>
<h3 id="主要思路："><a href="#主要思路：" class="headerlink" title="主要思路："></a>主要思路：</h3><h4 id="最初思路"><a href="#最初思路" class="headerlink" title="最初思路"></a>最初思路</h4><p>&#8194;&#8194;&#8194;&#8194;因为栈和队列最明显的区别就是，栈是先进后出，而队列是先进先出。所以为了满足这个要求，我最初的思路是用stack1来做入队操作，用stack2来做出队操作。</p>
<ul>
<li>入队，将元素压入stack1</li>
<li>出队，将stack1倒入stack2，弹出栈顶元素，然后再重新倒入stack1</li>
</ul>
<h4 id="优化思路"><a href="#优化思路" class="headerlink" title="优化思路"></a>优化思路</h4><p>&#8194;&#8194;&#8194;&#8194;最初思路完全只是为了解决这个问题的思路，丝毫没有考虑优化方面。那么仔细思考一下，发现是不是有可以优化的地方呢。首先，最初思路有个小细节可以优化一下，那就是在出队时，stack1的栈底元素可以不用压入stack2（只倒入stack1.size( )-1个元素），可直接弹出作为出队元素返回，这样就可以少做一次压栈操作。</p>
<ul>
<li>如果是入队操作，判断stack1是否为空，如果不为空，那么就直接压栈；如果为空，就把stack2倒入stack1中，然后再压栈。</li>
<li>如果是出队操作，判断stack2是否为空，如果不为空，那么就直接出栈；如果为空，就把stack1的元素逐个倒入stack2，把最后一个元素弹出并出队。</li>
</ul>
<h4 id="最后解决方案"><a href="#最后解决方案" class="headerlink" title="最后解决方案"></a>最后解决方案</h4><p>&#8194;&#8194;&#8194;&#8194;上边的思路都有一个问题，那就是stack1和stack2之间频繁的倒来倒去，效率就显得不是那么好。所以再换一种更好的思路，我们始终用stack1做入队操作，用stack2做出队操作。</p>
<ul>
<li>入队，将元素压入stack1</li>
<li>出队，先判断stack2是否为空，如果不为空，那么弹出stack2的栈顶元素，如果为空，将stack1元素逐个倒入stack2，把最后一个元素弹出并出队。</li>
</ul>
<p>&#8194;&#8194;&#8194;&#8194;这个思路避免了反复“倒”栈，仅在需要时才“倒”一次。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> node)</span> </span>&#123;</span><br><span class="line">        stack1.push(node);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> node = <span class="number">-1</span>;</span><br><span class="line">        <span class="comment">//两个栈都为空时，队列为空</span></span><br><span class="line">        <span class="keyword">if</span>(stack1.empty() == <span class="literal">true</span> &amp;&amp; stack2.empty() == <span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"queue is null"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> node;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(stack2.empty() == <span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="comment">//stack2为空 需要把stack1倒入stack2 </span></span><br><span class="line">                <span class="comment">//然后直接把stack1的最后一个元素弹出 可以减少一次压栈操作</span></span><br><span class="line">                <span class="keyword">int</span> size1 = stack1.<span class="built_in">size</span>();</span><br><span class="line">                <span class="keyword">int</span> length = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span>(stack1.empty() != <span class="literal">true</span> &amp;&amp; length &lt; size1 - <span class="number">1</span>)&#123;</span><br><span class="line">                    node = stack1.top();</span><br><span class="line">                    stack1.pop();</span><br><span class="line">                    stack2.push(node);</span><br><span class="line">                    <span class="built_in">cout</span> &lt;&lt; <span class="string">"push "</span> &lt;&lt; node &lt;&lt; <span class="string">" in stack2"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                    length ++;</span><br><span class="line">                &#125;</span><br><span class="line">                node = stack1.top();</span><br><span class="line">                stack1.pop();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                node = stack2.top();</span><br><span class="line">                stack2.pop();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> node;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; stack1;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; stack2;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Interview</tag>
      </tags>
  </entry>
  <entry>
    <title>斐波那契数列</title>
    <url>/2019/04/14/Interview/20190414_001/</url>
    <content><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p><br></p>
<hr>
<p>&#8194;&#8194;&#8194;&#8194;大家都知道斐波那契数列，现在要求输入一个整数n，请你输出斐波那契数列的第n项（从0开始，第0项为0）。</p>
<hr>
<p><br></p>
<h3 id="通过递归"><a href="#通过递归" class="headerlink" title="通过递归"></a>通过递归</h3><p>&#8194;&#8194;&#8194;&#8194;首先，很容易就想到了递推公式<script type="math/tex">f(n)=f(n-1)+f(n-2)</script>。因此我们马上就能想到使用递归方法，代码如下：<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Fibonacci</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(n &lt;= <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> n;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> Fibonacci(n - <span class="number">1</span>) + Fibonacci(n - <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><br>&#8194;&#8194;&#8194;&#8194;但实际上递归方法的时间复杂度是以n的指数方式增长的。</p>
<h3 id="递归展开-迭代方法"><a href="#递归展开-迭代方法" class="headerlink" title="递归展开-迭代方法"></a>递归展开-迭代方法</h3><p>&#8194;&#8194;&#8194;&#8194;因此我们只能用最普通的方法，将递推公式进行展开。<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Fibonacci</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(n &lt;= <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> n;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> one = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">long</span> two = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">long</span> res = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            res = one + two;</span><br><span class="line"></span><br><span class="line">            one = two;</span><br><span class="line">            two = res;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><br>&#8194;&#8194;&#8194;&#8194;但这还不是最快的方法，下面介绍一种时间复杂度是<script type="math/tex">O(logn)</script>的方法。</p>
<h3 id="O-logn-求Fibonacci数列"><a href="#O-logn-求Fibonacci数列" class="headerlink" title="$O(logn)$求Fibonacci数列"></a>$O(logn)$求Fibonacci数列</h3><p>&#8194;&#8194;&#8194;&#8194;在介绍此方法前，先介绍一个数学公式：</p>
<script type="math/tex; mode=display">
\begin{bmatrix}
f(n)&f(n-1)\\
f(n-1)&f(n-2)\\
\end{bmatrix}
=
\begin{bmatrix}
1&1\\
1&0\\
\end{bmatrix}^{n-1}</script><p>&#8194;&#8194;&#8194;&#8194;有了此公式，求<script type="math/tex">f(n)</script>就只要求出矩阵<script type="math/tex">\begin{bmatrix}1&1\\1&0\\\end{bmatrix}</script>的n-1次方，因为矩阵的n-1次方的第一行第一列就是f(n)。这个公式使用数学归纳法不难得出。那么问题又来了，从0开始到n-1，实际上还是需要n次运算，并不比上面的方法快。但是我们可以利用同底数幂法则：</p>
<script type="math/tex; mode=display">
a^n = a^{\frac{n} {2}}*a^{\frac{n} {2}}</script><p>或</p>
<script type="math/tex; mode=display">
a^n = a^{\frac{n-1} {2}}*a^{\frac{n-1} {2}}</script><p>&#8194;&#8194;&#8194;&#8194;要求n次方，现求出<script type="math/tex">{\frac{n} {2}}</script>次方后，再平方即可。<br>&#8194;&#8194;&#8194;&#8194;用这种方式实现时，首先要定义一个2*2的矩阵。并定义好矩阵的乘法以及幂运算。</p>
<p>&#8194;&#8194;&#8194;&#8194;接下来再介绍一种推理公式：</p>
<script type="math/tex; mode=display">
\begin{align}
f(n) & =f(n-1)+f(n-2)\\
& =2*f(n-2)+f(n-3)\\
& =3*f(n-3)+2*f(n-4)\\
& =5*f(n-4)+3*f(n-5)\\
& =···\\
& =f(k)*f(n-k+1)+f(k-1)*f(n-k)\\
\end{align}</script><p>&#8194;&#8194;&#8194;&#8194;当n=2k和n=2k-1推理公式以及代码如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">int</span> post;<span class="comment">//存Fibonacci(n-1)</span></span><br><span class="line">    <span class="keyword">int</span> pre;<span class="comment">//存Fibonacci(n)</span></span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Fibonacci</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(n &lt;= <span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(n == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            pre = <span class="number">1</span>;</span><br><span class="line">            post = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">return</span> post;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        (1):</span></span><br><span class="line"><span class="comment">        a(n) = a(n-1) + a(n-2)</span></span><br><span class="line"><span class="comment">             = a(n-2) + a(n-3) + a(n-2)</span></span><br><span class="line"><span class="comment">             = 2 * a(n-2) + a(n-3)</span></span><br><span class="line"><span class="comment">             = 3 * a(n-3) + 2 * a(n-4)</span></span><br><span class="line"><span class="comment">             = a(k) * a(n - k + 1) + a(k-1) * a(n-k)</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        奇数情况：</span></span><br><span class="line"><span class="comment">        令n=2k-1;</span></span><br><span class="line"><span class="comment">        由(1)式得：</span></span><br><span class="line"><span class="comment">        a(2k-1) = a(k) * a(k) + a(k-1) * a(k-1)</span></span><br><span class="line"><span class="comment">                = a(k)^2 + a(k-1)^2</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        偶数情况：</span></span><br><span class="line"><span class="comment">        令n=2k;</span></span><br><span class="line"><span class="comment">        由(1)式得：</span></span><br><span class="line"><span class="comment">        a(2k) = a(k) * a(k+1) + a(k-1) * a(k)</span></span><br><span class="line"><span class="comment">                = a(k)^2 + 2 * a(k) * a(k-1)</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//n为奇数，则做减一操作，函数返回时</span></span><br><span class="line">        <span class="comment">//pre: f(n) = f(n-1) + f(n-2)</span></span><br><span class="line">        <span class="comment">//post: f(n-1) = f(n) - f(n-2)</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(n % <span class="number">2</span> == <span class="number">1</span>)&#123;</span><br><span class="line">            Fibonacci(n<span class="number">-1</span>);</span><br><span class="line">            pre = pre + post;</span><br><span class="line">            post = pre - post;</span><br><span class="line">            <span class="keyword">return</span> pre;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//n为偶数，一直除以2</span></span><br><span class="line">        </span><br><span class="line">        Fibonacci(n/<span class="number">2</span>);</span><br><span class="line">        temp = pre;</span><br><span class="line">        pre = pre * pre + <span class="number">2</span> * pre * post;</span><br><span class="line">        post = temp * temp + post * post;</span><br><span class="line">        <span class="keyword">return</span> pre;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Interview</tag>
      </tags>
  </entry>
  <entry>
    <title>旋转数组的最小数字</title>
    <url>/2019/03/19/Interview/20190319_001/</url>
    <content><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p><br></p>
<hr>
<p>&#8194;&#8194;&#8194;&#8194;把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 输入一个非减排序的数组的一个旋转，输出旋转数组的最小元素。 例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。 NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。</p>
<hr>
<p><br></p>
<p>&#8194;&#8194;&#8194;&#8194;要做这道题，首先要讲一下非减排序数组是什么意思。起初以为只要不是减排序就可以，比如说{1,3,2,5,4}。但实际上并不是这样，找了很多资料都没有详细描述。（这里就要吐槽一下国内的某sdn和辣鸡某度，随便搜一下，全是千篇一律的文章，连标点符号都一字不差。有时候都怀疑，这些人就那么喜欢吃人家嘴里吐出来的东西么。）最后终于凭着自己的猜测和模糊的资料，得知原来非减序数组就是每个元素都大于等于后一个元素。例如，{1,2,3,4,5}，{0,1,1,1,1,1}等。</p>
<p>&#8194;&#8194;&#8194;&#8194;主要思路：二分查找</p>
<ul>
<li>可以把旋转数组看作是前后两个非减排序的子数组</li>
<li>用两个指针分别指向数组的第一个元素和最后一个元素</li>
<li>求mid=(low + high) / 2</li>
<li>如果mid位于后边数组的话，mid应该小于high，那么最小值应该在mid及自身之前，所以把high提到mid</li>
<li>如果mid位于前边数组的话，mid应该大于low，那么最小值应该在mid及自身之后，所以把low后移到mid</li>
<li>依次循环找到最小值</li>
<li>但是上边讲非减排序数组也可以是{0,1,1,1,1,1}，那么它的旋转数组{1,1,1,1,0,1}的low、mid和high是相等的，就出现了问题，此时不知道最小值是再前边数组还是后边数组，所以就只能使用顺序查找来找出最小值了</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">minNumberInRotateArray</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; rotateArray)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//可以把旋转数组看作是前后两个非减排序的子数组</span></span><br><span class="line">        <span class="keyword">if</span>(rotateArray.<span class="built_in">size</span>() == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"rotateArray size is 0"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> mid = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> low = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> high = rotateArray.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(rotateArray[low] &lt; rotateArray[high])&#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">"rotateArray is not rotated"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(rotateArray[low] &gt;= rotateArray[high])&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(high - low == <span class="number">1</span>)&#123;</span><br><span class="line">                mid = high;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            mid = (low + high) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(rotateArray[mid] == rotateArray[high] </span><br><span class="line">               &amp;&amp; rotateArray[mid] == rotateArray[low])&#123;</span><br><span class="line">                <span class="comment">//这里无法确定到底是应该取左边子数组 还是取右边子数组 </span></span><br><span class="line">                <span class="comment">//那么就交给顺序查找来做吧</span></span><br><span class="line">                <span class="keyword">return</span> minOrder(rotateArray, low, high);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(rotateArray[mid] &lt;= rotateArray[high])&#123;</span><br><span class="line">                <span class="comment">//如果mid位于后边数组的话 mid应该小于high</span></span><br><span class="line">                <span class="comment">//最小值应该在mid及之前 因为mid后边的值一定不小于自身的</span></span><br><span class="line">                <span class="comment">//那么把high提前到mid位置</span></span><br><span class="line">                high = mid;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(rotateArray[mid] &gt;= rotateArray[low])&#123;</span><br><span class="line">                <span class="comment">//如果mid位于前边数组的话 mid应该大于low</span></span><br><span class="line">                <span class="comment">//最小值应该在mid及之后</span></span><br><span class="line">                <span class="comment">//所以把low后移到mid位置</span></span><br><span class="line">                low = mid;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> rotateArray[mid];</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">minOrder</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;num, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> <span class="built_in">min</span> = num[low];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = low + <span class="number">1</span>; i &lt; high; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">min</span> &gt; num[i])&#123;</span><br><span class="line">                <span class="built_in">min</span> = num[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">min</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Interview</tag>
      </tags>
  </entry>
  <entry>
    <title>二进制中1的个数</title>
    <url>/2019/03/25/Interview/20190325_001/</url>
    <content><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p><br></p>
<hr>
<p>&#8194;&#8194;&#8194;&#8194;输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。</p>
<hr>
<p><br></p>
<h3 id="通过移位测试每一位"><a href="#通过移位测试每一位" class="headerlink" title="通过移位测试每一位"></a>通过移位测试每一位</h3><p>&#8194;&#8194;&#8194;&#8194;首先，很容易能想到的就是通过移位的方法，挨个判断每一位。<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">NumberOf1</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(n &amp; <span class="number">1</span> == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">            n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><br>&#8194;&#8194;&#8194;&#8194;但是这种方法有个致命的缺陷，我们假设通过移位的方式可以获取到其每一位，但并不总是对的。</p>
<h3 id="逻辑右移和算数右移"><a href="#逻辑右移和算数右移" class="headerlink" title="逻辑右移和算数右移"></a>逻辑右移和算数右移</h3><p>&#8194;&#8194;&#8194;&#8194;比如说一个有符号位的8位二进制数11001101，逻辑右移就不管符号位，如果移一位就变成01100110。算数右移要管符号位，右移一位变成10100110。</p>
<ul>
<li>逻辑左移=算数左移，右边统一添0</li>
<li>逻辑右移，左边统一添0</li>
<li>算数右移，左边添加的数和符号有关<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">e.g:1010101010，其中[]位是添加的数字</span><br><span class="line">逻辑左移一位：010101010[0]</span><br><span class="line">算数左移一位：010101010[0]</span><br><span class="line">逻辑右移一位：[0]101010101</span><br><span class="line">算数右移一位：[1]101010101</span><br></pre></td></tr></table></figure>
&#8194;&#8194;&#8194;&#8194;因此如果输入负数，那么我们的算法简单的判断是不是0来终结，就会进入死循环。</li>
</ul>
<h3 id="避免负数移位的死循环"><a href="#避免负数移位的死循环" class="headerlink" title="避免负数移位的死循环"></a>避免负数移位的死循环</h3><p>&#8194;&#8194;&#8194;&#8194;为了负数的时候，避免死循环，我们可以不右移数字n，转而去移动测试位。<br>&#8194;&#8194;&#8194;&#8194;那么思考我们的循环结束条件，flag一直左移（乘以2），当超出表示标识范围的时候，我们就可以终止了，但是这样子的话，最高位的符号没有测试，因此要单独测试，同时由于会溢出，我们的flag需要用long来标识。<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">NumberOf1</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">long</span> flag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(flag &lt;= INT_MAX)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt;n &lt;&lt;<span class="string">" &amp; "</span> &lt;&lt;flag &lt;&lt;<span class="string">" == "</span>&lt;&lt;(n &amp; flag) &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">if</span>((n &amp; flag) != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">            flag &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//  由于循环终结，我们使用的是flag &lt;= INT_MAX</span></span><br><span class="line">        <span class="comment">//  因此前面的循环只会执行31次</span></span><br><span class="line">        <span class="keyword">if</span>((n &amp; flag) != <span class="number">0</span>)    <span class="comment">//  最后测试符号位</span></span><br><span class="line">        &#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><br>&#8194;&#8194;&#8194;&#8194;继续考虑，会发现循环条件还可以精简一下，如果数据发生溢出的话，会被截断，截断以后就是0。<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">NumberOf1</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(flag != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt;n &lt;&lt;<span class="string">" &amp; "</span> &lt;&lt;flag &lt;&lt;<span class="string">" == "</span>&lt;&lt;(n &amp; flag) &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">if</span>((n &amp; flag) != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">            flag &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt;n &lt;&lt;<span class="string">" &amp; "</span> &lt;&lt;flag &lt;&lt;<span class="string">" == "</span>&lt;&lt;(n &amp; flag) &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><br>&#8194;&#8194;&#8194;&#8194;这种方法循环的次数刚好就是二进制的位数，比如32位就循环32次。那么，有没有方法可以做到整数中有多少个1就循环多少次呢。</p>
<h3 id="整数中有几个1就循环几次——lowbit优化"><a href="#整数中有几个1就循环几次——lowbit优化" class="headerlink" title="整数中有几个1就循环几次——lowbit优化"></a>整数中有几个1就循环几次——lowbit优化</h3><p>&#8194;&#8194;&#8194;&#8194;我们分析n与n-1两个数的差别</p>
<ul>
<li>如果n!=0，那么其二进制位中至少有一个1</li>
<li>如果n的最低位是1（奇数），那么n-1正好把这个最低位的1变成0，其他位不变</li>
<li>如果n的最低位是0（偶数），那么假设其右起第一个1位于m位，即m位后面全是0，那么n-1的第m位由1变成0，而第m位后面的所有0均变成1，m位之前的所有位保持不变。<br>&#8194;&#8194;&#8194;&#8194;因此通过分析发现：<br>&#8194;&#8194;&#8194;&#8194;把一个整数n减去1，再和原来的整数做与运算，会把该整数最右边一个1变成0，那么该整数有多少个1，就会进行多少次与运算。</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">NumberOf1</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(n)</span><br><span class="line">        &#123;</span><br><span class="line">            count++;</span><br><span class="line">            n = n &amp; (n - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="STL-bitset"><a href="#STL-bitset" class="headerlink" title="STL-bitset"></a>STL-bitset</h3><p>&#8194;&#8194;&#8194;&#8194;STL中用bitset来方便地管理一系列的bit位，而不用程序员自己来写代码。<br>&#8194;&#8194;&#8194;&#8194;bitset除了可以访问指定下标的bit位以外，还可以把它们作为一个整数来进行某些统计。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">NumberOf1</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="function"><span class="built_in">bitset</span>&lt;32&gt; <span class="title">bit</span><span class="params">(n)</span></span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">bit</span>.count();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Interview</tag>
      </tags>
  </entry>
  <entry>
    <title>跳台阶</title>
    <url>/2019/04/16/Interview/20190416_001/</url>
    <content><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p><br></p>
<hr>
<p>&#8194;&#8194;&#8194;&#8194;一只青蛙一次可以跳上1级台阶，也可以跳上2级。求该青蛙跳上一个n级的台阶总共有多少种跳法（先后次序不同算不同的结果）。</p>
<hr>
<p><br></p>
<h3 id="观察分析"><a href="#观察分析" class="headerlink" title="观察分析"></a>观察分析</h3><p>&#8194;&#8194;&#8194;&#8194;小青蛙一次可以跳1级，也可以跳2级。当有n级台阶：</p>
<ul>
<li>第一次跳1级时，跳法的数目就等于剩下的n-1级台阶的跳法数目</li>
<li>第一次跳2级时，跳法数目就等于剩下n-2级台阶的跳法数目。</li>
</ul>
<p>&#8194;&#8194;&#8194;&#8194;所以n级台阶的总跳法数目等于第一次跳1级和第一次跳2级的数目的和，即f(n)=f(n-1)+f(n-2)。我们会发现这其实就是斐波那契数列。但是，当n=0时，f(n)=0；当n=1时，f(n)=1；当n=2时，f(n)=2，所以当n&gt;2时，f(n)=f(n-1)+f(n-2)。代码如下：<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">jumpFloor</span><span class="params">(<span class="keyword">int</span> number)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(number &lt;= <span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> number;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> first = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> second = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">3</span>; i &lt;= number; i++)&#123;</span><br><span class="line">            res = first + second;</span><br><span class="line">            first = second;</span><br><span class="line">            second = res;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <tags>
        <tag>Interview</tag>
      </tags>
  </entry>
  <entry>
    <title>变态跳台阶</title>
    <url>/2019/04/16/Interview/20190416_002/</url>
    <content><![CDATA[<h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p><br></p>
<hr>
<p>&#8194;&#8194;&#8194;&#8194;一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。求该青蛙跳上一个n级的台阶总共有多少种跳法。</p>
<hr>
<p><br></p>
<h3 id="观察分析"><a href="#观察分析" class="headerlink" title="观察分析"></a>观察分析</h3><p>&#8194;&#8194;&#8194;&#8194;本题目牵扯到一次跳n级的问题，当有n级台阶，分析如下：</p>
<ul>
<li>f(1)=1</li>
<li>f(2)=f(2-1)+f(2-2)   //f(2-1)代表第一次跳1级，f(2-2)代表第一次跳2级，也就是跳n级</li>
<li>f(3)=f(3-1)+f(3-2)+f(3-3)</li>
<li>···</li>
<li>f(n)=f(n-1)+f(n-2)+···+f(n-(n-1))+f(n-n)</li>
</ul>
<p>&#8194;&#8194;&#8194;&#8194;从f(n)=f(n-1)+f(n-2)+···+f(n-(n-1))+f(n-n)可以发现，这就是斐波那契数列求和。那么其实还可以继续化简，将n-1带入f(n)，f(n-1)=f(0)+f(1)+f(2)+···+f(n-2)，f(n)化简得f(n)=f(0)+f(1)+f(2)+···+f(n-2)+f(n-1)，最后得，f(n)=f(n-1)+f(n-1)=2*f(n-1)。代码如下：<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">jumpFloorII</span><span class="params">(<span class="keyword">int</span> number)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(number &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(number == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">2</span>*jumpFloorII(number<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <tags>
        <tag>Interview</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo使用命令生成文章</title>
    <url>/2020/05/20/Other/Hexo%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E7%94%9F%E6%88%90%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<h3 id="Hexo使用命令生成文章"><a href="#Hexo使用命令生成文章" class="headerlink" title="Hexo使用命令生成文章"></a>Hexo使用命令生成文章</h3><ul>
<li>hexo new &lt;文章类型&gt;  [文章名称]</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new post post1 <span class="comment">#在source/_posts/路径下生成post1.md和post1/</span></span><br><span class="line">$ hexo new post -p Path/post2 <span class="comment">#在source/_post/Path/路径下生成post2.md和post2/</span></span><br><span class="line">$ hexo new page page1 <span class="comment">#在source路径下生成page1/index/和page1/index.md</span></span><br><span class="line">$ hexo new draft draft1 <span class="comment">#在source/_draft下生成test/和test.md</span></span><br></pre></td></tr></table></figure>
<p>即，<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Usage: hexo new [layout] &lt;title&gt;</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">Create a new post.</span><br><span class="line"></span><br><span class="line">Arguments:</span><br><span class="line"> layout Post layout. Use post, page, draft or whatever you want.</span><br><span class="line"> title Post title. Wrap it with quotations to escape.</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line"> -p, --path Post path. Customize the path of the post.</span><br><span class="line"> -r, --replace Replace the current post <span class="keyword">if</span> existed.</span><br><span class="line"> -s, --slug Post slug. Customize the URL of the post.</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo文件夹名称大小写问题</title>
    <url>/2020/05/20/Other/Hexo%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8D%E7%A7%B0%E5%A4%A7%E5%B0%8F%E5%86%99%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h3 id="Hexo文件夹名称大小写问题"><a href="#Hexo文件夹名称大小写问题" class="headerlink" title="Hexo文件夹名称大小写问题"></a>Hexo文件夹名称大小写问题</h3><p>因为更换了主题，所以修改了About和Tags文件夹的名称，把首写字母改成了小写，但是因为Git不区分大小写，所以导致修改后，执行如下命令时报错。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">INFO  Copying files from extend <span class="built_in">dirs</span>...</span><br><span class="line">fatal: will not add file <span class="built_in">alias</span> <span class="string">'About/index.html'</span> (<span class="string">'about/index.html'</span> already exists <span class="keyword">in</span> index)</span><br><span class="line">FATAL Something<span class="string">'s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">Error: Spawn failed</span></span><br><span class="line"><span class="string">    at ChildProcess.task.on.code (/Users/jamme/Documents/WorkSpace/GitHub/MyBlog/JammeLee.github.blog/node_modules/hexo-deployer-git/node_modules/hexo-util/lib/spawn.js:51:21)</span></span><br><span class="line"><span class="string">    at ChildProcess.emit (events.js:182:13)</span></span><br><span class="line"><span class="string">    at Process.ChildProcess._handle.onexit (internal/child_process.js:240:12)</span></span><br></pre></td></tr></table></figure></p>
<p>随后，做出了如下尝试，虽然不报错了，但是GitHub pages仓库里出现了两个首写字母分别为大写和小写的文件夹：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> .deploy_git/ <span class="comment">#从blog的工作路径下切入</span></span><br><span class="line">$ git config --<span class="built_in">local</span> core.ignorecase <span class="literal">false</span> <span class="comment">#取消忽略大小写</span></span><br></pre></td></tr></table></figure>
<p>这种情况下可以做如下修改：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ rm -rf about/</span><br><span class="line">$ rm -rf tags/</span><br><span class="line">$ git add -u</span><br><span class="line">$ git commit -m<span class="string">'Remove'</span></span><br><span class="line">$ git push</span><br></pre></td></tr></table></figure>
<p>然后重新切回blog工作路径，执行<code>hexo clean</code>和<code>hexo g</code>，这个时候再次执行<code>hexo d</code>时，就OK了。<br>注：也可从Finder中直接找到<code>.deploy_git/.git</code>文件夹，然后修改其中的<code>config</code>文件。</p>
]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>两数之和</title>
    <url>/2018/04/14/LeetCode/20180718_001/</url>
    <content><![CDATA[<hr>
<p>给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。</p>
<p>你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。</p>
<hr>
<p>示例:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">给定 nums &#x3D; [2, 7, 11, 15], target &#x3D; 9</span><br><span class="line"></span><br><span class="line">因为 nums[0] + nums[1] &#x3D; 2 + 7 &#x3D; 9</span><br><span class="line">所以返回 [0, 1]</span><br></pre></td></tr></table></figure><br>解答：<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">twoSum</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; m;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//暴力法</span></span><br><span class="line">        <span class="comment">// for(int i = 0; i &lt; nums.size(); i ++)</span></span><br><span class="line">        <span class="comment">// &#123;</span></span><br><span class="line">        <span class="comment">//     std::cout &lt;&lt; nums[i] &lt;&lt; endl;</span></span><br><span class="line">        <span class="comment">//     cout &lt;&lt; target &lt;&lt; endl;</span></span><br><span class="line">        <span class="comment">//     for(int j = i + 1; j &lt; nums.size(); j ++)</span></span><br><span class="line">        <span class="comment">//     &#123;</span></span><br><span class="line">        <span class="comment">//         if(nums[j] == target - nums[i])</span></span><br><span class="line">        <span class="comment">//         &#123;</span></span><br><span class="line">        <span class="comment">//             v.push_back(i);</span></span><br><span class="line">        <span class="comment">//             v.push_back(j);</span></span><br><span class="line">        <span class="comment">//             break;</span></span><br><span class="line">        <span class="comment">//         &#125;</span></span><br><span class="line">        <span class="comment">//     &#125;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//一遍哈希表</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> value = target - nums[i];</span><br><span class="line">            <span class="keyword">if</span>(m.<span class="built_in">find</span>(value) != m.<span class="built_in">end</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                v.push_back(m.<span class="built_in">find</span>(value)-&gt;second);</span><br><span class="line">                v.push_back(i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            m.insert(<span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;::value_type(nums[i], i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p><b>第一种暴力法：</b><br><br>&#8194;&#8194;&#8194;&#8194;遍历每个元素，并且查找是否存在一个值与target-nums[i]相等的目标元素。<br><br>&#8194;&#8194;&#8194;&#8194;<b>时间复杂度：</b></p>
<script type="math/tex; mode=display">
O(n^2)</script><p>&#8194;&#8194;&#8194;&#8194;<b>空间复杂度：</b></p>
<script type="math/tex; mode=display">
O(1)</script><p><b>第二种一遍哈希表：</b><br><br>&#8194;&#8194;&#8194;&#8194;在进行迭代并将元素插入到表中之前，我们会先检查表中是否已经存在当前元素所对应的目标元素。如果存在，那么我们已经找到了对应的解，并立即将其返回。<br><br>&#8194;&#8194;&#8194;&#8194;<b>时间复杂度：</b></p>
<script type="math/tex; mode=display">
O(n)</script><p>&#8194;&#8194;&#8194;&#8194;我们只遍历了包含有 n 个元素的列表一次。在表中进行的每次查找只花费 O(1) 的时间。<br><br>&#8194;&#8194;&#8194;&#8194;<b>空间复杂度:</b></p>
<script type="math/tex; mode=display">
O(n)</script><p>&#8194;&#8194;&#8194;&#8194; 所需的额外空间取决于哈希表中存储的元素数量，该表最多需要存储 n 个元素。<br><img src="/2018/04/14/LeetCode/20180718_001/20180718230643.png" alt="images"></p>
]]></content>
      <tags>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>回文链表</title>
    <url>/2018/12/10/LeetCode/20181210_001/</url>
    <content><![CDATA[<hr>
<p>请判断一个链表是否为回文链表。</p>
<hr>
<p>示例1:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：1-&gt;2</span><br><span class="line">输出：false</span><br></pre></td></tr></table></figure><br>示例2:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：1-&gt;2-&gt;2-&gt;1</span><br><span class="line">输出：true</span><br><span class="line">解释：从左向右读，为-121。从右向左读，为121-。因此它不是一个回文数。</span><br></pre></td></tr></table></figure><br>进阶：<br>你能否用 O(n) 时间复杂度和 O(1) 空间复杂度解决此题？<br>解答：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(head == <span class="literal">NULL</span> || head-&gt;next == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">int</span> lenth = <span class="number">0</span>;</span><br><span class="line">        ListNode *ln1, *ln2, *ln3;</span><br><span class="line">        ln1 = ln2 = head;</span><br><span class="line">        ln3 = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="comment">//求出链表长度</span></span><br><span class="line">        <span class="keyword">while</span>(ln1)</span><br><span class="line">        &#123;</span><br><span class="line">            lenth ++;</span><br><span class="line">            ln1 = ln1-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"lenth: "</span> &lt;&lt; lenth &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//将链表的前一半元素逆序</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lenth / <span class="number">2</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ln1 = ln2-&gt;next;</span><br><span class="line">            ln2-&gt;next = ln3;</span><br><span class="line">            ln3 = ln2;</span><br><span class="line">            ln2 = ln1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果长度为奇数</span></span><br><span class="line">        <span class="comment">//让ln2指向自己的next</span></span><br><span class="line">        <span class="comment">//也就是指向从中间元素的后一个元素开始的链表</span></span><br><span class="line">        <span class="comment">//ln3是从中间元素的前一个元素开始的逆序链表</span></span><br><span class="line">        <span class="keyword">if</span>(lenth % <span class="number">2</span> == <span class="number">1</span>) ln2 = ln2-&gt;next;</span><br><span class="line">        <span class="comment">//开始比较ln2和ln3的每个元素知否相等，不相等则返回false</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lenth / <span class="number">2</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ln2-&gt;val != ln3-&gt;val)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                ln2 = ln2-&gt;next;ln3 = ln3-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><b>复杂度分析</b><br></p>
<ul>
<li>时间复杂度：<script type="math/tex">O(n)</script>。</li>
<li>空间复杂度：<script type="math/tex">O(1)</script>。<br><img src="/2018/12/10/LeetCode/20181210_001/20181210222443.png" alt="images"></li>
</ul>
]]></content>
      <tags>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>V2ray+ws+tls</title>
    <url>/2020/03/20/Other/v2ray/</url>
    <content><![CDATA[<h3 id="安装V2Ray"><a href="#安装V2Ray" class="headerlink" title="安装V2Ray"></a>安装V2Ray</h3><p>装机系统版本：CentOs7</p>
<p>首先，安装V2ray：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://install.direct/go.sh)</span><br></pre></td></tr></table></figure></p>
<p>然后，设置开机启动：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> v2ray</span><br></pre></td></tr></table></figure></p>
<h3 id="安装SSL证书"><a href="#安装SSL证书" class="headerlink" title="安装SSL证书"></a>安装SSL证书</h3><p>安装EPEL：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install epel-release</span><br></pre></td></tr></table></figure></p>
<p>安装certbot用于签发SSL证书：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install certbot</span><br></pre></td></tr></table></figure><br>我这里在安装certbot时，出现了错误：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: repos-lax.psychz.net</span><br><span class="line"> * elrepo-kernel: repos.lax-noc.com</span><br><span class="line"> * extras: repos-lax.psychz.net</span><br><span class="line"> * updates: repos-lax.psychz.net</span><br><span class="line">No package certbot available.</span><br><span class="line">Error: Nothing to <span class="keyword">do</span></span><br></pre></td></tr></table></figure></p>
<p>需要执行以下几行命令：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum remove epel-release</span><br><span class="line">yum clean all</span><br><span class="line">yum -y install yum-utils</span><br><span class="line">yum -y install epel-release</span><br></pre></td></tr></table></figure></p>
<p>申请SSL证书：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">certbot certonly --standalone -d example.com</span><br></pre></td></tr></table></figure><br>这里的<em>example.com</em>替换成自己的域名</p>
<p>如果申请成功，证书和私钥路径如下：</p>
<blockquote>
<p>/etc/letsencrypt/live/example.com/fullchain.pem<br>/etc/letsencrypt/live/example.com/privkey.pem</p>
</blockquote>
<h3 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h3><p>添加一个Nginx安装源：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/yum.repos.d/nginx.repo</span><br></pre></td></tr></table></figure></p>
<p>写入：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[nginx]</span><br><span class="line">name=nginx repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/7/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure></p>
<p>写入完成按ESC，然后输入:wq，回车保存并退出</p>
<p>安装Nginx：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install nginx</span><br></pre></td></tr></table></figure></p>
<p>设置开机启动：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> nginx</span><br></pre></td></tr></table></figure></p>
<p>新建一个Nginx站点配置文件：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/nginx/conf.d/v2ray.conf</span><br></pre></td></tr></table></figure></p>
<p>写入如下内容：（注意example.com请更换为自己的域名）<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       443 ssl;</span><br><span class="line">    server_name  example.com;</span><br><span class="line"></span><br><span class="line">    ssl_certificate    /etc/letsencrypt/live/example.com/fullchain.pem;</span><br><span class="line">    ssl_certificate_key    /etc/letsencrypt/live/example.com/privkey.pem;</span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    ssl_session_cache shared:SSL:10m;</span><br><span class="line">    ssl_session_timeout 10m;</span><br><span class="line">    error_page 497  https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line"></span><br><span class="line">location /ray &#123;</span><br><span class="line">    proxy_pass       http://127.0.0.1:10000;</span><br><span class="line">    proxy_redirect             off;</span><br><span class="line">    proxy_http_version         1.1;</span><br><span class="line">    proxy_set_header Upgrade   <span class="variable">$http_upgrade</span>;</span><br><span class="line">    proxy_set_header Connection <span class="string">"upgrade"</span>;</span><br><span class="line">    proxy_set_header Host      <span class="variable">$http_host</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>其中443是网站端口同时也是V2Ray传输端口，127.0.0.1:10000其中的10000是监听端口，可以自行更改，然后防火墙放行所需端口，或者直接关闭防火墙</p>
<h3 id="配置V2Ray服务端"><a href="#配置V2Ray服务端" class="headerlink" title="配置V2Ray服务端"></a>配置V2Ray服务端</h3><p>备份一下v2ray的默认配置文件：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp /etc/v2ray/config.json /etc/v2ray/config.json.bak</span><br></pre></td></tr></table></figure></p>
<p>清空配置文件的内容：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">""</span> &gt; /etc/v2ray/config.json</span><br></pre></td></tr></table></figure></p>
<p>编辑配置文件：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/v2ray/config.json</span><br></pre></td></tr></table></figure></p>
<p>写入如下内容：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"inbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"port"</span>: 10000,</span><br><span class="line">      <span class="string">"listen"</span>:<span class="string">"127.0.0.1"</span>,</span><br><span class="line">      <span class="string">"protocol"</span>: <span class="string">"vmess"</span>,</span><br><span class="line">      <span class="string">"settings"</span>: &#123;</span><br><span class="line">        <span class="string">"clients"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="string">"id"</span>: <span class="string">"你的UUID"</span>,</span><br><span class="line">            <span class="string">"alterId"</span>: 64</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"streamSettings"</span>: &#123;</span><br><span class="line">        <span class="string">"network"</span>: <span class="string">"ws"</span>,</span><br><span class="line">        <span class="string">"wsSettings"</span>: &#123;</span><br><span class="line">        <span class="string">"path"</span>: <span class="string">"/ray"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"outbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"protocol"</span>: <span class="string">"freedom"</span>,</span><br><span class="line">      <span class="string">"settings"</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>注：<code>port</code>字段要用上方nginx配置文件中<code>proxy_pass</code>字段里的端口号，客户端中的端口号要使用nginx中<code>listen</code>字段填写的端口号。<br>UUID可以用这个网站生成：<a href="https://www.uuidgenerator.net" target="_blank" rel="noopener">https://www.uuidgenerator.net</a><br>全部完成之后，关闭系统防火墙或者自行更改配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure>
<p>同时把SELinux也关了：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/selinux/config</span><br><span class="line">SELINUX=disabled</span><br><span class="line">setenforce 0</span><br></pre></td></tr></table></figure></p>
<p>启动v2ray和nginx：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start v2ray</span><br><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure></p>
<p>检查是否运行正常：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status v2ray</span><br><span class="line">systemctl status nginx</span><br></pre></td></tr></table></figure></p>
<p>两个都显示为绿色的active(running)则说明运行成功<br>到此，服务端的配置完成</p>
<h3 id="CloudFlare"><a href="#CloudFlare" class="headerlink" title="CloudFlare"></a>CloudFlare</h3><p>HTTP ports supported by Cloudflare:</p>
<ul>
<li>80</li>
<li>8080</li>
<li>8880</li>
<li>2052</li>
<li>2082</li>
<li>2086</li>
<li><p>2095<br>HTTPS ports supported by Cloudflare:</p>
</li>
<li><p>443</p>
</li>
<li>2053</li>
<li>2083</li>
<li>2087</li>
<li>2096</li>
<li>8443</li>
</ul>
<p>参考文章：<br><a href="https://www.ecsoe.com/archives/38.html" target="_blank" rel="noopener">https://www.ecsoe.com/archives/38.html</a></p>
]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>V2ray</tag>
      </tags>
  </entry>
  <entry>
    <title>回文数</title>
    <url>/2018/11/25/LeetCode/20181125_001/</url>
    <content><![CDATA[<hr>
<p>判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p>
<hr>
<p>示例1:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：121</span><br><span class="line">输出：true</span><br></pre></td></tr></table></figure><br>示例2:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：-121</span><br><span class="line">输出：false</span><br><span class="line">解释：从左向右读，为-121。从右向左读，为121-。因此它不是一个回文数。</span><br></pre></td></tr></table></figure><br>示例3:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入：10</span><br><span class="line">输出：false</span><br><span class="line">解释：从右向左读，为01。因此它不是一个回文数。</span><br></pre></td></tr></table></figure><br>解答：<br><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//x为负数时，肯定不是回文数。x是10的整数倍时，也不是回文数。</span></span><br><span class="line">        <span class="keyword">if</span>(x &lt; <span class="number">0</span> || (x % <span class="number">10</span> == <span class="number">0</span> &amp;&amp; x != <span class="number">0</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//通过x除以10取余，加上reverterNum*10来反转数字，并且让x等于自身除以10的商，这样相当于去掉了x的最后一位。</span></span><br><span class="line">        <span class="comment">//获取到的新数字一定不能大于x，所以循环，当x&lt;reverterNum时跳出循环。</span></span><br><span class="line">        <span class="keyword">int</span> reverterNum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(x &gt; reverterNum)</span><br><span class="line">        &#123;</span><br><span class="line">            reverterNum = reverterNum * <span class="number">10</span> + x % <span class="number">10</span>;</span><br><span class="line">            x /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//这里有两种情况：</span></span><br><span class="line">        <span class="comment">//第一种是传进函数的x是偶数位，那么只有当x==reverterNum时，传入的x才是回文数。</span></span><br><span class="line">        <span class="comment">//另一种时传进函数的x是奇数位，那么要想跳出循环，reverterNum一定是比x要多一位的，所以reverterNum需要除以10取商。</span></span><br><span class="line">        <span class="keyword">return</span> x == reverterNum || x == reverterNum / <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p><b>复杂度分析</b><br></p>
<ul>
<li>时间复杂度：<script type="math/tex">O(log_{10}(n))</script>，对于每次迭代，我们会将输入除以10，因此时间复杂度为<script type="math/tex">O(log_{10}(n))</script>。</li>
<li>空间复杂度：<script type="math/tex">O(1)</script>。</li>
</ul>
]]></content>
      <tags>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>编译添加云风pbc插件的Tolua.dll</title>
    <url>/2019/03/01/Unity3d/20190301_001/</url>
    <content><![CDATA[<p>&#8194;&#8194;&#8194;&#8194;好久没有更新过blog了，最近这两天在搞pbc的相关东西。在此总结记录一下。</p>
<p>&#8194;&#8194;&#8194;&#8194;当初云风写pbc的初衷就是想可以方便的 binding 到动态语言中去用的。这里可以看一下<a href="https://blog.codingnow.com/2011/12/pbc_lua_binding.html" target="_blank" rel="noopener">云风blog</a>中对pbc的介绍。</p>
<p>&#8194;&#8194;&#8194;&#8194;在开始之前，需要做一些准备工作。</p>
<ul>
<li>下载tolua_runtime工程：<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/topameng/tolua_runtime</span><br></pre></td></tr></table></figure></li>
<li>下载pbc工程：<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/cloudwu/pbc</span><br></pre></td></tr></table></figure>
tolua_runtime工程目录结构如下：<br><img src="/2019/03/01/Unity3d/20190301_001/20190301223738.png" alt="images"><br>pbc工程目录结构如下：<br><img src="/2019/03/01/Unity3d/20190301_001/20190301223901.png" alt="images"></li>
</ul>
<p>&#8194;&#8194;&#8194;&#8194;准备工作完成之后，把pbc整个工程拷贝到tolua_runtime工程中。如果在Windows平台编译，需要先下载<a href="http://msys2.github.io/ " target="_blank" rel="noopener">Msys2</a>（<a href="http://repo.msys2.org/distrib/x86_64/msys2-x86_64-20150916.exe" target="_blank" rel="noopener"> 64位</a>）</p>
<ul>
<li>NDK 版本:android-ndk-r10e 默认安装到 D:/android-ndk-r10e<br><a href="https://dl.google.com/android/repository/android-ndk-r10e-windows-x86_64.zip" target="_blank" rel="noopener">https://dl.google.com/android/repository/android-ndk-r10e-windows-x86_64.zip</a></li>
<li>Msys2配置说明<br><a href="https://github.com/topameng/tolua_runtime/wiki" target="_blank" rel="noopener">https://github.com/topameng/tolua_runtime/wiki</a></li>
<li>配置好的Msys2下载<br><a href="https://pan.baidu.com/s/1c2JzvDQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1c2JzvDQ</a><br>备用地址：链接: <a href="https://pan.baidu.com/s/1To5Vft2h8TpM-gdD-KuPbw" target="_blank" rel="noopener">https://pan.baidu.com/s/1To5Vft2h8TpM-gdD-KuPbw</a> 提取码: qfzj</li>
</ul>
<p>&#8194;&#8194;&#8194;&#8194;直接下载配置好的Msys解压在C盘，根据自己要编译的32或64位版本，配置环境变量，我这里使用64位，所以配置C:\msys64\mingw64\bin。编译32位请运行mingw32_shell.bat，64位运行mingw64_shell.bat。<br><img src="/2019/03/01/Unity3d/20190301_001/20190301231625.png" alt="images"><br>&#8194;&#8194;&#8194;&#8194;修改build_win64.sh脚本。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 64 Bit Version</span></span><br><span class="line">mkdir -p window/x86_64</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> luajit-2.1</span><br><span class="line">mingw32-make clean</span><br><span class="line"></span><br><span class="line">mingw32-make BUILDMODE=static CC=<span class="string">"gcc -m64 -O2"</span> XCFLAGS=-DLUAJIT_ENABLE_GC64</span><br><span class="line">cp src/libluajit.a ../window/x86_64/libluajit.a</span><br><span class="line">mingw32-make clean</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line"><span class="comment">#build protobuf yunfeng ban pbc from https://github.com/cloudwu/pbc</span></span><br><span class="line"><span class="built_in">cd</span> pbc</span><br><span class="line">mingw32-make BUILDMODE=static CC=<span class="string">"gcc -m64 -O2"</span> XCFLAGS=-DLUAJIT_ENABLE_GC64</span><br><span class="line">cp build/libpbc.a ../window/x86_64/libpbc.a</span><br><span class="line">mingw32-make clean</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line"></span><br><span class="line">gcc -m64 -O2 -std=gnu99 -shared \</span><br><span class="line"> tolua.c \</span><br><span class="line"> int64.c \</span><br><span class="line"> uint64.c \</span><br><span class="line"> pb.c \</span><br><span class="line"> lpeg.c \</span><br><span class="line"> struct.c \</span><br><span class="line"> cjson/strbuf.c \</span><br><span class="line"> cjson/lua_cjson.c \</span><br><span class="line"> cjson/fpconv.c \</span><br><span class="line"> luasocket/auxiliar.c \</span><br><span class="line"> luasocket/buffer.c \</span><br><span class="line"> luasocket/except.c \</span><br><span class="line"> luasocket/inet.c \</span><br><span class="line"> luasocket/io.c \</span><br><span class="line"> luasocket/luasocket.c \</span><br><span class="line"> luasocket/mime.c \</span><br><span class="line"> luasocket/options.c \</span><br><span class="line"> luasocket/select.c \</span><br><span class="line"> luasocket/tcp.c \</span><br><span class="line"> luasocket/timeout.c \</span><br><span class="line"> luasocket/udp.c \</span><br><span class="line"> luasocket/wsocket.c \</span><br><span class="line"> pbc/binding/lua/pbc-lua.c \</span><br><span class="line"> -o Plugins/x86_64/tolua.dll \</span><br><span class="line"> -I./ \</span><br><span class="line"> -Iluajit-2.1/src \</span><br><span class="line"> -Iluasocket \</span><br><span class="line"> -Ipbc \</span><br><span class="line"> -Ipbc/src \</span><br><span class="line"> -lws2_32 \</span><br><span class="line"> -Wl,--whole-archive window/x86_64/libluajit.a window/x86_64/libpbc.a -Wl,--no-whole-archive -static-libgcc -static-libstdc++</span><br></pre></td></tr></table></figure>
<p>&#8194;&#8194;&#8194;&#8194;然后执行脚本进行编译，32位同理修改。编译成功后，将Plugins/x86_64文件夹下的tolua.dll拷贝到游戏工程中Plugins文件夹对应的位置。<br><img src="/2019/03/01/Unity3d/20190301_001/20190301233519.png" alt="images"><br>&#8194;&#8194;&#8194;&#8194;如果到这里就以为结束了，那就大错特错了。此时如果直接运行游戏工程，在require “protobuf.lua”时，会出现找不到”protobuf.c”的错误。还有以下两步：</p>
<ul>
<li>在LuaDLL.cs添加接口<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">[<span class="meta">DllImport(LUADLL, CallingConvention = CallingConvention.Cdecl)</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">luaopen_protobuf_c</span>(<span class="params">IntPtr L</span>)</span>;</span><br></pre></td></tr></table></figure></li>
<li>在LuaClient.cs中注册pbc<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">OpenLibs</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	luaState.OpenLibs(LuaDLL.luaopen_pb);</span><br><span class="line">	luaState.OpenLibs(LuaDLL.luaopen_struct);</span><br><span class="line">	luaState.OpenLibs(LuaDLL.luaopen_lpeg);</span><br><span class="line">	luaState.OpenLibs(LuaDLL.luaopen_protobuf_c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>&#8194;&#8194;&#8194;&#8194;到这里，将pbc插件编译进tolua.dll基本就完成了。</p>
<p>参考文献：</p>
<ul>
<li><a href="https://blog.codingnow.com/2011/12/pbc_lua_binding.html" target="_blank" rel="noopener">https://blog.codingnow.com/2011/12/pbc_lua_binding.html</a></li>
<li><a href="https://my.oschina.net/chaloongjir/blog/755954" target="_blank" rel="noopener">https://my.oschina.net/chaloongjir/blog/755954</a></li>
</ul>
]]></content>
      <tags>
        <tag>Unity3D</tag>
      </tags>
  </entry>
  <entry>
    <title>C#中的&quot;~&quot;符号</title>
    <url>/2018/04/03/Unity3d/20180403_001/</url>
    <content><![CDATA[<p>&#8194;&#8194;&#8194;&#8194;今天突然觉得大学好像白上了，就像同学说我的那样，“恩，你学费没白交，最起码还有个毕业证。”哈哈哈，真的是应该自嘲一下。虽说引出这个问题的原因是查看了Unity官方教程自动寻路源码，但这也恰恰证明了我的大学基础是多么的不牢固。还是需要花些时间，重新拾起来啊（重头学啊）。</p>
<p>&#8194;&#8194;&#8194;&#8194;因为上大学的主修专业是Java方向，所以没学习过C#（其实Java也基本全还给老师了）。今天抽空查了一下C#的官方文档，官方文档提供的“~”符号解释为：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~ 运算符对操作数执行按位求补运算，其效果相当于反转每一位。按位求补运算符是为 int、uint、long 和 ulong 类型预定义的。</span><br></pre></td></tr></table></figure><br>&#8194;&#8194;&#8194;&#8194;按位取反还记得一些，但是按位求补真的是一点都没有印象了，只知道有补码这个东西，但是知识点、怎么取，当时脑子真的是一片空白。所以找了一些资料重新回头复习了一下。发现补码原来是原码求反再加1。这里要提到几个知识点：</p>
<ul>
<li>正数的补码就是原码。</li>
<li>负数的补码，取对应正数的反码再加1。</li>
<li>补码的补码是原码。</li>
</ul>
<p><img src="/2018/04/03/Unity3d/20180403_001/20180403221137.png" alt="images"></p>
<p>&#8194;&#8194;&#8194;&#8194;那么问题来了，官方文档明明说的是按位求补，但是后边又说其效果相当于反转每一位，那跟求反有什么区别呢。后来又发现了一个知识点：</p>
<ul>
<li>几乎所有的计算机都使用<b>二进制补码</b>表示法来存储位于n位存储单元中的有符号整数。</li>
</ul>
<p>&#8194;&#8194;&#8194;&#8194;也就是说“~”符号取的是计算机中补码的反码，那么正数存在存储单元中的就是本身，求反之后符号位变为1，就变成了负数。这时取反之后的结果还是存在计算机存储单元的<b>补码</b>，要转化为原码还需再求一次补码运算。</p>
<p>&#8194;&#8194;&#8194;&#8194;同理，负数存在存储单元中的应该是自身的补码，也就是对应正数的反码加1。求反之后符号位变为0，就变成了正数，虽然这时取反之后的结果还是存在计算机存储单元的<b>补码</b>，需要再求一次补码才能转换为原码，但是正数的补码就是自身啊。</p>
<p>&#8194;&#8194;&#8194;&#8194;到这里基本就结束了，通过这次的问题，看到了自己上大学时候对学习的一种懈怠，需要努力的地方还有很多。每一次发现自身问题和总结都是进步。</p>
]]></content>
      <tags>
        <tag>Unity3D</tag>
      </tags>
  </entry>
  <entry>
    <title>向量的运算</title>
    <url>/2018/04/14/Unity3d/20180414_001/</url>
    <content><![CDATA[<p>&#8194;&#8194;&#8194;&#8194;今天来总结一下Unity中的向量运算。</p>
<p>&#8194;&#8194;&#8194;&#8194;向量运算分为四种：加减、数乘、点乘和叉乘。下面依次介绍。</p>
<ul>
<li>加减：向量的加法（减法）为各分量分别相加（相减）。在物理上可以用来计算两个力的合力，或者几个速度分量的叠加。</li>
<li>数乘：向量与一个标量相乘称为数乘。数乘可以对向量的长度进行缩放，如果标量大于0，那么向量的方向不变，若标量小于0，则向量的方向会变为反方向。</li>
<li>点乘：两个向量点乘得到一个标量，数值等于两个向量长度相乘后再乘以二者夹角的余弦。通过两个向量点乘结果的符号可以快速的判断两个向量的夹角情况：<ul>
<li>若u·v=0，则向量u、v相互垂直；</li>
<li>若u·v&gt;0，则向量u、v夹角小于90度；</li>
<li>若u·v&lt;0，则向量u、v夹角大于90度。</li>
</ul>
</li>
<li>叉乘：两个向量的叉乘得到一个新的向量，新向量垂直于原来的两个向量（也就是垂直于原来两个向量构成的平面），并且长度等于原向量长度相乘后再乘夹角的正弦值。</li>
</ul>
<p>&#8194;&#8194;&#8194;&#8194;在数学中，叉乘得到的新向量的方向要用“右手法则”判断，如a·b，应用右手的四指先表示向量a的方向，然后掌心方向指向向量B的方向，大拇指所指的方向就是叉乘结果的方向。但是，因为Unity里用的是左手坐标系，所以应用左手的拇指朝向向量a的方向，食指指向向量b的方向，则中指指向的方向为叉乘结果的方向。</p>
<p>&#8194;&#8194;&#8194;&#8194;<font color="red"><b>注意：</b>叉乘不满足交换律。</font></p>
]]></content>
      <tags>
        <tag>Unity3D</tag>
      </tags>
  </entry>
  <entry>
    <title>Cocos2d-x2.2.6版本安卓工程移植AS</title>
    <url>/2018/08/31/Cocos2d-X/20180831_002/</url>
    <content><![CDATA[<p>&#8194;&#8194;&#8194;&#8194;首先，引擎这么老的版本，为什么要搞Android Studio移植呢？呵~还不是因为要发Google Play惹的祸<br><br>&#8194;&#8194;&#8194;&#8194;本来天真的以为还像往常一样，创建一个插件工程，抽离主工程，就可以完事大吉了。后来发现自家SDK的res文件夹下的xml文件无法解析，仔细问了一下SDK开发工程师，他居然告诉我，因为集成了Google服务相关内容，所以必须用Android Studio做开发。这是什么屁规定，不过仔细一想，毕竟都是人家Google自家的东西，就是喂给你个屁，你也要吃下去，并且大喊一声，真香。<br><br><img src="/2018/08/31/Cocos2d-X/20180831_002/20180831231020.gif" alt="images"></p>
<p>&#8194;&#8194;&#8194;&#8194;言归正传，先用eclipse导出gradle，这上网百度就能找得到。</p>
<ol>
<li>根目录下的<b>local.properties</b>文件中，修改好ndk.dir和sdk.dir<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">## This file must *NOT* be checked into Version Control Systems,</span><br><span class="line"># as it contains information specific to your local configuration.</span><br><span class="line">#</span><br><span class="line"># Location of the SDK. This is only used by Gradle.</span><br><span class="line"># For customization when using a Version Control System, please read the</span><br><span class="line"># header note.</span><br><span class="line">#Thu Aug 16 18:48:03 CST 2018</span><br><span class="line">ndk.dir&#x3D;H\:\\tools\\android-ndk-r9d</span><br><span class="line">sdk.dir&#x3D;C\:\\Users\\2069\\AppData\\Local\\Android\\Sdk</span><br></pre></td></tr></table></figure></li>
<li>根目录下的<b>gradle.properties</b>（没有的话自行创建）文件中添加如下代码<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">org.gradle.daemon</span>=<span class="string">true</span></span><br><span class="line"><span class="meta">org.gradle.parallel</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">#org.gradle.jvmargs=-Xmx4096m -XX:MaxPermSize=4096m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8</span></span><br><span class="line"><span class="comment">#这里设置java虚拟机内存</span></span><br><span class="line"><span class="meta">org.gradle.jvmargs</span>=<span class="string">-Xms8192m -Xmx8192m</span></span><br><span class="line"><span class="comment">#这里打开NDK编译</span></span><br><span class="line"><span class="meta">android.useDeprecatedNDK</span> = <span class="string">true</span></span><br></pre></td></tr></table></figure></li>
<li>根目录下的<b>build.gradle</b>文件中，做如下修改<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Top-level build file where you can add configuration options common to all sub-projects/modules.</span></span><br><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        <span class="comment">//这里使用的是国内阿里云提供的库，不会使用科学上网的玩家可以选择使用这个地址来下载，不过可能更新比Google有些延迟，而且有些库可能会找不到。</span></span><br><span class="line">        <span class="comment">//maven&#123; url 'http://maven.aliyun.com/nexus/content/groups/public/' &#125;</span></span><br><span class="line">        <span class="comment">//maven&#123; url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//那么这里使用的就是Google提供的库，需要科学上网才可以访问下载得到。</span></span><br><span class="line">        maven&#123; url <span class="string">'https://dl.google.com/dl/android/maven2/'</span>&#125;</span><br><span class="line">        jcenter()</span><br><span class="line">        google()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">dependencies</span> &#123;</span><br><span class="line">        <span class="comment">//这里我选用和SDK相同的gradle的Android插件版本，每个插件版本都对应着必需的Gradle版本。这里附上官网传送门：https://developer.android.google.cn/studio/releases/gradle-plugin#updating-plugin</span></span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:3.1.4'</span></span><br><span class="line">        <span class="comment">//这里可能是因为使用的Google的统计服务，所以应SDK文档的要求，添加了此配置。</span></span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.google.gms:google-services:3.1.0'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">allprojects</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        <span class="comment">//这里同上</span></span><br><span class="line">        <span class="comment">//maven &#123; url 'http://maven.aliyun.com/nexus/content/groups/public/' &#125;</span></span><br><span class="line">        <span class="comment">//maven&#123; url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//这里同上</span></span><br><span class="line">        maven&#123; url <span class="string">'https://dl.google.com/dl/android/maven2/'</span>&#125;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这里根据SDK Demo粘贴</span></span><br><span class="line"><span class="keyword">task</span> clean(type: <span class="keyword">Delete</span>) &#123;</span><br><span class="line">    <span class="keyword">delete</span> rootProject.buildDir</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>根目录下的<b>gradle\wrapper\gradle-wrapper.properties</b>修改如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Tue Aug 14 21:16:23 CST 2018</span><br><span class="line">distributionBase&#x3D;GRADLE_USER_HOME</span><br><span class="line">distributionPath&#x3D;wrapper&#x2F;dists</span><br><span class="line">zipStoreBase&#x3D;GRADLE_USER_HOME</span><br><span class="line">zipStorePath&#x3D;wrapper&#x2F;dists</span><br><span class="line">#这里同样是根据SDK的配置来修改的，具体使用哪个版本，需要根据前边提到的gradle的Android插件版本以及官网地址查询具体应使用的版本。</span><br><span class="line">distributionUrl&#x3D;https\:&#x2F;&#x2F;services.gradle.org&#x2F;distributions&#x2F;gradle-4.4-all.zip</span><br></pre></td></tr></table></figure>
<p>Plugin version | Required Gradle version<br>—-|—-<br>1.0.0 - 1.1.3 | 2.2.1 - 2.3<br>1.2.0 - 1.3.1 | 2.2.1 - 2.9<br>1.5.0 | 2.2.1 - 2.13<br>2.0.0 - 2.1.2 | 2.10 - 2.13<br>2.1.3 - 2.2.3 | 2.14.1+<br>2.3.0+ | 3.3+<br>3.0.0+ | 4.1+<br>3.1.0+ | 4.4+<br>摘自官网（侵删）：<a href="https://developer.android.google.cn/studio/releases/gradle-plugin#updating-plugin" target="_blank" rel="noopener">https://developer.android.google.cn/studio/releases/gradle-plugin#updating-plugin</a></p>
</li>
<li><p>主工程目录下的<b>local.properties</b>、<b>gradle.properties</b>（没有的话自行创建）文件我也做了相关配置，和根目录下相同。这里说一下什么是主工程目录，什么是跟目录，我的工程是这样的，再接入SDK之前，我会把SDK部分单独抽出来，作为一个插件工程，然后游戏部分的相关内容是一个主工程，在eclipse中主工程依赖这个插件工程就OK了。那跟目录顾名思义就是包含Cocos2d相关、SDK相关和游戏资源等的最外层目录，当你使用eclipse导出gradle的时候，你的根目录下会产生一个gradle文件夹。</p>
</li>
<li>主工程目录下的<b>build.gradle</b>导入需要引用的相关jar，<b>compile</b>关键字好像过时了，所以换用了<b>implementation</b>。具体修改及注释如下<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">apply plugin: <span class="string">'android'</span></span><br><span class="line">apply plugin: <span class="string">'com.google.gms.google-services'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">fileTree</span>(<span class="keyword">include</span>: <span class="string">'*.jar'</span>, dir: <span class="string">'libs'</span>)</span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">project</span>(<span class="string">':plugin:protocols:proj.android'</span>)</span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">project</span>(<span class="string">':plugin:plugins:umeng:proj.android'</span>)</span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">project</span>(<span class="string">':plugin:plugins:ZQGameSEA:proj.android'</span>)</span><br><span class="line">    <span class="comment">//compile project(':plugin:plugins:umeng:proj.android')</span></span><br><span class="line">    implementation files(<span class="string">'../../../external/sdk/UMSocial/proj.android/sdk/umeng_social_sdk.jar'</span>)</span><br><span class="line">    implementation files(<span class="string">'../../../external/sdk/UMSocial/proj.android/sdk/httpmime-4.1.3.jar'</span>)</span><br><span class="line">    implementation files(<span class="string">'../../../external/sdk/UMSocial/proj.android/sdk/SocialSDK_QQZone_1.jar'</span>)</span><br><span class="line">    implementation files(<span class="string">'../../../external/sdk/UMSocial/proj.android/sdk/SocialSDK_QQZone_2.jar'</span>)</span><br><span class="line">    implementation files(<span class="string">'../../../external/sdk/UMSocial/proj.android/sdk/SocialSDK_QQZone_3.jar'</span>)</span><br><span class="line">    implementation files(<span class="string">'../../../external/sdk/UMSocial/proj.android/sdk/SocialSDK_Sina.jar'</span>)</span><br><span class="line">    implementation files(<span class="string">'../../../plugin/plugins/umeng/proj.android/libs/umeng_sdk.jar'</span>)</span><br><span class="line">    implementation files(<span class="string">'../../../external/sdk/xg/proj.android/jg_filter_sdk_1.1.jar'</span>)</span><br><span class="line">    implementation files(<span class="string">'../../../external/sdk/xg/proj.android/wup-1.0.0.E-SNAPSHOT.jar'</span>)</span><br><span class="line">    implementation files(<span class="string">'../../../external/sdk/xg/proj.android/Xg_sdk_v2.41_20150915_1121.jar'</span>)</span><br><span class="line">    implementation files(<span class="string">'../../../external/sdk/bugly/proj.android/bugly_1.2.9_release.jar'</span>)</span><br><span class="line">    implementation files(<span class="string">'../../../external/sdk/bugly/proj.android/bugly_cocos2dx_1.2.9_release.jar'</span>)</span><br><span class="line">    <span class="comment">//    implementation files('../../../external/sdk/baiduLocation/proj.android/BaiduLBS_Android.jar')</span></span><br><span class="line">    <span class="comment">//    implementation files('libs/android-support-v4.jar')</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    <span class="comment">//编译工具版本号不能大于下边的构建版本号</span></span><br><span class="line">    compileSdkVersion <span class="number">21</span></span><br><span class="line">    buildToolsVersion <span class="string">'28.0.2'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//这里给Java堆分配最大内存8g</span></span><br><span class="line">    dexOptions &#123;</span><br><span class="line">        incremental <span class="keyword">true</span></span><br><span class="line">        javaMaxHeapSize <span class="string">"8g"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        <span class="comment">//包名</span></span><br><span class="line">        applicationId <span class="string">"com.game.ultramansol_sea"</span></span><br><span class="line">        <span class="comment">//支持最小的Android SDK API版本</span></span><br><span class="line">        minSdkVersion <span class="number">17</span></span><br><span class="line">        <span class="comment">//目标版本</span></span><br><span class="line">        targetSdkVersion <span class="number">21</span></span><br><span class="line">        <span class="comment">//这里和版本号相关的内容同以前在eclipse中的清单文件相同</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">"1.2.22"</span></span><br><span class="line">        <span class="comment">//添加NDK相关配置，moduleName为jni文件夹下的Android.mk的LOCAL_MODULE_FILENAME参数，abiFilters支持的架构。</span></span><br><span class="line">        ndk &#123;</span><br><span class="line">            moduleName <span class="string">"libultraman"</span></span><br><span class="line">            ldLibs <span class="string">"log"</span>, <span class="string">"z"</span>, <span class="string">"m"</span></span><br><span class="line">            abiFilters <span class="string">"armeabi-v7a"</span>, <span class="string">"armeabi"</span></span><br><span class="line">        &#125;</span><br><span class="line">        multiDexEnabled <span class="keyword">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    externalNativeBuild &#123;</span></span><br><span class="line"><span class="comment">//        ndkBuild &#123;</span></span><br><span class="line"><span class="comment">//            path file("jni/Android.mk")</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">sourceSets</span> &#123;</span><br><span class="line">        main &#123;</span><br><span class="line">            manifest.srcFile <span class="string">'AndroidManifest.xml'</span></span><br><span class="line">            java.srcDirs = [<span class="string">'src'</span>]</span><br><span class="line">            resources.srcDirs = [<span class="string">'src'</span>]</span><br><span class="line">            aidl.srcDirs = [<span class="string">'src'</span>]</span><br><span class="line">            renderscript.srcDirs = [<span class="string">'src'</span>]</span><br><span class="line">            res.srcDirs = [<span class="string">'res'</span>]</span><br><span class="line">            assets.srcDirs = [<span class="string">'assets'</span>]</span><br><span class="line">            jni.srcDirs = []<span class="comment">//设置禁止gradle生成Android.mk</span></span><br><span class="line">            jniLibs.srcDirs = [<span class="string">'libs'</span>]<span class="comment">//设置目标的so存放,也就是组装到apk中的so路径</span></span><br><span class="line">            jniLibs.srcDir <span class="string">'../../../;../../../cocos2dx/platform/third_party/android/prebuilt;../../../projects/ultraman/Classes'</span></span><br><span class="line"><span class="comment">//            jni.srcDirs 'jni/hellolua'</span></span><br><span class="line">        <span class="comment">//NDK_PROJECT_PATH =</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Move the tests to tests/java, tests/res, etc...</span></span><br><span class="line">        androidTest.setRoot(<span class="string">'tests'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Move the build types to build-types/&lt;type&gt;</span></span><br><span class="line">        <span class="comment">// For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...</span></span><br><span class="line">        <span class="comment">// This moves them out of them default location under src/&lt;type&gt;/... which would</span></span><br><span class="line">        <span class="comment">// conflict with src/ being used by the main source set.</span></span><br><span class="line">        <span class="comment">// Adding new build types or product flavors should be accompanied</span></span><br><span class="line">        <span class="comment">// by a similar customization.</span></span><br><span class="line">        debug.setRoot(<span class="string">'build-types/debug'</span>)</span><br><span class="line">        release.setRoot(<span class="string">'build-types/release'</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    tasks.withType(JavaCompile) &#123;</span></span><br><span class="line"><span class="comment">//        compileTask -&gt; compileTask.dependsOn 'ndkBuild','copyThirdso', 'copyJniLibs'</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//    task ndkBuild(type: Exec) &#123;</span></span><br><span class="line"><span class="comment">//        def ndkBuildingDir = project.android.ndkDirectory//project.plugins.findPlugin('com.android.application').sdkHandler.getNdkFolder().absolutePath</span></span><br><span class="line"><span class="comment">//        println ndkBuildingDir</span></span><br><span class="line"><span class="comment">//        println 111</span></span><br><span class="line"><span class="comment">//        commandLine "$ndkBuildingDir/ndk-build.cmd", '-C', file('jni').absolutePath,</span></span><br><span class="line"><span class="comment">//                '-j', Runtime.runtime.availableProcessors(),</span></span><br><span class="line"><span class="comment">//                "NDK_OUT=$buildDir/intermediates/ndk/obj",</span></span><br><span class="line"><span class="comment">//                "NDK_APP_DST_DIR=$buildDir/intermediates/ndk/libs/\$(TARGET_ARCH_ABI)"</span></span><br><span class="line"><span class="comment">//    &#125; //设置新的so的生成目录</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    task copyJniLibs(type: Copy) &#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        from fileTree(dir: file(buildDir.absolutePath + '/intermediates/ndk/libs'), include: '**/*.so')</span></span><br><span class="line"><span class="comment">//        into file('libs')</span></span><br><span class="line"><span class="comment">//    &#125;       //将新生成的so拷贝到jniLibs目录</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    task copyThirdso(type: Copy) &#123;</span></span><br><span class="line"><span class="comment">//        from file('jni/prebuilt')</span></span><br><span class="line"><span class="comment">//        into file('libs')</span></span><br><span class="line"><span class="comment">//    &#125;               //将第三方的so拷贝到jniLibs目录</span></span><br><span class="line"></span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="keyword">false</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.txt'</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>设置AS的内存大小，点击<b>Help -&gt; Edit Custom VM Options</b>，弹出studio64.exe.vmoptions文件，在其中插入如下代码，AS右下角的allocated heap size会变成8G。如果没有请尝试重启AS。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># custom Android Studio VM options, see https:&#x2F;&#x2F;developer.android.com&#x2F;studio&#x2F;intro&#x2F;studio-config.html</span><br><span class="line">-Xms8192m</span><br><span class="line">-Xmx8192m</span><br><span class="line">-XX:MaxPermSize&#x3D;8192m</span><br><span class="line">-XX:ReservedCodeCacheSize&#x3D;200m</span><br><span class="line">-XX:+UseCompressedOops</span><br><span class="line">-XX:ReservedCodeCacheSize&#x3D;240m</span><br><span class="line">-XX:+UseConcMarkSweepGC</span><br><span class="line">-XX:SoftRefLRUPolicyMSPerMB&#x3D;50</span><br><span class="line">-Dsun.io.useCanonCaches&#x3D;false</span><br><span class="line">-Djava.net.preferIPv4Stack&#x3D;true</span><br><span class="line">-Djna.nosys&#x3D;true</span><br><span class="line">-Djna.boot.library.path&#x3D;</span><br><span class="line"></span><br><span class="line">-da</span><br></pre></td></tr></table></figure></li>
<li>在目录列表选择<b>Project</b>视图，找到主工程，右键jni文件夹（可能别的文件夹也行），选择<b>Link C++ Project With Gradle</b>，<b>Build System</b>选择<b>ndk-build</b>选项，在<b>Project Path</b>中设置“主工程/jni/Android.mk”路径，选择<b>OK</b>。<br><br><img src="/2018/08/31/Cocos2d-X/20180831_002/20180831231729.png" alt="images"></li>
<li>设置NDK编译工具，<b>File -&gt; Settings -&gt; Tools -&gt; External Tools</b>，点击“+”。<b>Name</b>自己取名，<b>Program</b>为ndk-build.cmd的路径，<b>Arguments</b>为编译时需要的参数“NDK_MODULE_PATH=（自己的NDK_MODULE_PATH）”，<b>Working directory</b>为主工程路径，点击<b>OK</b>。<br><br><img src="/2018/08/31/Cocos2d-X/20180831_002/20180831232144.png" alt="images"></li>
<li><b>Run/Debug Configurations</b>，在下边点击“<b>+</b>”，添加<b>Run External tool</b>，选择刚刚添加的“ndk”工具。如果不打算烧在真机上，想直接打包的话。在打包之前，请记得<b>右键-&gt;External Tools-&gt;ndk</b>，进行NDK编译。</li>
</ol>
<p>&#8194;&#8194;&#8194;&#8194;到此为止，基本结束了配置，可能还会有些小问题，自行百度或者Google应该就可以解决了。还有就是插件工程中以前有引用jar的，别忘记在对应工程下的<b>build.gradle</b>文件中引用。还有就是清单文件的坑，AS中检查可能比较严格，所有插件工程的<b>minSdkVersion</b>和<b>targetSdkVersion</b>必须一致，不然会报错。还有，如果出现多个分包APK并且找不到编译生成的so错误时，可以尝试把<b>Instant Run</b>关掉。</p>
<p>NDK编译相关的官网地址：<a href="https://developer.android.google.cn/studio/projects/add-native-code#ndkCompile" target="_blank" rel="noopener">https://developer.android.google.cn/studio/projects/add-native-code#ndkCompile</a></p>
]]></content>
      <tags>
        <tag>Cocos2d</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Google Play商店中obb文件的加载</title>
    <url>/2018/08/31/Cocos2d-X/20180831_003/</url>
    <content><![CDATA[<p>&#8194;&#8194;&#8194;&#8194;最近搞Google Play的这件事情，真的是焦头烂额。项目太老了。。。根本不支持AS工程，也就别想支持obb文件解析了。<br><br>&#8194;&#8194;&#8194;&#8194;实质上obb文件就是一个ZIP文件。有两种方式可以生成：<br><br>&#8194;&#8194;&#8194;&#8194;一种是Google官方提供的Jobb工具来生成obb文件。工具可以在 Android\sdk\tools\bin文件夹下找到。命令行用法和参数如下：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jobb -d [所有资源的路径] -o [生成的obb名称（请遵循上述命名规则）] -k [打包密码] -pn [包名] -pv [versionCode(跟obb名称的versionCode一致)]</span><br></pre></td></tr></table></figure><br>&#8194;&#8194;&#8194;&#8194;也可以使用该工具对obb文件进行解压：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jobb -d [输出路径] -o [obb文件名] -k [打包所用的密码]</span><br></pre></td></tr></table></figure><br>&#8194;&#8194;&#8194;&#8194;另一种是使用压缩工具，将资源从assets路径下开始压缩，命名方式为<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">main.[versionCode].[packageName].obb</span><br></pre></td></tr></table></figure><br>&#8194;&#8194;&#8194;&#8194;还有一种是使用build.gradle中添加脚本，有兴趣使用此方法的可以自行<a href="www.baidu.com">百度</a>或<a href="www.google.com">Google</a>。因为我使用的是第二种方法。<br><br>&#8194;&#8194;&#8194;&#8194;在使用之前，需要下载一个Google官方提供的库，可以打开Android Studio（<b>File</b> -&gt; <b>Settings</b> -&gt; <b>Appearance &amp; Behavior</b> -&gt; <b>System Settings</b> -&gt; <b>Android SDK</b> -&gt; <b>SDK Tools</b>)，选择<b>Google Play APK Expansion library</b>和<b>Google Play Licensing Library</b>，<b>Apply</b>下载。但这里不建议勾选<b>Google Play APK Expansion library</b>，原因后边详述。（可以在这里<a href="https://github.com/google/play-apk-expansion" target="_blank" rel="noopener">下载</a>）<br><br><img src="/2018/08/31/Cocos2d-X/20180831_003/20180831234902.png" alt="images"><br><br>&#8194;&#8194;&#8194;&#8194;下载完成之后，在<b>C:\Users\xxx\AppData\Local\Android\Sdk\extras\google\market_apk_expansion</b>或者apkx_library中找到zip_file，作为module引用到工程。（apkx_library在使用上面连接下载的目录中）<br><br>&#8194;&#8194;&#8194;&#8194;我们先修改obb文件读取的逻辑。首先修改主activity类，也就是Cocos2dxActivity.java的派生类。<br><!--因为Google官方似乎并没有做维护更新，已经年久失修了--></p>
<hr>
<h4 id="MainActivity-java"><a href="#MainActivity-java" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h4><hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String FATE_OBB_PATH = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getObbFileName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	PackageInfo info = <span class="keyword">null</span>;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		info = <span class="keyword">super</span>.getPackageManager().getPackageInfo(<span class="keyword">super</span>.getPackageName(), <span class="number">0</span>);</span><br><span class="line">		String fileName = <span class="string">"main."</span> + info.versionCode + <span class="string">"."</span> + getPackageName() + <span class="string">".obb"</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> fileName;</span><br><span class="line">	&#125; <span class="keyword">catch</span> (PackageManager.NameNotFoundException e) &#123;</span><br><span class="line">		e.printStackTrace();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getVirtualObbFileFullpath</span><span class="params">()</span></span>&#123;</span><br><span class="line">	File sdcardDir = Environment.getExternalStorageDirectory();</span><br><span class="line">	String _path = getObbDir().getPath() + <span class="string">"/"</span> + getObbFileName();</span><br><span class="line">	Log.e(<span class="string">"===_path==="</span>, _path);</span><br><span class="line">	<span class="keyword">return</span> _path;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span>&#123;</span><br><span class="line">	Log.w(<span class="string">"uuuuuuuuuu"</span>,<span class="string">"onCreate"</span>);</span><br><span class="line"></span><br><span class="line">	FATE_OBB_PATH = getVirtualObbFileFullpath();<span class="comment">//这句需要放在super.onCreate上面</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h4 id="Cocos2dxHelper-java"><a href="#Cocos2dxHelper-java" class="headerlink" title="Cocos2dxHelper.java"></a>Cocos2dxHelper.java</h4><hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ZipResourceFile obbzip = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">final</span> Context pContext, <span class="keyword">final</span> Cocos2dxHelperListener pCocos2dxHelperListener)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// begin--------------------添加代码----------------------------</span></span><br><span class="line">	<span class="comment">//检查obb文件是否存在</span></span><br><span class="line">	<span class="keyword">if</span>(fileIsExists(ultraman.FATE_OBB_PATH))&#123;</span><br><span class="line">		<span class="comment">//存在添加obb路径到cocos中 注意 nativeSetObbPath 方法是需要新添加的 下方会介绍</span></span><br><span class="line">		Cocos2dxHelper.nativeSetObbPath(ultraman.FATE_OBB_PATH);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// end--------------------添加代码----------------------------</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">final</span> ApplicationInfo applicationInfo = pContext.getApplicationInfo();</span><br><span class="line">		</span><br><span class="line">	Cocos2dxHelper.sContext = pContext;</span><br><span class="line">	Cocos2dxHelper.sCocos2dxHelperListener = pCocos2dxHelperListener;</span><br><span class="line"></span><br><span class="line">	Cocos2dxHelper.sPackageName = applicationInfo.packageName;</span><br><span class="line">	Cocos2dxHelper.sFileDirectory = pContext.getFilesDir().getAbsolutePath();</span><br><span class="line">	Cocos2dxHelper.nativeSetApkPath(applicationInfo.sourceDir);</span><br><span class="line"></span><br><span class="line">	Cocos2dxHelper.sCocos2dxAccelerometer = <span class="keyword">new</span> Cocos2dxAccelerometer(pContext);</span><br><span class="line">	Cocos2dxHelper.sCocos2dMusic = <span class="keyword">new</span> Cocos2dxMusic(pContext);</span><br><span class="line">	<span class="keyword">int</span> simultaneousStreams = Cocos2dxSound.MAX_SIMULTANEOUS_STREAMS_DEFAULT;</span><br><span class="line">    <span class="keyword">if</span> (Cocos2dxHelper.getDeviceModel().indexOf(<span class="string">"GT-I9100"</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">        simultaneousStreams = Cocos2dxSound.MAX_SIMULTANEOUS_STREAMS_I9100;</span><br><span class="line">    &#125;</span><br><span class="line">    Cocos2dxHelper.sCocos2dSound = <span class="keyword">new</span> Cocos2dxSound(pContext, simultaneousStreams);</span><br><span class="line">	Cocos2dxHelper.sAssetManager = pContext.getAssets();</span><br><span class="line"></span><br><span class="line">	<span class="comment">//设置压缩包</span></span><br><span class="line">	PackageInfo info = <span class="keyword">null</span>;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		info = pContext.getPackageManager().getPackageInfo(pContext.getPackageName(), <span class="number">0</span>);</span><br><span class="line">		Cocos2dxHelper.obbzip = APKExpansionSupport.getAPKExpansionZipFile(pContext,info.versionCode,<span class="number">0</span>);</span><br><span class="line">	&#125; <span class="keyword">catch</span> (PackageManager.NameNotFoundException e1) &#123;</span><br><span class="line">		e1.printStackTrace();</span><br><span class="line">	&#125; <span class="keyword">catch</span> (IOException e1) &#123;</span><br><span class="line">		e1.printStackTrace();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// end--------------------添加代码----------------------------</span></span><br><span class="line"></span><br><span class="line">	Cocos2dxBitmap.setContext(pContext);</span><br><span class="line">	Cocos2dxETCLoader.setContext(pContext);</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//检查obb文件是否存在</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">fileIsExists</span><span class="params">(String strFile)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">try</span></span><br><span class="line">	&#123;</span><br><span class="line">		File f=<span class="keyword">new</span> File(strFile);</span><br><span class="line">		<span class="keyword">if</span>(!f.exists())</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">catch</span> (Exception e)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//nativeSetObbPath 设置obb路径方法</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title">nativeSetObbPath</span><span class="params">(<span class="keyword">final</span> String pObbPath)</span></span>;</span><br></pre></td></tr></table></figure>
<hr>
<h4 id="Cocos2dxMusic-java-和-Cocos2dxSound-java"><a href="#Cocos2dxMusic-java-和-Cocos2dxSound-java" class="headerlink" title="Cocos2dxMusic.java 和 Cocos2dxSound.java"></a>Cocos2dxMusic.java 和 Cocos2dxSound.java</h4><hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Cocos2dxMusic.java</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> MediaPlayer <span class="title">createMediaplayer</span><span class="params">(<span class="keyword">final</span> String pPath)</span> </span>&#123;</span><br><span class="line">	MediaPlayer mediaPlayer = <span class="keyword">new</span> MediaPlayer();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (pPath.startsWith(<span class="string">"/"</span>)) &#123;</span><br><span class="line">			<span class="keyword">final</span> FileInputStream fis = <span class="keyword">new</span> FileInputStream(pPath);</span><br><span class="line">			mediaPlayer.setDataSource(fis.getFD());</span><br><span class="line">			fis.close();</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		    <span class="comment">//-------------------modify begin-----------------</span></span><br><span class="line">			<span class="keyword">final</span> AssetFileDescriptor assetFileDescritor =  Cocos2dxHelper.obbzip.getAssetFileDescriptor(<span class="string">"assets/"</span>+pPath);</span><br><span class="line">			<span class="keyword">if</span>(assetFileDescritor == <span class="keyword">null</span>) &#123;</span><br><span class="line">				<span class="keyword">final</span> AssetFileDescriptor assetFileDescritor1 = <span class="keyword">this</span>.mContext.getAssets().openFd(pPath);</span><br><span class="line">				mediaPlayer.setDataSource(assetFileDescritor1.getFileDescriptor(), assetFileDescritor1.getStartOffset(), assetFileDescritor1.getLength());</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				mediaPlayer.setDataSource(assetFileDescritor.getFileDescriptor(), assetFileDescritor.getStartOffset(), assetFileDescritor.getLength());</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//-------------------modify end-----------------</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		mediaPlayer.prepare();</span><br><span class="line"></span><br><span class="line">		mediaPlayer.setVolume(<span class="keyword">this</span>.mLeftVolume, <span class="keyword">this</span>.mRightVolume);</span><br><span class="line">	&#125; <span class="keyword">catch</span> (<span class="keyword">final</span> Exception e) &#123;</span><br><span class="line">		mediaPlayer = <span class="keyword">null</span>;</span><br><span class="line">		Log.e(Cocos2dxMusic.TAG, <span class="string">"error: "</span> + e.getMessage(), e);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> mediaPlayer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Cocos2dxSound.java</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">createSoundIDFromAsset</span><span class="params">(<span class="keyword">final</span> String pPath)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> soundID = Cocos2dxSound.INVALID_SOUND_ID;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> (pPath.startsWith(<span class="string">"/"</span>)) &#123;</span><br><span class="line">			soundID = <span class="keyword">this</span>.mSoundPool.load(pPath, <span class="number">0</span>);</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    		<span class="comment">//-------------------modify begin-----------------</span></span><br><span class="line">			<span class="keyword">final</span> AssetFileDescriptor assetFileDescritor =  Cocos2dxHelper.obbzip.getAssetFileDescriptor(<span class="string">"assets/"</span>+pPath);</span><br><span class="line">			<span class="keyword">if</span>(assetFileDescritor == <span class="keyword">null</span>) &#123;</span><br><span class="line">				soundID = <span class="keyword">this</span>.mSoundPool.load(<span class="keyword">this</span>.mContext.getAssets().openFd(pPath), <span class="number">0</span>);</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				soundID = <span class="keyword">this</span>.mSoundPool.load(assetFileDescritor, <span class="number">0</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//-------------------modify end-----------------</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">catch</span> (<span class="keyword">final</span> Exception e) &#123;</span><br><span class="line">		soundID = Cocos2dxSound.INVALID_SOUND_ID;</span><br><span class="line">		Log.e(Cocos2dxSound.TAG, <span class="string">"error: "</span> + e.getMessage(), e);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// mSoundPool.load returns 0 if something goes wrong, for example a file does not exist</span></span><br><span class="line">	<span class="keyword">if</span> (soundID == <span class="number">0</span>) &#123;</span><br><span class="line">		soundID = Cocos2dxSound.INVALID_SOUND_ID;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> soundID;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h4 id="Java-org-cocos2dx-lib-Cocos2dxHelper-cpp"><a href="#Java-org-cocos2dx-lib-Cocos2dxHelper-cpp" class="headerlink" title="Java_org_cocos2dx_lib_Cocos2dxHelper.cpp"></a>Java_org_cocos2dx_lib_Cocos2dxHelper.cpp</h4><hr>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">string</span> g_apkPath;</span><br><span class="line"><span class="comment">//添加obb path</span></span><br><span class="line"><span class="built_in">string</span> g_obbPath;</span><br><span class="line"><span class="comment">//添加设置obbpath 方法</span></span><br><span class="line"> <span class="function">JNIEXPORT <span class="keyword">void</span> JNICALL <span class="title">Java_org_cocos2dx_lib_Cocos2dxHelper_nativeSetObbPath</span><span class="params">(JNIEnv*  env, jobject thiz, jstring obbPath)</span> </span>&#123;</span><br><span class="line">    g_obbPath = JniHelper::jstring2string(obbPath);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//添加获取obbpath 方法</span></span><br><span class="line"><span class="function"><span class="keyword">const</span> <span class="keyword">char</span> * <span class="title">getObbPath</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> g_obbPath.c_str();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h4 id="CCFileUtilsAndroid-cpp"><a href="#CCFileUtilsAndroid-cpp" class="headerlink" title="CCFileUtilsAndroid.cpp"></a>CCFileUtilsAndroid.cpp</h4><hr>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//CCFileUtilsAndroid.h头文件中需要加入 extern const char * getObbPath();方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//在 s_pZipFile 下添加一个 obb zip包解析</span></span><br><span class="line"><span class="keyword">static</span> ZipFile *s_pZipFileobb = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">CCFileUtils* <span class="title">CCFileUtils::sharedFileUtils</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (s_sharedFileUtils == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        s_sharedFileUtils = <span class="keyword">new</span> CCFileUtilsAndroid();</span><br><span class="line">        s_sharedFileUtils-&gt;init();</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">string</span> resourcePath = getApkPath();</span><br><span class="line">        s_pZipFile = <span class="keyword">new</span> ZipFile(resourcePath, <span class="string">"assets/"</span>);</span><br><span class="line">        <span class="comment">// ---------- modify begin -----------</span></span><br><span class="line">        <span class="comment">//获取obb路径</span></span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">string</span> resourcePath_Obb = getObbPath();</span><br><span class="line">        CCLOG(<span class="string">"LJM test CCFileUtilsAndroid::sharedFileUtils resourcePath_Obb: %s"</span>, resourcePath_Obb.c_str());</span><br><span class="line">        <span class="comment">//  创建obbzip</span></span><br><span class="line">        s_pZipFileobb = <span class="keyword">new</span> ZipFile(resourcePath_Obb,<span class="string">"assets/"</span>);</span><br><span class="line">        CCLOG(<span class="string">"LJM test CCFileUtilsAndroid::sharedFileUtils s_pZipFileobb: %p"</span>, s_pZipFileobb);</span><br><span class="line">        <span class="comment">// ---------- modify end -----------</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s_sharedFileUtils;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CCFileUtilsAndroid::~CCFileUtilsAndroid()</span><br><span class="line">&#123;</span><br><span class="line">    CC_SAFE_DELETE(s_pZipFile);</span><br><span class="line">    <span class="comment">//销毁</span></span><br><span class="line">    CC_SAFE_DELETE(s_pZipFileobb);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">CCFileUtilsAndroid::isFileExist</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; strFilePath)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == strFilePath.length())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> bFound = <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Check whether file exists in apk.</span></span><br><span class="line">    CCLOG(<span class="string">"LJM test CCFileUtilsAndroid::isFileExist strFilePath: %s"</span>, strFilePath.c_str());</span><br><span class="line">    <span class="keyword">if</span> (strFilePath[<span class="number">0</span>] != <span class="string">'/'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">string</span> strPath = strFilePath;</span><br><span class="line">        <span class="keyword">if</span> (strPath.find(m_strDefaultResRootPath) != <span class="number">0</span>)</span><br><span class="line">        &#123;<span class="comment">// Didn't find "assets/" at the beginning of the path, adding it.</span></span><br><span class="line">            strPath.insert(<span class="number">0</span>, m_strDefaultResRootPath);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (s_pZipFile-&gt;fileExists(strPath))</span><br><span class="line">        &#123;</span><br><span class="line">            bFound = <span class="literal">true</span>;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="comment">// ---------- modify begin -----------</span></span><br><span class="line">        CCLOG(<span class="string">"LJM test CCFileUtilsAndroid::isFileExist bFound: %d"</span>, bFound);</span><br><span class="line">        <span class="keyword">if</span>(!bFound)&#123;</span><br><span class="line">           </span><br><span class="line">            <span class="keyword">if</span> (s_pZipFileobb-&gt;fileExists(strPath))</span><br><span class="line">            &#123;</span><br><span class="line">                </span><br><span class="line">                bFound = <span class="literal">true</span>;</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">        CCLOG(<span class="string">"LJM test CCFileUtilsAndroid::isFileExist bFound1: %d"</span>, bFound);</span><br><span class="line">        <span class="comment">// ---------- modify end -----------</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        FILE *fp = fopen(strFilePath.c_str(), <span class="string">"r"</span>);</span><br><span class="line">        <span class="keyword">if</span>(fp)</span><br><span class="line">        &#123;</span><br><span class="line">            bFound = <span class="literal">true</span>;</span><br><span class="line">            fclose(fp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> bFound;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span>* <span class="title">CCFileUtilsAndroid::doGetFileData</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* pszFileName, <span class="keyword">const</span> <span class="keyword">char</span>* pszMode, <span class="keyword">unsigned</span> <span class="keyword">long</span> * pSize, <span class="keyword">bool</span> forAsync)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> * pData = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ((! pszFileName) || (! pszMode) || <span class="number">0</span> == <span class="built_in">strlen</span>(pszFileName))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">string</span> fullPath = fullPathForFilename(pszFileName);</span><br><span class="line">    CCLOG(<span class="string">"liuwen test CCFileUtilsAndroid::doGetFileData fullPath: %s"</span>, fullPath.c_str());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (fullPath[<span class="number">0</span>] != <span class="string">'/'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        CCLOG(<span class="string">"LJM test CCFileUtilsAndroid::doGetFileData forAsync: %d"</span>, forAsync);</span><br><span class="line">        <span class="keyword">if</span> (forAsync)</span><br><span class="line">        &#123;</span><br><span class="line">            pData = s_pZipFile-&gt;getFileData(fullPath.c_str(), pSize, s_pZipFile-&gt;_dataThread);</span><br><span class="line">            CCLOG(<span class="string">"LJM test CCFileUtilsAndroid::doGetFileData pData: %p"</span>, pData);</span><br><span class="line">            <span class="comment">// ---------- modify begin -----------</span></span><br><span class="line">            <span class="keyword">if</span> (! pData)</span><br><span class="line">            &#123;</span><br><span class="line">                pData = s_pZipFileobb-&gt;getFileData(fullPath.c_str(), pSize, s_pZipFile-&gt;_dataThread);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//---------- modify end -----------</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            pData = s_pZipFile-&gt;getFileData(fullPath.c_str(), pSize);</span><br><span class="line">            CCLOG(<span class="string">"LJM test CCFileUtilsAndroid::doGetFileData else pData: %p"</span>, pData);</span><br><span class="line">            <span class="comment">// ---------- modify begin -----------</span></span><br><span class="line">            <span class="keyword">if</span> (! pData)</span><br><span class="line">            &#123;</span><br><span class="line">                pData = s_pZipFileobb-&gt;getFileData(fullPath.c_str(), pSize);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//---------- modify end -----------</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// read rrom other path than user set it</span></span><br><span class="line">            <span class="comment">//CCLOG("liuwen test fopen  pszMode: %s", pszMode);</span></span><br><span class="line">            FILE *fp = fopen(fullPath.c_str(), pszMode);</span><br><span class="line">            CC_BREAK_IF(!fp);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">unsigned</span> <span class="keyword">long</span> size;</span><br><span class="line">            fseek(fp,<span class="number">0</span>,SEEK_END);</span><br><span class="line">            size = ftell(fp);</span><br><span class="line">            fseek(fp,<span class="number">0</span>,SEEK_SET);</span><br><span class="line">            pData = <span class="keyword">new</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>[size];</span><br><span class="line">            size = fread(pData,<span class="keyword">sizeof</span>(<span class="keyword">unsigned</span> <span class="keyword">char</span>), size,fp);</span><br><span class="line">            fclose(fp);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//CCLOG("liuwen test fopen  size: %d", size);</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (pSize)</span><br><span class="line">            &#123;</span><br><span class="line">                *pSize = size;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">while</span> (<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! pData)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">string</span> msg = <span class="string">"Get data from file("</span>;</span><br><span class="line">        msg.append(pszFileName).append(<span class="string">") failed!"</span>);</span><br><span class="line">        CCLOG(<span class="string">"%s"</span>, msg.c_str());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//CCLOG("liuwen test fopen  pData not null ");</span></span><br><span class="line">    <span class="keyword">return</span> pData;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>&#8194;&#8194;&#8194;&#8194;至此，读取相关的内容已经修改完毕。下面进行自测：</p>
<ol>
<li>如果手机已经获取root权限，可以下载一个RE文件管理器，把打包好的obb文件放在，<b>/storage/sdcard0/Android/obb/[包名]</b>路径下。</li>
<li>手机没有获取root权限的情况下，可以使用adb命令。adb命令具体怎么配置怎么使用，请<a href="www.baidu.com">这里</a>。<br></li>
</ol>
<p>&#8194;&#8194;&#8194;&#8194;具体命令行：<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ adb push [obb文件路径] &#x2F;storage&#x2F;emulated&#x2F;0&#x2F;Android&#x2F;obb&#x2F;[包名]</span><br></pre></td></tr></table></figure></p>
<p>参考文献：<br><br><a href="https://blog.csdn.net/androidworkor/article/details/70226726" target="_blank" rel="noopener">https://blog.csdn.net/androidworkor/article/details/70226726</a></p>
<p><a href="https://www.jianshu.com/p/de3c53f69925" target="_blank" rel="noopener">https://www.jianshu.com/p/de3c53f69925</a></p>
]]></content>
      <tags>
        <tag>Cocos2d</tag>
      </tags>
  </entry>
  <entry>
    <title>关于Google Play商店中obb文件意外情况下无法下载的处理</title>
    <url>/2018/09/01/Cocos2d-X/20180901_001/</url>
    <content><![CDATA[<p>&#8194;&#8194;&#8194;&#8194;上面讲了如何加载obb文件，相信大家应该也大致知道obb是什么了。<br><br>&#8194;&#8194;&#8194;&#8194;在Google Play后台上传apk的时候，apk大小有一个限制，不能够超过100M（应用我不太清楚，但最起码游戏是这样的），那么对于游戏来说，这可能不是个好消息，因为游戏随随便便就可以超过100M，那么我们需要把资源抽出来，单独打包成obb文件，在后台上传apk的时候，同时上传obb文件。<br><br>&#8194;&#8194;&#8194;&#8194;审核通过之后，用户在Google Play中可以下载到我们的app，商店中显示的实际大小应该是apk+obb的大小，也就是说实际上在帮用户下载apk的同时，Google Play也一起下载了obb。但是Google的官方文档注明，不能保证百分之百成功下载，所以需要开发者在启动app前，判断一下本地是否有相应的obb，如果没有，那么需要重新下载。<br><br>&#8194;&#8194;&#8194;&#8194;那么如何在启动时，判断是否需要下载obb呢。首先要提到之前说的<b>Google Play APK Expansion library</b>和<b>Google Play Licensing Library</b>。上篇文章中描述了如何下载这两个库，但是不推荐使用Android SDK Manager下载到的<b>Google Play APK Expansion library</b>库。因为官方应该已经很久没维护过了，所以有些类已经被废弃掉，不适用新版本的Android SDK。（传送门：<a href="https://github.com/google/play-apk-expansion" target="_blank" rel="noopener">下载</a>）下载之后，我们需要在工程中引用<b>apkx_library</b>、<b>zip_file</b>和<b>market_licensing/library</b>三个module。<a href="https://jammelee.github.io/2018/03/31/Cocos2d-X/20180831_003/" target="_blank" rel="noopener">《关于Google Play商店中obb文件的加载》</a>中已经提到了zip_file，这里不再赘述。<br><br>&#8194;&#8194;&#8194;&#8194;<b style="color:red">注意：</b><b>apkx_library</b>依赖<b>market_licensing/library</b>，所以需要在build.gradle中设置依赖。导入module大的时候不要忘记在setting.gradle中include。<br><br>&#8194;&#8194;&#8194;&#8194;引用后需要修改一些文件：</p>
<hr>
<h4 id="com-google-android-vending-licensing-LicenseChecker类的checkAccess"><a href="#com-google-android-vending-licensing-LicenseChecker类的checkAccess" class="headerlink" title="com.google.android.vending.licensing.LicenseChecker类的checkAccess()"></a>com.google.android.vending.licensing.LicenseChecker类的checkAccess()</h4><hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">checkAccess</span><span class="params">(LicenseCheckerCallback callback)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// If we have a valid recent LICENSED response, we can skip asking</span></span><br><span class="line">    <span class="comment">// Market.</span></span><br><span class="line">    <span class="keyword">if</span> (mPolicy.allowAccess()) &#123;</span><br><span class="line">        Log.i(TAG, <span class="string">"Using cached license response"</span>);</span><br><span class="line">        callback.allow(Policy.LICENSED);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        LicenseValidator validator = <span class="keyword">new</span> LicenseValidator(mPolicy, <span class="keyword">new</span> NullDeviceLimiter(),</span><br><span class="line">                callback, generateNonce(), mPackageName, mVersionCode);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mService == <span class="keyword">null</span>) &#123;</span><br><span class="line">            Log.i(TAG, <span class="string">"Binding to licensing service."</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//------------------modify begin-----------------------</span></span><br><span class="line">                <span class="comment">//delete</span></span><br><span class="line">                <span class="comment">//这段在代码在Android5.0上会抛出IllegalArgumentException</span></span><br><span class="line"><span class="comment">//                    boolean bindResult = mContext</span></span><br><span class="line"><span class="comment">//                            .bindService(</span></span><br><span class="line"><span class="comment">//                                    new Intent(</span></span><br><span class="line"><span class="comment">//                                            new String(</span></span><br><span class="line"><span class="comment">//                                                    Base64.decode("Y29tLmFuZHJvaWQudmVuZGluZy5saWNlbnNpbmcuSUxpY2Vuc2luZ1NlcnZpY2U="))),</span></span><br><span class="line"><span class="comment">//                                    this, // ServiceConnection.</span></span><br><span class="line"><span class="comment">//                                    Context.BIND_AUTO_CREATE);</span></span><br><span class="line">                </span><br><span class="line">                <span class="comment">//add</span></span><br><span class="line">                Intent serviceIntent = <span class="keyword">new</span> Intent(<span class="keyword">new</span> String(Base64.decode(<span class="string">"Y29tLmFuZHJvaWQudmVuZGluZy5saWNlbnNpbmcuSUxpY2Vuc2luZ1NlcnZpY2U="</span>)));</span><br><span class="line">                serviceIntent.setPackage(<span class="string">"com.android.vending"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">boolean</span> bindResult = mContext</span><br><span class="line">                        .bindService(</span><br><span class="line">                                serviceIntent,</span><br><span class="line">                                <span class="keyword">this</span>, <span class="comment">// ServiceConnection.</span></span><br><span class="line">                                Context.BIND_AUTO_CREATE);</span><br><span class="line">                <span class="comment">//------------------modify begin-----------------------</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (bindResult) &#123;</span><br><span class="line">                    mPendingChecks.offer(validator);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    Log.e(TAG, <span class="string">"Could not bind to service."</span>);</span><br><span class="line">                    handleServiceConnectionError(validator);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SecurityException e) &#123;</span><br><span class="line">                callback.applicationError(LicenseCheckerCallback.ERROR_MISSING_PERMISSION);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Base64DecoderException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mPendingChecks.offer(validator);</span><br><span class="line">            runChecks();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h4 id="com-google-android-vending-expansion-downloader-DownloaderClientMarshaller-Stub类的connect"><a href="#com-google-android-vending-expansion-downloader-DownloaderClientMarshaller-Stub类的connect" class="headerlink" title="com.google.android.vending.expansion.downloader.DownloaderClientMarshaller.Stub类的connect()"></a>com.google.android.vending.expansion.downloader.DownloaderClientMarshaller.Stub类的connect()</h4><hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">connect</span><span class="params">(Context c)</span> </span>&#123;</span><br><span class="line">    mContext = c;</span><br><span class="line">    Intent bindIntent = <span class="keyword">new</span> Intent(c, mDownloaderServiceClass);</span><br><span class="line">    bindIntent.putExtra(PARAM_MESSENGER, mMessenger);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * modify</span></span><br><span class="line"><span class="comment">     * Context.BIND_DEBUG_UNBIND</span></span><br><span class="line"><span class="comment">     * Context.BIND_AUTO_CREATE</span></span><br><span class="line"><span class="comment">     * 这里会导致绑定的服务在某些情况下无法启动，服务不启动，IDownloaderClient接口的onServiceConnected()方法就不会执行，mRemoteService为null，从而导致NullPointerException。</span></span><br><span class="line"><span class="comment">     * 虽然在使用mRemoteService前增加对其是否为null的判断可以避免crash，但是下载过程仍然无法监控，无法得到下载的结果。需要将这段代码替换成如下代码。也就是将BIND_DEBUG_UNBIND替换成BIND_AUTO_CREATE。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> ( !c.bindService(bindIntent, mConnection, Context.BIND_AUTO_CREATE) ) &#123;</span><br><span class="line">        <span class="keyword">if</span> ( Constants.LOGVV ) &#123;</span><br><span class="line">            Log.d(Constants.TAG, <span class="string">"Service Unbound"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        mBound = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>&#8194;&#8194;&#8194;&#8194;修改完成后，如果要自己开发下载界面的话，按照apkx_library文件夹中的AndroidManifest.xml添加即可。本文这里使用的是apkx_sample文件夹中提供的demo，AndroidManifest.xml文件也按照demo添加即可。<br><br>&#8194;&#8194;&#8194;&#8194;把src下的java文件和res拷贝到主工程中（如有冲突,自行合并），在主工程的build.gradle中引用这几个support库。<br><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">fileTree</span>(<span class="keyword">include</span>: <span class="string">'*.jar'</span>, dir: <span class="string">'libs'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">project</span>(<span class="string">':plugin:plugins:GooglePlayObbService:downloader_obb'</span>)</span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">project</span>(<span class="string">':plugin:plugins:GooglePlayObbService:market_licensing'</span>)</span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">project</span>(<span class="string">':plugin:plugins:GooglePlayObbService:zip_file'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//-------------add-------------</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:appcompat-v7:26.0.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:design:26.0.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:support-compat:25.2.0'</span></span><br><span class="line">    <span class="comment">//-------------add-------------</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>&#8194;&#8194;&#8194;&#8194;在主工程的AndroidManifest.xml文件中添加如下代码：<br><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.INTERNET"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WAKE_LOCK"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_NETWORK_STATE"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_WIFI_STATE"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Google Play OBB Download Begin--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">"[文件所在包名].SampleDownloaderActivity"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">"portrait"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:theme</span>=<span class="string">"@style/Base.Theme.AppCompat"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">"[文件所在包名].SampleVideoPlayerActivity"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:theme</span>=<span class="string">"@style/VideoFullScreen"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">"portrait"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:configChanges</span>=<span class="string">"orientation|keyboard|keyboardHidden"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"> In order to start the service, it must be uniquely registered with</span></span><br><span class="line"><span class="comment"> the package manager here.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">service</span> <span class="attr">android:name</span>=<span class="string">"[文件所在包名].SampleDownloaderService"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"> In order for the alarm manager to contact the downloader script, the receiver</span></span><br><span class="line"><span class="comment"> must be uniquely registered with the package manager here.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">"[文件所在包名].SampleAlarmReceiver"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">Providers must have a unique authority per application.</span></span><br><span class="line"><span class="comment">Change the android:authorities line to something unique to your</span></span><br><span class="line"><span class="comment">application (such as its package name) if you wish to use the</span></span><br><span class="line"><span class="comment">provider.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">The format will be content://com.example.google.play.apkx/[zipfilepath].</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">provider</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:authorities</span>=<span class="string">"[文件所在包名]"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:exported</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:multiprocess</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">"[文件所在包名].SampleZipFileProvider"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta-data</span> <span class="attr">android:name</span>=<span class="string">"mainVersion"</span> <span class="attr">android:value</span>=<span class="string">"3"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">provider</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Google Play OBB Download End--&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>&#8194;&#8194;&#8194;&#8194;还有几处java文件的修改：</p>
<hr>
<h4 id="MainActivity-java"><a href="#MainActivity-java" class="headerlink" title="MainActivity.java"></a>MainActivity.java</h4><hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span>&#123;</span><br><span class="line">	Log.w(<span class="string">"uuuuuuuuuu"</span>,<span class="string">"onCreate"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// FATE_OBB_PATH是存储obb路径的变量，getVirtualObbFileFullpath()在obb文件读取的文章中讲过</span></span><br><span class="line">	FATE_OBB_PATH = getVirtualObbFileFullpath();<span class="comment">//这句需要放在super.onCreate上面</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//------------add-------------</span></span><br><span class="line">    <span class="comment">//如果obb文件不存在，未能在Google Play中正确下载或是用户删除，则跳转至SampleDownloaderActivity开始下载</span></span><br><span class="line">    File file = <span class="keyword">new</span> File(FATE_OBB_PATH);</span><br><span class="line">    <span class="keyword">if</span> (!file.exists())&#123;</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, SampleDownloaderActivity<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="keyword">this</span>.startActivity(intent);</span><br><span class="line">        <span class="keyword">this</span>.finish();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//------------add-------------</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h4 id="SampleDownloaderActivity-java"><a href="#SampleDownloaderActivity-java" class="headerlink" title="SampleDownloaderActivity.java"></a>SampleDownloaderActivity.java</h4><hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//修改为自己需要的参数</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> XAPKFile[] xAPKS = &#123;</span><br><span class="line">        <span class="keyword">new</span> XAPKFile(</span><br><span class="line">                <span class="keyword">true</span>, <span class="comment">//isMain:是否为主要分包</span></span><br><span class="line">                <span class="number">6</span>, <span class="comment">//fileVersion:其实就是versionCode</span></span><br><span class="line">                <span class="number">182118395L</span> <span class="comment">//fileSize:分包文件字节大小，不知道怎么看的可以在cmd中使用dir命令查看</span></span><br><span class="line">                )</span><br><span class="line">        <span class="comment">// main file only</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>&#8194;&#8194;&#8194;&#8194;在void validateXAPKZipFiles()中，validationTask对象调用execute方法时，我把它加入了UiThread。（虽然不知道有没有用，但是在别的帖子中看到有人说这个问题。于是就加上了。）<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        validationTask.execute(<span class="keyword">new</span> Object());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br>&#8194;&#8194;&#8194;&#8194;加入onResume方法。<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Connect the stub to our service on resume.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> != mDownloaderClientStub) &#123;</span><br><span class="line">        mDownloaderClientStub.connect(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">super</span>.onResume();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>&#8194;&#8194;&#8194;&#8194;startMovie是在验证文件结束后，界面上有一个确定按钮，点击事件中会调用这个方法。应该是demo中的骚操作，但我们这里不需要，所以我改成了以下内容，重新跳转回游戏activity。<br><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startMovie</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// launch the movie player activity</span></span><br><span class="line"><span class="comment">//        Uri mediaUri = Uri.withAppendedPath(SampleZipFileProvider.ASSET_URI,</span></span><br><span class="line"><span class="comment">//                "big_buck_bunny_720p_surround.m4v");</span></span><br><span class="line"><span class="comment">//        Intent intent = new Intent();</span></span><br><span class="line"><span class="comment">//        intent.setData(mediaUri);</span></span><br><span class="line"><span class="comment">//        intent.putExtra(Intent.EXTRA_TITLE, mediaUri.getLastPathSegment());</span></span><br><span class="line"><span class="comment">//        intent.setClass(this, SampleVideoPlayerActivity.class);</span></span><br><span class="line"><span class="comment">//        startActivity(intent);</span></span><br><span class="line"></span><br><span class="line">    Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MainActivity<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    startActivity(intent);</span><br><span class="line">    finish();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<hr>
<h4 id="SampleDownloaderService-java"><a href="#SampleDownloaderService-java" class="headerlink" title="SampleDownloaderService.java"></a>SampleDownloaderService.java</h4><hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//替换为自己的KEY，在Google后台查询自己的RSA公共密钥</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String BASE64_PUBLIC_KEY = <span class="string">"REPLACE THIS WITH YOUR PUBLIC KEY"</span></span><br></pre></td></tr></table></figure>
<hr>
<h4 id="SampleZipFileProvider-java"><a href="#SampleZipFileProvider-java" class="headerlink" title="SampleZipFileProvider.java"></a>SampleZipFileProvider.java</h4><hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// must match what is declared in the Zip content provider in</span></span><br><span class="line"><span class="comment">// the AndroidManifest.xml file</span></span><br><span class="line"><span class="comment">// 这里填写你在AndroidManifest.xml文件中注册此Provider时，填写的android:authorities</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String AUTHORITY = <span class="string">"com.xxx.xxx.xxx"</span>;</span><br></pre></td></tr></table></figure>
<p>&#8194;&#8194;&#8194;&#8194;在依赖这些module的时候，可能会遇到这样一个无法import的问题。<br><br><img src="/2018/09/01/Cocos2d-X/20180901_001/20180901001731.png" alt="images"><br><br>&#8194;&#8194;&#8194;&#8194;请尝试在build.gradle中做如下修改。<br></p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">26</span></span><br><span class="line">    buildToolsVersion <span class="string">'28.0.2'</span></span><br><span class="line">    useLibrary <span class="string">'org.apache.http.legacy'</span>  <span class="comment">//加上这一句</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>&#8194;&#8194;&#8194;&#8194;到此,修改基本完成。在测试之前，请先确认不添加下载逻辑的情况下，使用本地挂载方式，把obb放到<b>/storage/emulated/0/Android/obb/[包名]</b>路径下是否能够正常读取。<br><br>&#8194;&#8194;&#8194;&#8194;在测试下载逻辑之前，请先将手机安装Google Play全家桶。并将已添加为测试账号的Google Play账号在手机上登陆（因为只有测试账号才能看到内测版App），并进入Google Play中下载已提审通过的内测版App。之后如有修改，安装相同签名以及包名的apk即可直接调试，不用再次提交审核。</p>
<p>参考文献：<br><br><a href="https://blog.csdn.net/androidworkor/article/details/70226726" target="_blank" rel="noopener">https://blog.csdn.net/androidworkor/article/details/70226726</a></p>
<p><a href="https://www.jianshu.com/p/de3c53f69925" target="_blank" rel="noopener">https://www.jianshu.com/p/de3c53f69925</a></p>
]]></content>
      <tags>
        <tag>Cocos2d</tag>
      </tags>
  </entry>
  <entry>
    <title>认识Git的工作区和暂存区</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/3.%E8%AE%A4%E8%AF%86Git%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%92%8C%E6%9A%82%E5%AD%98%E5%8C%BA/</url>
    <content><![CDATA[<h3 id="认识Git的工作区和暂存区"><a href="#认识Git的工作区和暂存区" class="headerlink" title="认识Git的工作区和暂存区"></a>认识Git的工作区和暂存区</h3><p>工作区，顾名思义，工作的目录下称作工作区。在工作区中，创建或修改的文件可以通过git add files命令添加至暂存区。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vi a <span class="comment">#在目录下创建一个a文件，并进行编辑</span></span><br><span class="line">$ git status <span class="comment">#查看目录状态</span></span><br><span class="line">On branch master</span><br><span class="line">Untracked files:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to include <span class="keyword">in</span> what will be committed)</span><br><span class="line"></span><br><span class="line">	a</span><br><span class="line"></span><br><span class="line">nothing added to commit but untracked files present (use <span class="string">"git add"</span> to track)</span><br><span class="line">$ git add a <span class="comment">#将a文件添加至暂存区</span></span><br><span class="line">$ git status <span class="comment">#再次查看目录状态</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">				new file:   a</span><br><span class="line"></span><br><span class="line">$ vi a <span class="comment">#再次编辑a文件</span></span><br><span class="line">$ git status <span class="comment">#再次查看目录状态，发现a的状态变成已经被修改</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">				new file:   a</span><br><span class="line"></span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">				modified:   a</span><br><span class="line"></span><br><span class="line">$ git add -u <span class="comment">#把工作区所有已经被git管理的文件一起提交至暂存区 -u代表update</span></span><br><span class="line">$ git status <span class="comment">#再次查看状态</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">				new file:   a</span><br></pre></td></tr></table></figure><br>将所有的创建和修改都添加至暂存区后，可以一并使用git commit -m提交至git版本库中。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git commit -m <span class="string">'学习工作区和暂存区'</span> <span class="comment">#将暂存区的内容一起提交 纳入git的版本库中</span></span><br><span class="line">[master d34df54] 学习工作区和暂存区</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 a</span><br></pre></td></tr></table></figure></p>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>创建Git仓库</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/2.%E5%88%9B%E5%BB%BAGit%E4%BB%93%E5%BA%93/</url>
    <content><![CDATA[<h3 id="创建Git仓库"><a href="#创建Git仓库" class="headerlink" title="创建Git仓库"></a>创建Git仓库</h3><h4 id="两种场景："><a href="#两种场景：" class="headerlink" title="两种场景："></a>两种场景：</h4><p>1.把已有的项目代码纳入Git管理</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> 项目代码所在的文件夹</span><br><span class="line">$ git init</span><br></pre></td></tr></table></figure>
<p>2.新建的项目直接用Git管理<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> 某个文件夹</span><br><span class="line">$ git init your_project <span class="comment">#会在当前路径下创建和项目名称同名的文件夹</span></span><br><span class="line">$ <span class="built_in">cd</span> your_project</span><br></pre></td></tr></table></figure></p>
<h4 id="创建一个仓库，设置local配置"><a href="#创建一个仓库，设置local配置" class="headerlink" title="创建一个仓库，设置local配置"></a>创建一个仓库，设置local配置</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git init LocalTest</span><br><span class="line">Initialized empty Git repository <span class="keyword">in</span> /Users/jamme/Documents/WorkSpace/GitTest/LocalTest/.git/</span><br><span class="line">$ ls</span><br><span class="line">LocalTest</span><br><span class="line">$ <span class="built_in">cd</span> LocalTest/</span><br><span class="line">$ git config --<span class="built_in">local</span> user.name <span class="string">'xxx'</span></span><br><span class="line">$ git config --<span class="built_in">local</span> user.email <span class="string">'xxx@xxx.com'</span></span><br><span class="line">$ git config --<span class="built_in">local</span> --list</span><br><span class="line">core.repositoryformatversion=0</span><br><span class="line">core.filemode=<span class="literal">true</span></span><br><span class="line">core.bare=<span class="literal">false</span></span><br><span class="line">core.logallrefupdates=<span class="literal">true</span></span><br><span class="line">core.ignorecase=<span class="literal">true</span></span><br><span class="line">core.precomposeunicode=<span class="literal">true</span></span><br><span class="line">user.name=xxx</span><br><span class="line">user.email=xxx@xxx.com</span><br></pre></td></tr></table></figure>
<h4 id="提交一个文件，并查看状态及日志"><a href="#提交一个文件，并查看状态及日志" class="headerlink" title="提交一个文件，并查看状态及日志"></a>提交一个文件，并查看状态及日志</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cp ../readme . <span class="comment">#拷贝事先创建好的readme文件到当前目录</span></span><br><span class="line">$ git add readme <span class="comment">#先add readme文件</span></span><br><span class="line">$ git status <span class="comment">#查看当前路径的状态</span></span><br><span class="line">On branch master</span><br><span class="line"></span><br><span class="line">No commits yet</span><br><span class="line"></span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git rm --cached &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">				new file:   readme</span><br><span class="line"></span><br><span class="line">$ git commit -m<span class="string">'Add readme'</span> <span class="comment">#提交readme文件，并在-m后添加提交信息</span></span><br><span class="line">[master (root-commit) 33f7ae4] Add readme</span><br><span class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> create mode 100644 readme</span><br><span class="line">$ git <span class="built_in">log</span> <span class="comment">#查看git日志</span></span><br><span class="line">commit 33f7ae4c4d4da85453ed0077670e242b71d0a621 (HEAD -&gt; master)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add readme</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Git配置</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/1.Git%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h3 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h3><h4 id="Git的三个作用域"><a href="#Git的三个作用域" class="headerlink" title="Git的三个作用域"></a>Git的三个作用域</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --<span class="built_in">local</span> <span class="comment">#缺省等同于local</span></span><br><span class="line">$ git config --global</span><br><span class="line">$ git config --system</span><br></pre></td></tr></table></figure>
<p>显示config的配置，加—list<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --list --<span class="built_in">local</span></span><br><span class="line">$ git config --list --global</span><br><span class="line">$ git config --list --system</span><br></pre></td></tr></table></figure></p>
<h4 id="Git的最小配置"><a href="#Git的最小配置" class="headerlink" title="Git的最小配置"></a>Git的最小配置</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name=name</span><br><span class="line">$ git config --global user.email=xxx.@xx.com</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>查看版本演变历史</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/5.%E6%9F%A5%E7%9C%8B%E7%89%88%E6%9C%AC%E6%BC%94%E5%8F%98%E5%8E%86%E5%8F%B2/</url>
    <content><![CDATA[<h3 id="查看版本演变历史"><a href="#查看版本演变历史" class="headerlink" title="查看版本演变历史"></a>查看版本演变历史</h3><h4 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> <span class="comment">#查看版本历史</span></span><br><span class="line">$ git <span class="built_in">log</span> --oneline <span class="comment">#简洁的查看版本历史</span></span><br><span class="line">4d2bddd (HEAD -&gt; master) rename</span><br><span class="line">d34df54 学习工作区和暂存区</span><br><span class="line">33f7ae4 Add readme</span><br><span class="line">$ git <span class="built_in">log</span> -n2 <span class="comment">#查看最近两次的版本历史</span></span><br><span class="line">commit 4d2bdddf4098e40ce57fdaf04bb862f7bea04918 (HEAD -&gt; master)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:36:15 2019 +0800</span><br><span class="line"></span><br><span class="line">    rename</span><br><span class="line"></span><br><span class="line">commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    学习工作区和暂存区</span><br><span class="line">$ git <span class="built_in">log</span> -n2 --oneline <span class="comment">#可以组合使用 查看最近两次的简洁列表</span></span><br><span class="line">4d2bddd (HEAD -&gt; master) rename</span><br><span class="line">d34df54 学习工作区和暂存区</span><br><span class="line">$ git branch -v <span class="comment">#查看当前分支列表</span></span><br><span class="line">* master 4d2bddd rename</span><br><span class="line">$ git checkout -b temp d34df54beffb33cf6e4f <span class="comment">#创建一个新的临时分支 temp</span></span><br><span class="line">Switched to a new branch <span class="string">'temp'</span></span><br><span class="line">$ vi readme <span class="comment">#修改readme文件内容</span></span><br><span class="line">$ git commit -am <span class="string">'add test'</span> <span class="comment">#将工作区的文件直接提交到版本历史库里</span></span><br><span class="line">[temp 543c5d8] add <span class="built_in">test</span></span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line">$ git branch -av <span class="comment">#查看所有分支</span></span><br><span class="line">  master 4d2bddd rename</span><br><span class="line">* temp   543c5d8 add <span class="built_in">test</span></span><br><span class="line">$ git <span class="built_in">log</span> <span class="comment">#会看到HEAD指针指向了temp分支</span></span><br><span class="line">commit 543c5d84e8b5f2996e1a40745262f39df95eebaf (HEAD -&gt; temp)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 22:12:57 2019 +0800</span><br><span class="line"></span><br><span class="line">    add <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    学习工作区和暂存区</span><br><span class="line"></span><br><span class="line">commit 33f7ae4c4d4da85453ed0077670e242b71d0a621</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add readme</span><br><span class="line">$ git <span class="built_in">log</span> --all <span class="comment">#查看所有分支的日志 HEAD指向temp 还可以看到master分支所指向的位置</span></span><br><span class="line">commit 543c5d84e8b5f2996e1a40745262f39df95eebaf (HEAD -&gt; temp)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 22:12:57 2019 +0800</span><br><span class="line"></span><br><span class="line">    add <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">commit 4d2bdddf4098e40ce57fdaf04bb862f7bea04918 (master)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:36:15 2019 +0800</span><br><span class="line"></span><br><span class="line">    rename</span><br><span class="line"></span><br><span class="line">commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    学习工作区和暂存区</span><br><span class="line"></span><br><span class="line">commit 33f7ae4c4d4da85453ed0077670e242b71d0a621</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add readme</span><br><span class="line">$ git <span class="built_in">log</span> --all --graph <span class="comment">#通过图形化的方式 查看各分支引入的版本</span></span><br><span class="line">* commit 543c5d84e8b5f2996e1a40745262f39df95eebaf (HEAD -&gt; temp)</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Mon Apr 29 22:12:57 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     add <span class="built_in">test</span></span><br><span class="line">|   </span><br><span class="line">| * commit 4d2bdddf4098e40ce57fdaf04bb862f7bea04918 (master)</span><br><span class="line">|/  Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">|   Date:   Mon Apr 29 21:36:15 2019 +0800</span><br><span class="line">|   </span><br><span class="line">|       rename</span><br><span class="line">| </span><br><span class="line">* commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     学习工作区和暂存区</span><br><span class="line">| </span><br><span class="line">* commit 33f7ae4c4d4da85453ed0077670e242b71d0a621</span><br><span class="line">  Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">  Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line">  </span><br><span class="line">      Add readme</span><br><span class="line">$ git <span class="built_in">log</span> --oneline --all <span class="comment">#组合使用 所有分支日志的列表</span></span><br><span class="line">543c5d8 (HEAD -&gt; temp) add <span class="built_in">test</span></span><br><span class="line">4d2bddd (master) rename</span><br><span class="line">d34df54 学习工作区和暂存区</span><br><span class="line">33f7ae4 Add readme</span><br><span class="line">$ git <span class="built_in">log</span> --oneline --all -n3 <span class="comment">#组合使用 指定个数的所有分支日志列表</span></span><br><span class="line">543c5d8 (HEAD -&gt; temp) add <span class="built_in">test</span></span><br><span class="line">4d2bddd (master) rename</span><br><span class="line">d34df54 学习工作区和暂存区</span><br><span class="line">$ git <span class="built_in">log</span> --oneline --all -n3 --graph <span class="comment">#组合使用 指定个数的所有分支日志列表的图形化展示</span></span><br><span class="line">* 543c5d8 (HEAD -&gt; temp) add <span class="built_in">test</span></span><br><span class="line">| * 4d2bddd (master) rename</span><br><span class="line">|/  </span><br><span class="line">* d34df54 学习工作区和暂存区</span><br><span class="line">$ git <span class="built_in">log</span> --oneline --all temp <span class="comment">#虽然指定了temp分支 但是以--all优先</span></span><br><span class="line">543c5d8 (HEAD -&gt; temp) add <span class="built_in">test</span></span><br><span class="line">4d2bddd (master) rename</span><br><span class="line">d34df54 学习工作区和暂存区</span><br><span class="line">33f7ae4 Add readme</span><br><span class="line">$ git <span class="built_in">log</span> --oneline temp <span class="comment">#指定temp分支的日志</span></span><br><span class="line">543c5d8 (HEAD -&gt; temp) add <span class="built_in">test</span></span><br><span class="line">d34df54 学习工作区和暂存区</span><br><span class="line">33f7ae4 Add readme</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>分离头指针情况下的注意事项</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/8.%E5%88%86%E7%A6%BB%E5%A4%B4%E6%8C%87%E9%92%88%E6%83%85%E5%86%B5%E4%B8%8B%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
    <content><![CDATA[<h3 id="分离头指针情况下的注意事项"><a href="#分离头指针情况下的注意事项" class="headerlink" title="分离头指针情况下的注意事项"></a>分离头指针情况下的注意事项</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span></span><br><span class="line">commit 4b6999eecb60df46af36c5409e3737e44b877dd7 (HEAD -&gt; master)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:50:07 2019 +0800</span><br><span class="line"></span><br><span class="line">    create folder and file</span><br><span class="line"></span><br><span class="line">commit 6d4192be4c570363865468870d14f59efaa5521e</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:46:22 2019 +0800</span><br><span class="line"></span><br><span class="line">    create abc</span><br><span class="line"></span><br><span class="line">commit 4d2bdddf4098e40ce57fdaf04bb862f7bea04918</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:36:15 2019 +0800</span><br><span class="line"></span><br><span class="line">    rename</span><br><span class="line"></span><br><span class="line">commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51 (tag: <span class="built_in">test</span>)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    学习工作区和暂存区</span><br><span class="line"></span><br><span class="line">commit 33f7ae4c4d4da85453ed0077670e242b71d0a621</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add readme</span><br><span class="line">$ git checkout 6d4192 <span class="comment">#分离头指针 本意上就是指我们现在正工作在没有分支的状态下 这个时候如果产生commit或者很多变更 假设突然有个任务 有个bug要修复 需要切换到master上去修复 这个时候切换 分离头指针地方做开发的commit没有branch挂钩 就有可能被git当作垃圾清理掉</span></span><br><span class="line">Note: checking out <span class="string">'6d4192'</span>.</span><br><span class="line"></span><br><span class="line">You are <span class="keyword">in</span> <span class="string">'detached HEAD'</span> state. You can look around, make experimental</span><br><span class="line">changes and commit them, and you can discard any commits you make <span class="keyword">in</span> this</span><br><span class="line">state without impacting any branches by performing another checkout.</span><br><span class="line"></span><br><span class="line">If you want to create a new branch to retain commits you create, you may</span><br><span class="line"><span class="keyword">do</span> so (now or later) by using -b with the checkout <span class="built_in">command</span> again. Example:</span><br><span class="line"></span><br><span class="line">  git checkout -b &lt;new-branch-name&gt;</span><br><span class="line"></span><br><span class="line">HEAD is now at 6d4192b create abc</span><br><span class="line">$ vi abc <span class="comment">#修改abc文件</span></span><br><span class="line">$ git status <span class="comment">#查看当前状态 发现git会提示当前头指针没有指向任何分支 是基于6d4192b做的</span></span><br><span class="line">HEAD detached at 6d4192b</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">	modified:   abc</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line">$ git add -u <span class="comment">#将修改添加至暂存区</span></span><br><span class="line">$ git commit -m <span class="string">'Add hello world'</span></span><br><span class="line">[detached HEAD 4e43c01] Add hello world</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line">$ git <span class="built_in">log</span> <span class="comment">#会发现head指针没有指向任何分支 这样就叫分离头指针的状态</span></span><br><span class="line">commit 4e43c01c8f3c76aedd986d598a00b90809a3a588 (HEAD)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 16:33:15 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add hello world</span><br><span class="line"></span><br><span class="line">commit 6d4192be4c570363865468870d14f59efaa5521e</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:46:22 2019 +0800</span><br><span class="line"></span><br><span class="line">    create abc</span><br><span class="line"></span><br><span class="line">commit 4d2bdddf4098e40ce57fdaf04bb862f7bea04918</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:36:15 2019 +0800</span><br><span class="line"></span><br><span class="line">    rename</span><br><span class="line"></span><br><span class="line">commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51 (tag: <span class="built_in">test</span>)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    学习工作区和暂存区</span><br><span class="line"></span><br><span class="line">commit 33f7ae4c4d4da85453ed0077670e242b71d0a621</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add readme</span><br><span class="line">$ git branch -av</span><br><span class="line">* (HEAD detached from 6d4192b) 4e43c01 Add hello world</span><br><span class="line">  master                       4b6999e create folder and file</span><br><span class="line">  temp                         543c5d8 add <span class="built_in">test</span></span><br><span class="line">$ git checkout master <span class="comment">#假设这个时候接到任务 必须要到master去修复问题</span></span><br><span class="line">Warning: you are leaving 1 commit behind, not connected to</span><br><span class="line">any of your branches: <span class="comment">#git提醒你有一个commit在后边，而且没有连接你任何的分支</span></span><br><span class="line"></span><br><span class="line">  4e43c01 Add hello world</span><br><span class="line"></span><br><span class="line">If you want to keep it by creating a new branch, this may be a good time</span><br><span class="line">to <span class="keyword">do</span> so with: <span class="comment">#下边再次提醒 问你要不要为4e43c01创建一个新的分支</span></span><br><span class="line"></span><br><span class="line"> git branch &lt;new-branch-name&gt; 4e43c01</span><br><span class="line"></span><br><span class="line">Switched to branch <span class="string">'master'</span></span><br><span class="line">$ gitk --all <span class="comment">#如图1 会发现找不到commit记录 证明这条commit在git看来是不重要的 就很有可能被git清理掉</span></span><br><span class="line">$ git branch fix_add 4e43c01 <span class="comment">#假设这个时候我们发现这条commit很重要 那么按照上边的提示 创建一个分支出来</span></span><br><span class="line">$ gitk --all <span class="comment">#这个时候再看 就会发现已经有了这条记录 如图2</span></span><br></pre></td></tr></table></figure>
<p><img src="/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/8.%E5%88%86%E7%A6%BB%E5%A4%B4%E6%8C%87%E9%92%88%E6%83%85%E5%86%B5%E4%B8%8B%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/20190519164230.png" alt="imges"></p>
<p><img src="/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/8.%E5%88%86%E7%A6%BB%E5%A4%B4%E6%8C%87%E9%92%88%E6%83%85%E5%86%B5%E4%B8%8B%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/20190519165124.png" alt="img"></p>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>给文件重命名的简便方法</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/4.%E7%BB%99%E6%96%87%E4%BB%B6%E9%87%8D%E5%91%BD%E5%90%8D/</url>
    <content><![CDATA[<h3 id="给文件重命名的简便方法"><a href="#给文件重命名的简便方法" class="headerlink" title="给文件重命名的简便方法"></a>给文件重命名的简便方法</h3><h4 id="通过修改工作区并添加至暂存区的方法重命名"><a href="#通过修改工作区并添加至暂存区的方法重命名" class="headerlink" title="通过修改工作区并添加至暂存区的方法重命名"></a>通过修改工作区并添加至暂存区的方法重命名</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mv readme readme.md <span class="comment">#通过mv命令修改文件名</span></span><br><span class="line">$ git status <span class="comment">#查看当前状态 提示readme被删除 新加了readme.md</span></span><br><span class="line">On branch master</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add/rm &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">				deleted:    readme</span><br><span class="line"></span><br><span class="line">Untracked files:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to include <span class="keyword">in</span> what will be committed)</span><br><span class="line"></span><br><span class="line">				readme.md</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line">$ git add readme.md <span class="comment">#添加readme.md到暂存区</span></span><br><span class="line">$ git rm readme <span class="comment">#删除原来的readme文件</span></span><br><span class="line">rm <span class="string">'readme'</span></span><br><span class="line">$ git status <span class="comment">#查看当前状态 发现git自己识别出这是一个rename操作</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">				renamed:    readme -&gt; readme.md</span><br></pre></td></tr></table></figure>
<h4 id="通过直接使用git命令来修改文件名"><a href="#通过直接使用git命令来修改文件名" class="headerlink" title="通过直接使用git命令来修改文件名"></a>通过直接使用git命令来修改文件名</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git reset --hard <span class="comment">#清除工作区和暂存区所有的修改</span></span><br><span class="line">HEAD is now at d34df54 学习工作区和暂存区</span><br><span class="line">$ git status <span class="comment">#查看当前状态 发现工作区是干净的 没有需要提交的文件</span></span><br><span class="line">On branch master</span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">$ git mv readme readme.md <span class="comment">#使用git mv命令修改文件名</span></span><br><span class="line">$ git status <span class="comment">#查看当前状态 发现和上边的方法结果一致 都是rename操作</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">				renamed:    readme -&gt; readme.md</span><br><span class="line"></span><br><span class="line">$ git commit -m <span class="string">'rename'</span></span><br><span class="line">[master 4d2bddd] rename</span><br><span class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> rename readme =&gt; readme.md (100%)</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>commit、tree、blob三个对象之间的关系</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/7.commit%E3%80%81tree%E3%80%81blob%E4%B8%89%E4%B8%AA%E5%AF%B9%E8%B1%A1%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB/</url>
    <content><![CDATA[<h3 id="commit、tree、blob三个对象之间的关系"><a href="#commit、tree、blob三个对象之间的关系" class="headerlink" title="commit、tree、blob三个对象之间的关系"></a>commit、tree、blob三个对象之间的关系</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span></span><br><span class="line">commit 4b6999eecb60df46af36c5409e3737e44b877dd7 (HEAD -&gt; master)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:50:07 2019 +0800</span><br><span class="line"></span><br><span class="line">    create folder and file</span><br><span class="line"></span><br><span class="line">commit 6d4192be4c570363865468870d14f59efaa5521e</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:46:22 2019 +0800</span><br><span class="line"></span><br><span class="line">    create abc</span><br><span class="line"></span><br><span class="line">commit 4d2bdddf4098e40ce57fdaf04bb862f7bea04918</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:36:15 2019 +0800</span><br><span class="line"></span><br><span class="line">    rename</span><br><span class="line"></span><br><span class="line">commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51 (tag: <span class="built_in">test</span>)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    学习工作区和暂存区</span><br><span class="line"></span><br><span class="line">commit 33f7ae4c4d4da85453ed0077670e242b71d0a621</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add readme</span><br><span class="line">$ git cat-file -p 4b6999ee <span class="comment">#查看一下地址为4b6999ee的commit内容 发现里边有一颗树</span></span><br><span class="line">tree 283144d15658fc8307f3cc01e7c962c3959a0121</span><br><span class="line">parent 6d4192be4c570363865468870d14f59efaa5521e</span><br><span class="line">author xxx &lt;jamme_lee@outlook.com&gt; 1558245007 +0800</span><br><span class="line">committer xxx &lt;jamme_lee@outlook.com&gt; 1558245007 +0800</span><br><span class="line"></span><br><span class="line">create folder and file</span><br><span class="line">$ git cat-file -p 283144d <span class="comment">#查看tree的内容 下边存了a、abc、readme.md文件和folder文件夹</span></span><br><span class="line">100644 blob 64fa4ac5cffbaa8c5b03f26eec62ae6244f2b435	a</span><br><span class="line">100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391	abc</span><br><span class="line">040000 tree c32d14e3847d3a6e6f31261adfb0cb0b334beec5	folder</span><br><span class="line">100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391	readme.md</span><br><span class="line">$ git cat-file -p c32d14e <span class="comment">#再查看folder文件夹的tree 发现内容就是files文件的blob对象</span></span><br><span class="line">100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391	files</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>探秘.git目录</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/6.%E6%8E%A2%E7%A7%98.git%E7%9B%AE%E5%BD%95/</url>
    <content><![CDATA[<h3 id="探秘-git目录"><a href="#探秘-git目录" class="headerlink" title="探秘.git目录"></a>探秘.git目录</h3><p>在此之前，提一下gitk命令，gitk会调出一个git图形界面工具，不具体赘述，可以自己查看。</p>
<h4 id="HEAD文件"><a href="#HEAD文件" class="headerlink" title="HEAD文件"></a>HEAD文件</h4><p>首先打开.git目录<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> .git/ <span class="comment">#在git工程主目录下打开.git目录，.git是个隐藏目录</span></span><br><span class="line">$ ls -la</span><br><span class="line">total 56</span><br><span class="line">drwxr-xr-x  15 jamme  staff  480  5 14 22:49 .</span><br><span class="line">drwxr-xr-x   5 jamme  staff  160  4 29 22:10 ..</span><br><span class="line">-rw-r--r--   1 jamme  staff    9  4 29 22:12 COMMIT_EDITMSG</span><br><span class="line">-rw-r--r--   1 jamme  staff   21  4 29 22:08 HEAD</span><br><span class="line">-rw-r--r--   1 jamme  staff   41  4 29 21:31 ORIG_HEAD</span><br><span class="line">drwxr-xr-x   2 jamme  staff   64  4 28 22:08 branches</span><br><span class="line">-rw-r--r--   1 jamme  staff  191  4 28 22:10 config</span><br><span class="line">-rw-r--r--   1 jamme  staff   73  4 28 22:08 description</span><br><span class="line">-rw-r--r--   1 jamme  staff  375  5 14 22:49 gitk.cache</span><br><span class="line">drwxr-xr-x  13 jamme  staff  416  4 28 22:08 hooks</span><br><span class="line">-rw-r--r--   1 jamme  staff  201  4 29 22:12 index</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 28 22:08 info</span><br><span class="line">drwxr-xr-x   4 jamme  staff  128  4 28 22:19 logs</span><br><span class="line">drwxr-xr-x  20 jamme  staff  640  5 14 22:53 objects</span><br><span class="line">drwxr-xr-x   4 jamme  staff  128  4 28 22:08 refs</span><br><span class="line">$ cat HEAD	<span class="comment">#查看HEAD文件，会发现他是个引用，指向temp分支</span></span><br><span class="line">ref: refs/heads/temp</span><br><span class="line">$ git branch -av	<span class="comment">#查看分支 *代表当前在哪个工作分支</span></span><br><span class="line">  master 4d2bddd rename</span><br><span class="line">* temp   543c5d8 add <span class="built_in">test</span></span><br><span class="line">$ <span class="built_in">cd</span> ..	<span class="comment">#切换到主目录下</span></span><br><span class="line">$ git checkout master	<span class="comment">#切换master分支</span></span><br><span class="line">Switched to branch <span class="string">'master'</span></span><br><span class="line">$ cat .git/HEAD	<span class="comment">#重新查看HEAD文件，发现引用已经指向了master</span></span><br><span class="line">ref: refs/heads/master</span><br></pre></td></tr></table></figure></p>
<h4 id="config文件"><a href="#config文件" class="headerlink" title="config文件"></a>config文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat .git/config </span><br><span class="line">[core]</span><br><span class="line">	repositoryformatversion = 0</span><br><span class="line">	filemode = <span class="literal">true</span></span><br><span class="line">	bare = <span class="literal">false</span></span><br><span class="line">	logallrefupdates = <span class="literal">true</span></span><br><span class="line">	ignorecase = <span class="literal">true</span></span><br><span class="line">	precomposeunicode = <span class="literal">true</span></span><br><span class="line">[user]</span><br><span class="line">	name = xxx</span><br><span class="line">	email = xxx@xxx.com</span><br><span class="line">$ vi .git/config	<span class="comment">#修改user.name</span></span><br><span class="line">$ git config --<span class="built_in">local</span> --list	<span class="comment">#查看local config 发现name已经变了</span></span><br><span class="line">core.repositoryformatversion=0</span><br><span class="line">core.filemode=<span class="literal">true</span></span><br><span class="line">core.bare=<span class="literal">false</span></span><br><span class="line">core.logallrefupdates=<span class="literal">true</span></span><br><span class="line">core.ignorecase=<span class="literal">true</span></span><br><span class="line">core.precomposeunicode=<span class="literal">true</span></span><br><span class="line">user.name=jamme</span><br><span class="line">user.email=xxx@xxx.com</span><br><span class="line">$ git config --<span class="built_in">local</span> user.name	<span class="comment">#用这种方式查看name</span></span><br><span class="line">jamme</span><br><span class="line">$ git config --<span class="built_in">local</span> user.name <span class="string">'xxx'</span> <span class="comment">#修改name</span></span><br><span class="line">$ git config --<span class="built_in">local</span> user.name	<span class="comment">#查看 修改成功</span></span><br><span class="line">xxx</span><br><span class="line">$ cat .git/config	<span class="comment">#再查看config文件 也发生变化</span></span><br><span class="line">[core]</span><br><span class="line">	repositoryformatversion = 0</span><br><span class="line">	filemode = <span class="literal">true</span></span><br><span class="line">	bare = <span class="literal">false</span></span><br><span class="line">	logallrefupdates = <span class="literal">true</span></span><br><span class="line">	ignorecase = <span class="literal">true</span></span><br><span class="line">	precomposeunicode = <span class="literal">true</span></span><br><span class="line">[user]</span><br><span class="line">	name = xxx</span><br><span class="line">	email = xxx@xxx.com</span><br></pre></td></tr></table></figure>
<h4 id="refs目录"><a href="#refs目录" class="headerlink" title="refs目录"></a>refs目录</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> .git/refs/</span><br><span class="line">$ ls -la</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x   4 jamme  staff  128  4 28 22:08 .</span><br><span class="line">drwxr-xr-x  15 jamme  staff  480  5 14 23:14 ..</span><br><span class="line">drwxr-xr-x   4 jamme  staff  128  4 29 22:12 heads	<span class="comment">#分支</span></span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  5 14 22:53 tags		<span class="comment">#tag标签</span></span><br><span class="line">$ <span class="built_in">cd</span> heads/</span><br><span class="line">$ ls -la</span><br><span class="line">total 16</span><br><span class="line">drwxr-xr-x  4 jamme  staff  128  4 29 22:12 .</span><br><span class="line">drwxr-xr-x  4 jamme  staff  128  4 28 22:08 ..</span><br><span class="line">-rw-r--r--  1 jamme  staff   41  4 29 21:36 master		<span class="comment">#master分支</span></span><br><span class="line">-rw-r--r--  1 jamme  staff   41  4 29 22:12 temp		<span class="comment">#temp分支</span></span><br><span class="line">$ cat master</span><br><span class="line">4d2bdddf4098e40ce57fdaf04bb862f7bea04918</span><br><span class="line">$ git cat-file -t 4d2bdddf4098e40ce57fda	<span class="comment">#查看引用的object是什么类型 这里是commit类型</span></span><br><span class="line">commit</span><br><span class="line">$ git branch -av</span><br><span class="line">* master 4d2bddd rename	<span class="comment">#看到这里master指向的地址就是上边master文件中存储的地址</span></span><br><span class="line">  temp   543c5d8 add <span class="built_in">test</span></span><br><span class="line">$ cat temp <span class="comment">#temp文件中存储的地址和上方temp分支指向的地址是一样的 如果较短的hash值可以表示唯一 就可以使用短hash值</span></span><br><span class="line">543c5d84e8b5f2996e1a40745262f39df95eebaf</span><br><span class="line">$ <span class="built_in">cd</span> ../tags/ <span class="comment">#进入refs目录下的tags目录</span></span><br><span class="line">$ ls -la</span><br><span class="line">total 8</span><br><span class="line">drwxr-xr-x  3 jamme  staff   96  5 14 22:53 .</span><br><span class="line">drwxr-xr-x  4 jamme  staff  128  4 28 22:08 ..</span><br><span class="line">-rw-r--r--  1 jamme  staff   41  5 14 22:53 <span class="built_in">test</span></span><br><span class="line">$ cat <span class="built_in">test</span>	<span class="comment">#查看test文件中存储的地址</span></span><br><span class="line">0eaa4776504680c4df3677d5d66a7f4b8f0c5ffe</span><br><span class="line">$ git cat-file -t 0eaa47765	<span class="comment">#查看该地址指向的对象类型 tag类型</span></span><br><span class="line">tag</span><br><span class="line">$ git cat-file -p 0eaa47765	<span class="comment">#查看该地址指向对象的内容</span></span><br><span class="line">object d34df54beffb33cf6e4f4e97d0f0e24f2b676d51</span><br><span class="line"><span class="built_in">type</span> commit</span><br><span class="line">tag <span class="built_in">test</span></span><br><span class="line">tagger xxx &lt;xxx@xxx.com&gt; 1557845639 +0800</span><br><span class="line"></span><br><span class="line">tag <span class="built_in">test</span></span><br><span class="line">$ git cat-file -t d34df5	<span class="comment">#上边地址指向tag对象的内容中 存储的类型实际上是个commit</span></span><br><span class="line">commit</span><br></pre></td></tr></table></figure>
<h4 id="objects目录"><a href="#objects目录" class="headerlink" title="objects目录"></a>objects目录</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> objects/	<span class="comment">#切换到.git目录下的objects目录</span></span><br><span class="line">$ ls -la</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x  20 jamme  staff  640  5 14 22:53 .</span><br><span class="line">drwxr-xr-x  15 jamme  staff  480  5 14 23:14 ..</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  5 14 22:53 0e</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 28 22:19 33</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 21:36 4d</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 22:12 54</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 20:48 5d</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 20:48 64</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 21:02 85</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 20:47 8b</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 20:47 90</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 22:12 9c</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 21:36 9f</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 22:12 c9</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 21:02 d3</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 21:05 dd</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 28 22:17 e6</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 28 22:19 e8</span><br><span class="line">drwxr-xr-x   2 jamme  staff   64  4 28 22:08 info</span><br><span class="line">drwxr-xr-x   2 jamme  staff   64  4 28 22:08 pack	<span class="comment">#如果上边的松散文件夹比较多的情况下 git会自动把他们打包到pack目录下</span></span><br><span class="line">$ <span class="built_in">cd</span> e8/	<span class="comment">#进入e8目录</span></span><br><span class="line">$ ls -la</span><br><span class="line">total 8</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 28 22:19 .</span><br><span class="line">drwxr-xr-x  20 jamme  staff  640  5 14 22:53 ..</span><br><span class="line">-r--r--r--   1 jamme  staff   51  4 28 22:19 0ad49ace82167de62e498622d70377d913c79e	<span class="comment">#这个文件名拼上目录名就是一个地址</span></span><br><span class="line">$ git cat-file -t e80ad49ace82167de62e498622d70377d913c79e	<span class="comment">#查看该地址的类型 是一棵树</span></span><br><span class="line">tree</span><br><span class="line">$ git cat-file -p e80ad49ace82167de62e498622d70377d913c79e	<span class="comment">#查看该地址的内容 blob是文件 文件名叫readme</span></span><br><span class="line">100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391	readme</span><br><span class="line">$ git cat-file -t e69de29bb2d1d64	<span class="comment">#看一下类型 确实是blob</span></span><br><span class="line">blob</span><br><span class="line">$ git cat-file -p e69de29bb2d1d64	<span class="comment">#查看内容 就是文件内写入的内容</span></span><br><span class="line">sssssss</span><br></pre></td></tr></table></figure>
<p>git中有一个神奇的地方，只要任何文件的文件内容相同，那么在git的眼里就是一个唯一的blob。</p>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>开发中临时加塞了紧急任务应当如何处理</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/10.%E5%BC%80%E5%8F%91%E4%B8%AD%E4%B8%B4%E6%97%B6%E5%8A%A0%E5%A1%9E%E4%BA%86%E7%B4%A7%E6%80%A5%E4%BB%BB%E5%8A%A1%E5%BA%94%E5%BD%93%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<h3 id="开发中临时加塞了紧急任务应当如何处理"><a href="#开发中临时加塞了紧急任务应当如何处理" class="headerlink" title="开发中临时加塞了紧急任务应当如何处理"></a>开发中临时加塞了紧急任务应当如何处理</h3><ul>
<li>git stash</li>
</ul>
<h4 id="将工作区修改的文件放入不影响下步工作的环境中"><a href="#将工作区修改的文件放入不影响下步工作的环境中" class="headerlink" title="将工作区修改的文件放入不影响下步工作的环境中"></a>将工作区修改的文件放入不影响下步工作的环境中</h4><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git status <span class="comment">#假设工作区中修改了commit3文件</span></span><br><span class="line">On branch temp</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">	modified:   commit3</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line">$ git stash <span class="comment">#存入到不影响下步工作的环境当中</span></span><br><span class="line">Saved working directory and index state WIP on temp: 645c351 Modified commit2</span><br><span class="line">$ git stash list <span class="comment">#查看stash列表，会有一个stash堆栈信息</span></span><br><span class="line">stash@&#123;0&#125;: WIP on temp: 645c351 Modified commit2</span><br><span class="line">$ git status <span class="comment">#查看当前状态 当前工作区是一个干净的工作区 就可以继续下步工作</span></span><br><span class="line">On branch temp</span><br><span class="line">nothing to commit, working tree clean</span><br></pre></td></tr></table></figure>
<h4 id="紧急任务结束，重新恢复到接到紧急任务之前的状态"><a href="#紧急任务结束，重新恢复到接到紧急任务之前的状态" class="headerlink" title="紧急任务结束，重新恢复到接到紧急任务之前的状态"></a>紧急任务结束，重新恢复到接到紧急任务之前的状态</h4><ul>
<li>不弹出stash <ul>
<li>git stash apply</li>
</ul>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git stash apply <span class="comment">#重新回到之前的状态，并且这个命令不谈出stash栈中的记录</span></span><br><span class="line">On branch temp</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">	modified:   commit3</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line"></span><br><span class="line">$ git stash list <span class="comment">#查看stash列表 之前的stash还存在 并且可以反复使用</span></span><br><span class="line">stash@&#123;0&#125;: WIP on temp: 645c351 Modified commit2</span><br></pre></td></tr></table></figure>
<ul>
<li>弹出stash<ul>
<li>git stash pop</li>
</ul>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git stash pop <span class="comment">#弹出stash 发现最后一行显示丢掉stash@&#123;0&#125;的记录</span></span><br><span class="line">On branch temp</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">	modified:   commit3</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line">Dropped refs/stash@&#123;0&#125; (12397d0ad85cd29f39b1551753533aada85d3d42)</span><br><span class="line">$ git stash list <span class="comment">#再次查看stash列表 已经没有stash记录了</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>删除不需要的分支</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/1.%E5%88%A0%E9%99%A4%E4%B8%8D%E9%9C%80%E8%A6%81%E7%9A%84%E5%88%86%E6%94%AF/</url>
    <content><![CDATA[<h3 id="删除不需要的分支"><a href="#删除不需要的分支" class="headerlink" title="删除不需要的分支"></a>删除不需要的分支</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git branch -av <span class="comment">#查看分支 假设我们不需要temp分支</span></span><br><span class="line">  fix_add  fd98d3d Add add file</span><br><span class="line">  fix_add1 2241da2 Add <span class="string">"!"</span></span><br><span class="line">* master   4b6999e create folder and file</span><br><span class="line">  temp     543c5d8 add <span class="built_in">test</span></span><br><span class="line">$ git branch -d temp <span class="comment">#删除temp分支 会提示我temp还没有合并 如果真的要删除使用-D</span></span><br><span class="line">error: The branch <span class="string">'temp'</span> is not fully merged.</span><br><span class="line">If you are sure you want to delete it, run <span class="string">'git branch -D temp'</span>.</span><br><span class="line">$ git merge temp <span class="comment">#或者进行merge 这里产生了冲突 master上我rename了readme</span></span><br><span class="line">CONFLICT (modify/delete): readme deleted <span class="keyword">in</span> HEAD and modified <span class="keyword">in</span> temp. Version temp of readme left <span class="keyword">in</span> tree.</span><br><span class="line">Automatic merge failed; fix conflicts and <span class="keyword">then</span> commit the result.</span><br><span class="line">$ git commit -m <span class="string">'merge branch temp'</span> <span class="comment">#解决冲突后提交合并</span></span><br><span class="line">[master 5524853] merge branch temp</span><br><span class="line">$ git branch -d temp <span class="comment">#这时候再使用-d就可以删除了</span></span><br><span class="line">Deleted branch temp (was 543c5d8).</span><br><span class="line">$ git branch -av</span><br><span class="line">  fix_add  fd98d3d Add add file</span><br><span class="line">  fix_add1 2241da2 Add <span class="string">"!"</span></span><br><span class="line">* master   5524853 merge branch temp</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>把连续的多个commit整理成1个</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/3.%E6%8A%8A%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%A4%9A%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/</url>
    <content><![CDATA[<h3 id="把连续的多个commit整理成1个"><a href="#把连续的多个commit整理成1个" class="headerlink" title="把连续的多个commit整理成1个"></a>把连续的多个commit整理成1个</h3><h4 id="git-rebase-i-address"><a href="#git-rebase-i-address" class="headerlink" title="git rebase -i [address]"></a>git rebase -i [address]</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> -6 <span class="comment">#查看log 合并最近三条commit</span></span><br><span class="line">commit ce2abde0bf171ac220701f921fb7c80d59d1cabb (HEAD -&gt; master)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 26 13:38:08 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add commit3</span><br><span class="line"></span><br><span class="line">commit 2805221941eea19d8fea0acf26674af8315e5a3b</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 26 13:37:59 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add commit2</span><br><span class="line"></span><br><span class="line">commit 40b8a74be089723d8609f8561972069d045e33a2</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 26 13:37:51 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add commit1</span><br><span class="line"></span><br><span class="line">commit f7b88f55dc358c375cbbc26db54e7e87b551c518</span><br><span class="line">Merge: 9e63410 d2c1d2b</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 26 13:34:46 2019 +0800</span><br><span class="line"></span><br><span class="line">    Merge all branch</span><br><span class="line"></span><br><span class="line">commit 9e63410fee4af12a8e9855d2cb6ac81a977b821e</span><br><span class="line">Merge: 1da4f5a 2241da2</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 26 13:33:20 2019 +0800</span><br><span class="line"></span><br><span class="line">    Merge branch <span class="string">'fix_add1'</span></span><br><span class="line"></span><br><span class="line">commit d2c1d2b68622e6ee11c2070eb36406ccb0e63655</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 17:03:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add add file</span><br><span class="line">$ git rebase -i f7b88f55dc35 <span class="comment">#取父亲节点地址 弹出两次交互界面 如下图</span></span><br><span class="line">[detached HEAD 9f2603b] Create and Add three files. Add commit1 Add commit2 Add commit3</span><br><span class="line"> Date: Sun May 26 13:37:51 2019 +0800</span><br><span class="line"> 3 files changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> create mode 100644 commit1</span><br><span class="line"> create mode 100644 commit2</span><br><span class="line"> create mode 100644 commit3</span><br><span class="line">Successfully rebased and updated refs/heads/master.</span><br><span class="line">$ git <span class="built_in">log</span> -6 --graph <span class="comment">#再次查看log 已经合并成功 并生成了新的commit对象</span></span><br><span class="line">* commit 9f2603b5aac31b0607312a51224a9691ed0670b4 (HEAD -&gt; master)</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 26 13:37:51 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Create and Add three files.</span><br><span class="line">|     Add commit1</span><br><span class="line">|     Add commit2</span><br><span class="line">|     Add commit3</span><br><span class="line">|   </span><br><span class="line">*   commit f7b88f55dc358c375cbbc26db54e7e87b551c518</span><br><span class="line">|\  Merge: 9e63410 d2c1d2b</span><br><span class="line">| | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | Date:   Sun May 26 13:34:46 2019 +0800</span><br><span class="line">| | </span><br><span class="line">| |     Merge all branch</span><br><span class="line">| | </span><br><span class="line">| * commit d2c1d2b68622e6ee11c2070eb36406ccb0e63655</span><br><span class="line">| | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | Date:   Sun May 19 17:03:02 2019 +0800</span><br><span class="line">| | </span><br><span class="line">| |     Add add file</span><br><span class="line">| | </span><br><span class="line">| * commit ea0c4843f5ee874f4d96646d7f3a8a3adb1432f0</span><br><span class="line">| | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | Date:   Sun May 19 16:33:15 2019 +0800</span><br><span class="line">| | </span><br><span class="line">| |     Add hello world <span class="keyword">in</span> file</span><br><span class="line">| |   </span><br><span class="line">* |   commit 9e63410fee4af12a8e9855d2cb6ac81a977b821e</span><br><span class="line">|\ \  Merge: 1da4f5a 2241da2</span><br><span class="line">| | | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | | Date:   Sun May 26 13:33:20 2019 +0800</span><br><span class="line">| | | </span><br><span class="line">| | |     Merge branch <span class="string">'fix_add1'</span></span><br><span class="line">| | | </span><br><span class="line">| * | commit 2241da25049ad63dea9f20b094b858f0b533ed61</span><br><span class="line">| | | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | | Date:   Sun May 19 17:01:01 2019 +0800</span><br><span class="line">| | | </span><br><span class="line">| | |     Add <span class="string">"!"</span></span><br></pre></td></tr></table></figure>
<h4 id="图示"><a href="#图示" class="headerlink" title="图示"></a>图示</h4><ul>
<li>执行“git rebase -i f7b88f55dc35”命令后，弹出第一个交互</li>
</ul>
<p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/3.%E6%8A%8A%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%A4%9A%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/20190526132915.png" alt="img"></p>
<ul>
<li>选择squash命令，修改pick为s，保存退出</li>
</ul>
<p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/3.%E6%8A%8A%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%A4%9A%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/20190526132924.png" alt="img"></p>
<ul>
<li>第二个交互界面</li>
</ul>
<p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/3.%E6%8A%8A%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%A4%9A%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/20190526155824.png" alt="img"></p>
<ul>
<li>插入新message，保留旧的message，保存退出</li>
</ul>
<p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/3.%E6%8A%8A%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%A4%9A%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/20190526160006.png" alt="img"></p>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>如何将Git仓库备份到本地</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/12.%E5%A6%82%E4%BD%95%E5%B0%86Git%E4%BB%93%E5%BA%93%E5%A4%87%E4%BB%BD%E5%88%B0%E6%9C%AC%E5%9C%B0/</url>
    <content><![CDATA[<hr>
<h3 id="如何将Git仓库备份到本地"><a href="#如何将Git仓库备份到本地" class="headerlink" title="如何将Git仓库备份到本地"></a>如何将Git仓库备份到本地</h3><h4 id="常用的传输协议"><a href="#常用的传输协议" class="headerlink" title="常用的传输协议"></a>常用的传输协议</h4><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">常用协议</th>
<th style="text-align:center">语法格式</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">本地协议（1）</td>
<td style="text-align:center">/path/to/repo.git</td>
<td style="text-align:center">哑协议</td>
</tr>
<tr>
<td style="text-align:center">本地协议（2）</td>
<td style="text-align:center">file:///path/to/repo.git</td>
<td style="text-align:center">智能协议</td>
</tr>
<tr>
<td style="text-align:center">http/https协议</td>
<td style="text-align:center"><a href="http://git-server.com:port/path/to/repo.git">http://git-server.com:port/path/to/repo.git</a><br><a href="https://git-server.com:port/path/to/repo.git">https://git-server.com:port/path/to/repo.git</a></td>
<td style="text-align:center">平时接触到的都是智能协议</td>
</tr>
<tr>
<td style="text-align:center">ssh协议</td>
<td style="text-align:center">user@git-server.com:path/to/repo.git</td>
<td style="text-align:center">工作中最常用的智能协议</td>
</tr>
</tbody>
</table>
</div>
<h4 id="哑协议与智能协议"><a href="#哑协议与智能协议" class="headerlink" title="哑协议与智能协议"></a>哑协议与智能协议</h4><ul>
<li>直观区别： 哑协议传输进度不可见；智能协议传输可见。</li>
<li>传输速度： 智能协议比哑协议传输速度快。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkdir git-backup <span class="comment">#创建一个备份文件夹</span></span><br><span class="line">$ <span class="built_in">cd</span> git-backup <span class="comment">#切换到文件夹下</span></span><br><span class="line">$ git <span class="built_in">clone</span> --bare /Users/xxx/Documents/WorkSpace/GitTest/LocalTest/.git ya.git <span class="comment">#使用哑协议 克隆一个不带工作区的仓库</span></span><br><span class="line">Cloning into bare repository <span class="string">'ya.git'</span>...</span><br><span class="line"><span class="keyword">done</span>.</span><br><span class="line">$ ls</span><br><span class="line">ya.git</span><br><span class="line">$ git <span class="built_in">clone</span> --bare file:///Users/xxx/Documents/WorkSpace/GitTest/LocalTest/.git zhineng.git <span class="comment">#使用智能协议 克隆一个不带工作区的仓库（智能协议传输不仅有打包，还有压缩，所以传输速度快）</span></span><br><span class="line">Cloning into bare repository <span class="string">'zhineng.git'</span>...</span><br><span class="line">remote: Enumerating objects: 47, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (47/47), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (34/34), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 47 (delta 11), reused 0 (delta 0)</span><br><span class="line">Receiving objects: 100% (47/47), 4.06 KiB | 4.06 MiB/s, <span class="keyword">done</span>.</span><br><span class="line">Resolving deltas: 100% (11/11), <span class="keyword">done</span>.</span><br><span class="line">$ ls</span><br><span class="line">ya.git      zhineng.git</span><br></pre></td></tr></table></figure>
<h4 id="在工作环境中，如何把变更快速的同步到其他地方"><a href="#在工作环境中，如何把变更快速的同步到其他地方" class="headerlink" title="在工作环境中，如何把变更快速的同步到其他地方"></a>在工作环境中，如何把变更快速的同步到其他地方</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/Users/xxx/Documents/WorkSpace/GitTest/LocalTest</span><br><span class="line">$ git remote -v <span class="comment">#查看发现还没有远端仓库</span></span><br><span class="line">$ git remote add zhineng file:///Users/jamme/Documents/WorkSpace/GitTest/git-backup/zhineng.git <span class="comment">#使用智能协议创建远端仓库 仓库名zhineng</span></span><br><span class="line">$ git branch -av <span class="comment">#查看分支 此时查看上边创建远端分支(zhineng.git) 也只有master和temp分支</span></span><br><span class="line">  master 9522b28 modify content</span><br><span class="line">* temp   a82282c Modified readme.md</span><br><span class="line">$ git checkout remote_test <span class="comment">#创建新分支</span></span><br><span class="line">Switched to branch <span class="string">'remote_test'</span></span><br><span class="line">$ git branch -av</span><br><span class="line">  master      9522b28 modify content</span><br><span class="line">* remote_test a82282c Modified readme.md</span><br><span class="line">  temp        a82282c Modified readme.md</span><br><span class="line">$ git push zhineng <span class="comment">#推送到远端zhineng分支 这里需要设置upstream</span></span><br><span class="line">fatal: The current branch remote_test has no upstream branch.</span><br><span class="line">To push the current branch and <span class="built_in">set</span> the remote as upstream, use</span><br><span class="line"></span><br><span class="line">    git push --<span class="built_in">set</span>-upstream zhineng remote_test</span><br><span class="line">$ git push --<span class="built_in">set</span>-upstream zhineng remote_test <span class="comment">#意味着下次push’remote_test‘分支到’zhineng‘分支就不用再设置</span></span><br><span class="line">Total 0 (delta 0), reused 0 (delta 0)</span><br><span class="line">To file:///Users/jamme/Documents/WorkSpace/GitTest/git-backup/zhineng.git</span><br><span class="line"> * [new branch]      remote_test -&gt; remote_test</span><br><span class="line">Branch <span class="string">'remote_test'</span> <span class="built_in">set</span> up to track remote branch <span class="string">'remote_test'</span> from <span class="string">'zhineng'</span>.</span><br></pre></td></tr></table></figure>
<ul>
<li>切换至远端</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/Users/xxx/Documents/WorkSpace/GitTest/git-backup/zhineng.git</span><br><span class="line">$ git branch -av</span><br><span class="line">  master      9522b28 modify content</span><br><span class="line">  remote_test a82282c Modified readme.md</span><br><span class="line">* temp        a82282c Modified readme.md</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>如何消除最近几次的提交</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/7.%E5%A6%82%E4%BD%95%E6%B6%88%E9%99%A4%E6%9C%80%E8%BF%91%E5%87%A0%E6%AC%A1%E7%9A%84%E6%8F%90%E4%BA%A4/</url>
    <content><![CDATA[<h3 id="如何消除最近几次的提交"><a href="#如何消除最近几次的提交" class="headerlink" title="如何消除最近几次的提交"></a>如何消除最近几次的提交</h3><ul>
<li>git reset —hard [commit address]</li>
</ul>
<p><b style="color:red"> 此命令执行后，缓存区和工作区都会清空，所以一定要确定不需要这些提交信息。慎用此命令。</b><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gitk --all <span class="comment">#查看gitk信息 如下图 </span></span><br><span class="line">$ git branch -av <span class="comment">#查看当前分支是不是再temp</span></span><br><span class="line">  master 9522b28 modify content</span><br><span class="line">* temp   59925d6 Modifed temp.log again.</span><br><span class="line">$ git <span class="built_in">log</span> --graph <span class="comment">#查看log 将"Create temp.log（1dda1ee0709c）"之前的提交都清除掉</span></span><br><span class="line">* commit 59925d6552044420a7ce96a2a7f403691bb4e8e2 (HEAD -&gt; temp)</span><br><span class="line">| Author: jiaming &lt;jamme_lee@outlook.com&gt;</span><br><span class="line">| Date:   Tue Jun 4 21:49:31 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Modifed temp.log again.</span><br><span class="line">| </span><br><span class="line">* commit 469fb6377dfa729ed09640bc6287e5e891615315</span><br><span class="line">| Author: jiaming &lt;jamme_lee@outlook.com&gt;</span><br><span class="line">| Date:   Tue Jun 4 21:47:01 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Modified temp.log</span><br><span class="line">| </span><br><span class="line">* commit 1dda1ee0709c38ee087a490bf747192d6d9106c8</span><br><span class="line">| Author: jiaming &lt;jamme_lee@outlook.com&gt;</span><br><span class="line">| Date:   Tue Jun 4 21:46:11 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Create temp.log</span><br><span class="line">| </span><br><span class="line">* commit 9522b28fd3b33c7476620bc6f0a8a99c56bd3049 (master)</span><br><span class="line">| Author: jiaming &lt;jamme_lee@outlook.com&gt;</span><br><span class="line">| Date:   Tue May 28 21:15:31 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     modify content</span><br><span class="line">| </span><br><span class="line">* commit 4628013a080a138d9542a9163b0590e64fd049a8</span><br><span class="line">| Author: jiaming &lt;jamme_lee@outlook.com&gt;</span><br><span class="line">| Date:   Tue May 28 21:04:42 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     fixed confilct</span><br><span class="line">| </span><br><span class="line">* commit 437387c09feefda0188db6789e4873f7c35a2621</span><br><span class="line">| Author: jiaming &lt;jamme_lee@outlook.com&gt;</span><br><span class="line">| Date:   Sun May 26 13:37:51 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Create and Add three files.</span><br><span class="line">|     Add commit1</span><br><span class="line">|     Add commit2</span><br><span class="line">|     Add commit3</span><br><span class="line">| </span><br><span class="line">* commit 09460ecc7187a8e126891a041457e51e6693636c</span><br><span class="line">| Author: jiaming &lt;jamme_lee@outlook.com&gt;</span><br><span class="line">| Date:   Sun May 19 17:03:02 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Add add file</span><br><span class="line">$ git reset --hard 1dda1ee0709c <span class="comment">#执行reset命令</span></span><br><span class="line">HEAD is now at 1dda1ee Create temp.log</span><br><span class="line">$ gitk --all <span class="comment">#再次查看gitk 1dda1ee0709c之前的提交全部清除 如下图</span></span><br></pre></td></tr></table></figure></p>
<h5 id="图示"><a href="#图示" class="headerlink" title="图示"></a>图示</h5><ul>
<li>清除<code>Create temp.log</code>之前的所有提交</li>
</ul>
<p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/7.%E5%A6%82%E4%BD%95%E6%B6%88%E9%99%A4%E6%9C%80%E8%BF%91%E5%87%A0%E6%AC%A1%E7%9A%84%E6%8F%90%E4%BA%A4/20190604215124.png" alt="img"></p>
<ul>
<li>已经清除提交，并且HEAD指针已经指向期望位置</li>
</ul>
<p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/7.%E5%A6%82%E4%BD%95%E6%B6%88%E9%99%A4%E6%9C%80%E8%BF%91%E5%87%A0%E6%AC%A1%E7%9A%84%E6%8F%90%E4%BA%A4/20190604215515.png" alt="img"></p>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>指定不需要Git管理的文件</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/11.%E6%8C%87%E5%AE%9A%E4%B8%8D%E9%9C%80%E8%A6%81Git%E7%AE%A1%E7%90%86%E7%9A%84%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h3 id="指定不需要Git管理的文件"><a href="#指定不需要Git管理的文件" class="headerlink" title="指定不需要Git管理的文件"></a>指定不需要Git管理的文件</h3><ul>
<li>.gitignore文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ mkdir doc #创建一个doc文件夹</span><br><span class="line">$ echo &#39;hi&#39; &gt; doc&#x2F;ignoret #在doc文件夹下创建一个文件</span><br><span class="line">$ git status #查看状态 提示doc目录未被追踪 需要add</span><br><span class="line">On branch temp</span><br><span class="line">Untracked files:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class="line"></span><br><span class="line">	doc&#x2F;</span><br><span class="line">$ vi .gitignore #在工程根目录创建.gitignore文件 写入doc 保存退出</span><br><span class="line">$ git status #查看状态 doc目录不会再被提示未被追踪 说明Git不再管理doc目录</span><br><span class="line">On branch temp</span><br><span class="line">Untracked files:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class="line"></span><br><span class="line">	.gitignore</span><br><span class="line"></span><br><span class="line">$ vi .gitignore #在把doc修改为doc&#x2F;</span><br><span class="line">$ git status #查看状态 doc目录依然不被Git所管理</span><br><span class="line">On branch temp</span><br><span class="line">Untracked files:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class="line"></span><br><span class="line">	.gitignore</span><br><span class="line"></span><br><span class="line">$ rm -rf doc #删除doc文件夹</span><br><span class="line">$ echo &#39;This is file.&#39; &gt; doc #创建doc文件</span><br><span class="line">$ cat .gitignore</span><br><span class="line">doc&#x2F;</span><br><span class="line">$ git status #doc文件还是会被Git管理的</span><br><span class="line">On branch temp</span><br><span class="line">Untracked files:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class="line"></span><br><span class="line">	.gitignore</span><br><span class="line">	doc</span><br><span class="line"></span><br><span class="line">$ vi .gitignore #如果也不想让Git管理doc文件，那么把doc改成doc&#x2F;就可以了</span><br><span class="line">$ git status</span><br><span class="line">On branch temp</span><br><span class="line">Untracked files:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class="line"></span><br><span class="line">	.gitignore</span><br><span class="line"></span><br><span class="line">$ mv .gitignore doc.gitignore #将.gitignore文件名修改为doc.gitignore</span><br><span class="line">$ git status #查看状态 doc就会重新被Git管理 所以文件名必须要是.gitignore</span><br><span class="line">On branch temp</span><br><span class="line">Untracked files:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class="line"></span><br><span class="line">	doc</span><br><span class="line">	doc.gitignore</span><br></pre></td></tr></table></figure>
<p>还有许多编程语言通用的ignore，GitHub官方都给出了文件示例，可在<a href="https://github.com/github/gitignore" target="_blank" rel="noopener">GitHub</a>上查看。</p>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>修改commit的message</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/2.%E4%BF%AE%E6%94%B9commit%E7%9A%84message/</url>
    <content><![CDATA[<h3 id="修改commit的message"><a href="#修改commit的message" class="headerlink" title="修改commit的message"></a>修改commit的message</h3><h4 id="修改最新commit的message"><a href="#修改最新commit的message" class="headerlink" title="修改最新commit的message"></a>修改最新commit的message</h4><ul>
<li>$ git commit —amend<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> <span class="comment">#先查看log 第一条信息为merge branch temp</span></span><br><span class="line">commit 5524853e5b062ee5536925dc1e6a8b70db415253 (HEAD -&gt; master)</span><br><span class="line">Merge: 4b6999e 543c5d8</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sat May 25 18:27:23 2019 +0800</span><br><span class="line"></span><br><span class="line">    merge branch temp</span><br><span class="line"></span><br><span class="line">commit 4b6999eecb60df46af36c5409e3737e44b877dd7</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:50:07 2019 +0800</span><br><span class="line"></span><br><span class="line">    create folder and file</span><br><span class="line"></span><br><span class="line">commit 6d4192be4c570363865468870d14f59efaa5521e</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:46:22 2019 +0800</span><br><span class="line"></span><br><span class="line">    create abc</span><br><span class="line"></span><br><span class="line">commit 543c5d84e8b5f2996e1a40745262f39df95eebaf</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 22:12:57 2019 +0800</span><br><span class="line"></span><br><span class="line">    add <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">commit 4d2bdddf4098e40ce57fdaf04bb862f7bea04918</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:36:15 2019 +0800</span><br><span class="line"></span><br><span class="line">    rename</span><br><span class="line"></span><br><span class="line">commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51 (tag: <span class="built_in">test</span>)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    学习工作区和暂存区</span><br><span class="line"></span><br><span class="line">commit 33f7ae4c4d4da85453ed0077670e242b71d0a621</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add readme</span><br><span class="line">$ git commit --amend <span class="comment">#将merge改成Merge</span></span><br><span class="line">[master 1da4f5a] Merge branch temp</span><br><span class="line"> Date: Sat May 25 18:27:23 2019 +0800</span><br><span class="line">$ git <span class="built_in">log</span> <span class="comment">#再次查看 message已经被修改</span></span><br><span class="line">commit 1da4f5a22942c99a466508cdea306619dd5c48b0 (HEAD -&gt; master)</span><br><span class="line">Merge: 4b6999e 543c5d8</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sat May 25 18:27:23 2019 +0800</span><br><span class="line"></span><br><span class="line">    Merge branch temp</span><br><span class="line"></span><br><span class="line">commit 4b6999eecb60df46af36c5409e3737e44b877dd7</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:50:07 2019 +0800</span><br><span class="line"></span><br><span class="line">    create folder and file</span><br><span class="line"></span><br><span class="line">commit 6d4192be4c570363865468870d14f59efaa5521e</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:46:22 2019 +0800</span><br><span class="line"></span><br><span class="line">    create abc</span><br><span class="line"></span><br><span class="line">commit 543c5d84e8b5f2996e1a40745262f39df95eebaf</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 22:12:57 2019 +0800</span><br><span class="line"></span><br><span class="line">    add <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">commit 4d2bdddf4098e40ce57fdaf04bb862f7bea04918</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:36:15 2019 +0800</span><br><span class="line"></span><br><span class="line">    rename</span><br><span class="line"></span><br><span class="line">commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51 (tag: <span class="built_in">test</span>)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    学习工作区和暂存区</span><br><span class="line"></span><br><span class="line">commit 33f7ae4c4d4da85453ed0077670e242b71d0a621</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add readme</span><br></pre></td></tr></table></figure>
<h4 id="修改老旧commit的message"><a href="#修改老旧commit的message" class="headerlink" title="修改老旧commit的message"></a>修改老旧commit的message</h4></li>
<li>$ git rebase -i 6d4192be<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> -3 <span class="comment">#查看近三次的log</span></span><br><span class="line">commit d2c1d2b68622e6ee11c2070eb36406ccb0e63655 (HEAD -&gt; fix_add)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 17:03:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add add file</span><br><span class="line"></span><br><span class="line">commit ea0c4843f5ee874f4d96646d7f3a8a3adb1432f0</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 16:33:15 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add hello world</span><br><span class="line"></span><br><span class="line">commit 6d4192be4c570363865468870d14f59efaa5521e</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:46:22 2019 +0800</span><br><span class="line"></span><br><span class="line">    create abc</span><br><span class="line">$ git rebase -i 6d4192be <span class="comment">#使用rebase命令 选择需要修改message的父亲commit地址 会弹出交互界面 如下图</span></span><br><span class="line">[detached HEAD ea0c484] Add hello world <span class="keyword">in</span> file</span><br><span class="line"> Date: Sun May 19 16:33:15 2019 +0800</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line">Successfully rebased and updated refs/heads/fix_add. <span class="comment">#这里表示修改成功</span></span><br><span class="line">$ git branch -av</span><br><span class="line">* fix_add  d2c1d2b Add add file</span><br><span class="line">  fix_add1 2241da2 Add <span class="string">"!"</span></span><br><span class="line">  master   1da4f5a Merge branch temp</span><br><span class="line">$ git <span class="built_in">log</span> -n3 --graph <span class="comment">#查看log 已经将Add hello world成功修改为Add hello world in file</span></span><br><span class="line">* commit d2c1d2b68622e6ee11c2070eb36406ccb0e63655 (HEAD -&gt; fix_add)</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 19 17:03:02 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Add add file</span><br><span class="line">| </span><br><span class="line">* commit ea0c4843f5ee874f4d96646d7f3a8a3adb1432f0</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 19 16:33:15 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Add hello world <span class="keyword">in</span> file</span><br><span class="line">| </span><br><span class="line">* commit 6d4192be4c570363865468870d14f59efaa5521e</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 19 13:46:22 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     create abc</span><br></pre></td></tr></table></figure>
<h5 id="图示"><a href="#图示" class="headerlink" title="图示"></a>图示</h5><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/2.%E4%BF%AE%E6%94%B9commit%E7%9A%84message/20190525213324.png" alt="img"></li>
<li>将pick改为reword简称r，然后退出保存</li>
</ul>
<p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/2.%E4%BF%AE%E6%94%B9commit%E7%9A%84message/20190525213433.png" alt="img"></p>
<ul>
<li>退出保存后，会弹出一个新的交互界面，将message修改为新的message，保存退出即可。</li>
</ul>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>如何让暂存区的文件恢复到和HEAD一样以及如何让工作区的文件恢复到和暂存区一样</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/6.%E5%A6%82%E4%BD%95%E8%AE%A9%E6%9A%82%E5%AD%98%E5%8C%BA%E7%9A%84%E6%96%87%E4%BB%B6%E6%81%A2%E5%A4%8D%E6%88%90%E5%92%8CHEAD%E4%B8%80%E6%A0%B7%E4%BB%A5%E5%8F%8A%E5%A6%82%E4%BD%95%E8%AE%A9%E5%B7%A5%E4%BD%9C%E5%8C%BA%E7%9A%84%E6%96%87%E4%BB%B6%E6%81%A2%E5%A4%8D%E5%88%B0%E5%92%8C%E6%9A%82%E5%AD%98%E5%8C%BA%E4%B8%80%E6%A0%B7/</url>
    <content><![CDATA[<h3 id="如何让暂存区的文件恢复到和HEAD一样以及如何让工作区的文件恢复到和暂存区一样"><a href="#如何让暂存区的文件恢复到和HEAD一样以及如何让工作区的文件恢复到和暂存区一样" class="headerlink" title="如何让暂存区的文件恢复到和HEAD一样以及如何让工作区的文件恢复到和暂存区一样"></a>如何让暂存区的文件恢复到和HEAD一样以及如何让工作区的文件恢复到和暂存区一样</h3><h4 id="如何让暂存区的文件恢复到和HEAD一样"><a href="#如何让暂存区的文件恢复到和HEAD一样" class="headerlink" title="如何让暂存区的文件恢复到和HEAD一样"></a>如何让暂存区的文件恢复到和HEAD一样</h4><ul>
<li>git reset HEAD</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git status <span class="comment">#将文件修改好加入暂存区，查看当前状态</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">	modified:   a</span><br><span class="line">	modified:   abc</span><br><span class="line">$ git reset HEAD <span class="comment">#根据提示 使用reset HEAD命令将所有暂存区文件都还原到HEAD</span></span><br><span class="line">Unstaged changes after reset:</span><br><span class="line">M	a</span><br><span class="line">M	abc</span><br><span class="line">$ git status <span class="comment">#OK，还原成功</span></span><br><span class="line">On branch master</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">	modified:   a</span><br><span class="line">	modified:   abc</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line">$ git diff --cached <span class="comment">#还可以通过这种方式查看暂存区有没有文件和HEAD存在差异，没有返回证明无差异</span></span><br></pre></td></tr></table></figure>
<h4 id="如何取消暂存区部分文件的修改"><a href="#如何取消暂存区部分文件的修改" class="headerlink" title="如何取消暂存区部分文件的修改"></a>如何取消暂存区部分文件的修改</h4><ul>
<li>git reset HEAD —[filename1,filename2,…]</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git status <span class="comment">#查看当前目录状态 有三个已经加入暂存区的文件</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">	modified:   abc</span><br><span class="line">	modified:   add</span><br><span class="line">	modified:   commit1</span><br><span class="line"></span><br><span class="line">$ git reset HEAD -- abc commit1 <span class="comment">#使用reset命令只还原abc和commit1文件</span></span><br><span class="line">Unstaged changes after reset:</span><br><span class="line">M	abc</span><br><span class="line">M	commit1</span><br><span class="line">$ git status <span class="comment">#再次查看目录状态 abc和commit1文件已经从暂存区中被取消</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">	modified:   add</span><br><span class="line"></span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">	modified:   abc</span><br><span class="line">	modified:   commit1</span><br></pre></td></tr></table></figure>
<h4 id="如何让工作区的文件恢复到和暂存区一样"><a href="#如何让工作区的文件恢复到和暂存区一样" class="headerlink" title="如何让工作区的文件恢复到和暂存区一样"></a>如何让工作区的文件恢复到和暂存区一样</h4><ul>
<li>git checkout — [filename]</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vi a</span><br><span class="line">$ git add a <span class="comment">#假设修改了a文件 并将a加入暂存区</span></span><br><span class="line">$ vi a <span class="comment">#然后觉得a不太好，又修改了内容</span></span><br><span class="line">$ git diff <span class="comment">#修改后查看了工作区和暂存区的差异 发现工作区的修改还不如暂存区</span></span><br><span class="line">diff --git a/a b/a</span><br><span class="line">index 79ca77c..e63ef0c 100644</span><br><span class="line">--- a/a</span><br><span class="line">+++ b/a</span><br><span class="line">@@ -1 +1 @@</span><br><span class="line">-Hello,I<span class="string">'m a!!!</span></span><br><span class="line"><span class="string">+Hello,I'</span>m a!!!.....</span><br><span class="line">$ git status <span class="comment">#查看一下当前状态</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">	modified:   a</span><br><span class="line"></span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">	modified:   a</span><br><span class="line">$ git checkout -- a <span class="comment">#按照上边的提示 忽略对a文件的修改</span></span><br><span class="line">$ git status <span class="comment">#再次查看状态 工作区的修改已经被抹掉</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">	modified:   a</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>比较工作区、暂存区和HEAD之间所含文件的差异</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/5.%E6%AF%94%E8%BE%83%E5%B7%A5%E4%BD%9C%E5%8C%BA%E3%80%81%E6%9A%82%E5%AD%98%E5%8C%BA%E5%92%8CHEAD%E4%B9%8B%E9%97%B4%E6%89%80%E5%90%AB%E6%96%87%E4%BB%B6%E7%9A%84%E5%B7%AE%E5%BC%82/</url>
    <content><![CDATA[<h3 id="比较工作区、暂存区和HEAD之间所含文件的差异"><a href="#比较工作区、暂存区和HEAD之间所含文件的差异" class="headerlink" title="比较工作区、暂存区和HEAD之间所含文件的差异"></a>比较工作区、暂存区和HEAD之间所含文件的差异</h3><h4 id="比较暂存区和HEAD所含文件的差异"><a href="#比较暂存区和HEAD所含文件的差异" class="headerlink" title="比较暂存区和HEAD所含文件的差异"></a>比较暂存区和HEAD所含文件的差异</h4><ul>
<li>git diff —cached</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vi abc <span class="comment">#修改abc文件内容</span></span><br><span class="line">$ git add abc <span class="comment">#将abc文件添加至暂存区</span></span><br><span class="line">$ git diff --cached <span class="comment">#使用该命令查看暂存区和HEAD所含文件的差别，可以用来检查修改是否是正确的</span></span><br><span class="line">diff --git a/abc b/abc</span><br><span class="line">index 3be8c83..b61830f 100644</span><br><span class="line">--- a/abc</span><br><span class="line">+++ b/abc</span><br><span class="line">@@ -1,5 +1 @@</span><br><span class="line">-&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class="line"> hello,world!</span><br><span class="line">-=======</span><br><span class="line">-hello,world</span><br><span class="line">-&gt;&gt;&gt;&gt;&gt;&gt;&gt; ea0c484... Add hello world <span class="keyword">in</span> file</span><br></pre></td></tr></table></figure>
<h4 id="比较工作区和暂存区所含文件的差异"><a href="#比较工作区和暂存区所含文件的差异" class="headerlink" title="比较工作区和暂存区所含文件的差异"></a>比较工作区和暂存区所含文件的差异</h4><ul>
<li>git diff </li>
<li>git diff — [filename1,filename2,…]</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vi a <span class="comment">#修改a文件</span></span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">	modified:   a</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line">$ git diff <span class="comment">#查看差异，可以看到a文件的差异</span></span><br><span class="line">diff --git a/a b/a</span><br><span class="line">index 64fa4ac..6780600 100644</span><br><span class="line">--- a/a</span><br><span class="line">+++ b/a</span><br><span class="line">@@ -1 +1 @@</span><br><span class="line">-sssssssiaaaiiiaaaaaa</span><br><span class="line">+Hello,I<span class="string">'m a.</span></span><br><span class="line"><span class="string">$ vi commit1 #修改commit1文件</span></span><br><span class="line"><span class="string">$ git diff #可以查看到所有修改文件的差异</span></span><br><span class="line"><span class="string">diff --git a/a b/a</span></span><br><span class="line"><span class="string">index 64fa4ac..6780600 100644</span></span><br><span class="line"><span class="string">--- a/a</span></span><br><span class="line"><span class="string">+++ b/a</span></span><br><span class="line"><span class="string">@@ -1 +1 @@</span></span><br><span class="line"><span class="string">-sssssssiaaaiiiaaaaaa</span></span><br><span class="line"><span class="string">+Hello,I'</span>m a.</span><br><span class="line">diff --git a/commit1 b/commit1</span><br><span class="line">index e69de29..33f9a70 100644</span><br><span class="line">--- a/commit1</span><br><span class="line">+++ b/commit1</span><br><span class="line">@@ -0,0 +1 @@</span><br><span class="line">+Hello,I<span class="string">'m commit1.</span></span><br><span class="line"><span class="string">$ git diff -- a #这里可以使用“--“过滤想要看到的文件名 只看a文件的差异</span></span><br><span class="line"><span class="string">diff --git a/a b/a</span></span><br><span class="line"><span class="string">index 64fa4ac..6780600 100644</span></span><br><span class="line"><span class="string">--- a/a</span></span><br><span class="line"><span class="string">+++ b/a</span></span><br><span class="line"><span class="string">@@ -1 +1 @@</span></span><br><span class="line"><span class="string">-sssssssiaaaiiiaaaaaa</span></span><br><span class="line"><span class="string">+Hello,I'</span>m a.</span><br><span class="line">$ git diff -- a commit1 <span class="comment">#还可以过滤多个文件名 只看a和commit1文件的差异</span></span><br><span class="line">diff --git a/a b/a</span><br><span class="line">index 64fa4ac..6780600 100644</span><br><span class="line">--- a/a</span><br><span class="line">+++ b/a</span><br><span class="line">@@ -1 +1 @@</span><br><span class="line">-sssssssiaaaiiiaaaaaa</span><br><span class="line">+Hello,I<span class="string">'m a.</span></span><br><span class="line"><span class="string">diff --git a/commit1 b/commit1</span></span><br><span class="line"><span class="string">index e69de29..33f9a70 100644</span></span><br><span class="line"><span class="string">--- a/commit1</span></span><br><span class="line"><span class="string">+++ b/commit1</span></span><br><span class="line"><span class="string">@@ -0,0 +1 @@</span></span><br><span class="line"><span class="string">+Hello,I'</span>m commit1.</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>查看指定文件不同提交的差异</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/8.%E6%9F%A5%E7%9C%8B%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6%E4%B8%8D%E5%90%8C%E6%8F%90%E4%BA%A4%E7%9A%84%E5%B7%AE%E5%BC%82/</url>
    <content><![CDATA[<h3 id="查看指定文件不同提交的差异"><a href="#查看指定文件不同提交的差异" class="headerlink" title="查看指定文件不同提交的差异"></a>查看指定文件不同提交的差异</h3><ul>
<li>git diff <a href="branch name">address</a> <a href="branch name">address</a> — [filename]</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git diff temp master <span class="comment">#可以查看分支所有文件的差异</span></span><br><span class="line">diff --git a/commit1 b/commit1</span><br><span class="line">index e885be7..33f9a70 100644</span><br><span class="line">--- a/commit1</span><br><span class="line">+++ b/commit1</span><br><span class="line">@@ -1 +1 @@</span><br><span class="line">-Hello,I<span class="string">'m commit1.     -- Modified by temp.</span></span><br><span class="line"><span class="string">+Hello,I'</span>m commit1.</span><br><span class="line">diff --git a/commit2 b/commit2</span><br><span class="line">index 827e7ef..e69de29 100644</span><br><span class="line">--- a/commit2</span><br><span class="line">+++ b/commit2</span><br><span class="line">@@ -1 +0,0 @@</span><br><span class="line">-Hello, commit2!</span><br><span class="line">diff --git a/temp.log b/temp.log</span><br><span class="line">deleted file mode 100644</span><br><span class="line">index e69de29..0000000</span><br><span class="line">$ git diff temp master -- commit1 <span class="comment">#可以过滤指定的文件</span></span><br><span class="line">diff --git a/commit1 b/commit1</span><br><span class="line">index e885be7..33f9a70 100644</span><br><span class="line">--- a/commit1</span><br><span class="line">+++ b/commit1</span><br><span class="line">@@ -1 +1 @@</span><br><span class="line">-Hello,I<span class="string">'m commit1.     -- Modified by temp.</span></span><br><span class="line"><span class="string">+Hello,I'</span>m commit1.</span><br><span class="line">$ git branch -av</span><br><span class="line">  master 9522b28 modify content</span><br><span class="line">* temp   645c351 Modified commit2</span><br><span class="line">$ git diff 645c351 9522b28 -- commit1 <span class="comment">#通过查看分支 拿到分支的地址 也可以查询指定文件的差异 效果一样</span></span><br><span class="line">diff --git a/commit1 b/commit1</span><br><span class="line">index e885be7..33f9a70 100644</span><br><span class="line">--- a/commit1</span><br><span class="line">+++ b/commit1</span><br><span class="line">@@ -1 +1 @@</span><br><span class="line">-Hello,I<span class="string">'m commit1.     -- Modified by temp.</span></span><br><span class="line"><span class="string">+Hello,I'</span>m commit1.</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>正确删除文件的方法</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/9.%E6%AD%A3%E7%A1%AE%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h3 id="正确删除文件的方法"><a href="#正确删除文件的方法" class="headerlink" title="正确删除文件的方法"></a>正确删除文件的方法</h3><ul>
<li>git rm [filename]</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ rm readme.md <span class="comment">#删除工作区的readme.md文件</span></span><br><span class="line">$ git status</span><br><span class="line">On branch temp</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add/rm &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">	deleted:    readme.md</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line">$ git rm readme.md <span class="comment">#删除暂存区的readme.md 或者使用add命令更新暂存区</span></span><br><span class="line">$ git status</span><br><span class="line">On branch temp</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">	deleted:    readme.md</span><br><span class="line"></span><br><span class="line">$ git reset --hard HEAD <span class="comment">#恢复工作区和暂存区到HEAD指针</span></span><br><span class="line">HEAD is now at 645c351 Modified commit2</span><br><span class="line">$ git status</span><br><span class="line">On branch temp</span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">$ git rm readme.md <span class="comment">#使用rm命令删除readme.md</span></span><br><span class="line">rm <span class="string">'readme.md'</span></span><br><span class="line">$ git status <span class="comment">#查看状态 发现和先使用rm删除工作区文件 然后再更新暂存区的效果是一样的</span></span><br><span class="line">On branch temp</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">	deleted:    readme.md</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>把间隔的几个commit整理成1个</title>
    <url>/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/4.%E6%8A%8A%E9%97%B4%E9%9A%94%E7%9A%84%E5%87%A0%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/</url>
    <content><![CDATA[<h3 id="把间隔的几个commit整理成1个"><a href="#把间隔的几个commit整理成1个" class="headerlink" title="把间隔的几个commit整理成1个"></a>把间隔的几个commit整理成1个</h3><ul>
<li>git rebase -i [address]</li>
</ul>
<p>再次用到这个命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --graph <span class="comment">#查看日志 把两个关于readme的commit合并</span></span><br><span class="line">* commit 9f2603b5aac31b0607312a51224a9691ed0670b4 (HEAD -&gt; master)</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 26 13:37:51 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Create and Add three files.</span><br><span class="line">|     Add commit1</span><br><span class="line">|     Add commit2</span><br><span class="line">|     Add commit3</span><br><span class="line">|   </span><br><span class="line">*   commit f7b88f55dc358c375cbbc26db54e7e87b551c518</span><br><span class="line">|\  Merge: 9e63410 d2c1d2b</span><br><span class="line">| | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | Date:   Sun May 26 13:34:46 2019 +0800</span><br><span class="line">| | </span><br><span class="line">| |     Merge all branch</span><br><span class="line">| | </span><br><span class="line">| * commit d2c1d2b68622e6ee11c2070eb36406ccb0e63655</span><br><span class="line">| | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | Date:   Sun May 19 17:03:02 2019 +0800</span><br><span class="line">| | </span><br><span class="line">| |     Add add file</span><br><span class="line">| | </span><br><span class="line">| * commit ea0c4843f5ee874f4d96646d7f3a8a3adb1432f0</span><br><span class="line">| | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | Date:   Sun May 19 16:33:15 2019 +0800</span><br><span class="line">| | </span><br><span class="line">| |     Add hello world <span class="keyword">in</span> file</span><br><span class="line">| |   </span><br><span class="line">* |   commit 9e63410fee4af12a8e9855d2cb6ac81a977b821e</span><br><span class="line">|\ \  Merge: 1da4f5a 2241da2</span><br><span class="line">| | | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | | Date:   Sun May 26 13:33:20 2019 +0800</span><br><span class="line">| | | </span><br><span class="line">| | |     Merge branch <span class="string">'fix_add1'</span></span><br><span class="line">| | | </span><br><span class="line">| * | commit 2241da25049ad63dea9f20b094b858f0b533ed61</span><br><span class="line">| | | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | | Date:   Sun May 19 17:01:01 2019 +0800</span><br><span class="line">| | | </span><br><span class="line">| | |     Add <span class="string">"!"</span></span><br><span class="line">| | | </span><br><span class="line">| * | commit 4e43c01c8f3c76aedd986d598a00b90809a3a588</span><br><span class="line">| |/  Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| |   Date:   Sun May 19 16:33:15 2019 +0800</span><br><span class="line">| |   </span><br><span class="line">| |       Add hello world</span><br><span class="line">| |   </span><br><span class="line">* |   commit 1da4f5a22942c99a466508cdea306619dd5c48b0</span><br><span class="line">|\ \  Merge: 4b6999e 543c5d8</span><br><span class="line">| | | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | | Date:   Sat May 25 18:27:23 2019 +0800</span><br><span class="line">| | | </span><br><span class="line">| | |     Merge branch temp</span><br><span class="line">| | | </span><br><span class="line">| * | commit 543c5d84e8b5f2996e1a40745262f39df95eebaf</span><br><span class="line">| | | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | | Date:   Mon Apr 29 22:12:57 2019 +0800</span><br><span class="line">| | | </span><br><span class="line">| | |     add <span class="built_in">test</span></span><br><span class="line">| | | </span><br><span class="line">* | | commit 4b6999eecb60df46af36c5409e3737e44b877dd7</span><br><span class="line">| |/  Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">|/|   Date:   Sun May 19 13:50:07 2019 +0800</span><br><span class="line">| |   </span><br><span class="line">| |       create folder and file</span><br><span class="line">| | </span><br><span class="line">* | commit 6d4192be4c570363865468870d14f59efaa5521e</span><br><span class="line">| | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | Date:   Sun May 19 13:46:22 2019 +0800</span><br><span class="line">| | </span><br><span class="line">| |     create abc</span><br><span class="line">| | </span><br><span class="line">* | commit 4d2bdddf4098e40ce57fdaf04bb862f7bea04918 <span class="comment">#这条</span></span><br><span class="line">|/  Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">|   Date:   Mon Apr 29 21:36:15 2019 +0800</span><br><span class="line">|   </span><br><span class="line">|       rename</span><br><span class="line">| </span><br><span class="line">* commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51 (tag: <span class="built_in">test</span>)</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     学习工作区和暂存区</span><br><span class="line">| </span><br><span class="line">* commit 33f7ae4c4d4da85453ed0077670e242b71d0a621 <span class="comment">#还有这条</span></span><br><span class="line">  Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">  Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line">  </span><br><span class="line">      Add readme</span><br><span class="line">$ git rebase -i 33f7ae4c4 <span class="comment">#因为“Add readme“这条commit已经是最父亲节点 所以就选这条commit地址 弹出交互界面 如下图</span></span><br><span class="line">The previous cherry-pick is now empty, possibly due to conflict resolution.</span><br><span class="line">If you wish to commit it anyway, use:</span><br><span class="line"></span><br><span class="line">    git commit --allow-empty</span><br><span class="line"></span><br><span class="line">Otherwise, please use <span class="string">'git reset'</span></span><br><span class="line">interactive rebase <span class="keyword">in</span> progress; onto 33f7ae4</span><br><span class="line">Last <span class="built_in">command</span> <span class="keyword">done</span> (1 <span class="built_in">command</span> <span class="keyword">done</span>):</span><br><span class="line">   pick 33f7ae4 </span><br><span class="line">Next commands to <span class="keyword">do</span> (10 remaining commands):</span><br><span class="line">   squash 4d2bddd rename</span><br><span class="line">   pick d34df54 学习工作区和暂存区</span><br><span class="line">You are currently rebasing branch <span class="string">'master'</span> on <span class="string">'33f7ae4'</span>.</span><br><span class="line"></span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">Could not apply 33f7ae4... </span><br><span class="line">$ git status <span class="comment">#查看当前状态</span></span><br><span class="line">interactive rebase <span class="keyword">in</span> progress; onto 33f7ae4</span><br><span class="line">Last <span class="built_in">command</span> <span class="keyword">done</span> (1 <span class="built_in">command</span> <span class="keyword">done</span>):</span><br><span class="line">   pick 33f7ae4 </span><br><span class="line">Next commands to <span class="keyword">do</span> (10 remaining commands):</span><br><span class="line">   squash 4d2bddd rename</span><br><span class="line">   pick d34df54 学习工作区和暂存区</span><br><span class="line">  (use <span class="string">"git rebase --edit-todo"</span> to view and edit)</span><br><span class="line">You are currently rebasing branch <span class="string">'master'</span> on <span class="string">'33f7ae4'</span>.</span><br><span class="line">  (all conflicts fixed: run <span class="string">"git rebase --continue"</span>)</span><br><span class="line"></span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">$ git rebase --<span class="built_in">continue</span> <span class="comment">#根据提示使用"git rebase --continue"命令 弹出交互界面 如下图</span></span><br><span class="line">[detached HEAD 83f44c9] Add readme.md</span><br><span class="line"> Date: Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> create mode 100644 readme.md</span><br><span class="line">CONFLICT (modify/delete): readme deleted <span class="keyword">in</span> HEAD and modified <span class="keyword">in</span> 543c5d8... add <span class="built_in">test</span>. Version 543c5d8... add <span class="built_in">test</span> of readme left <span class="keyword">in</span> tree.</span><br><span class="line">error: could not apply 543c5d8... add <span class="built_in">test</span></span><br><span class="line">Resolve all conflicts manually, mark them as resolved with</span><br><span class="line"><span class="string">"git add/rm &lt;conflicted_files&gt;"</span>, <span class="keyword">then</span> run <span class="string">"git rebase --continue"</span>.</span><br><span class="line">You can instead skip this commit: run <span class="string">"git rebase --skip"</span>.</span><br><span class="line">To abort and get back to the state before <span class="string">"git rebase"</span>, run <span class="string">"git rebase --abort"</span>.</span><br><span class="line">Could not apply 543c5d8... add <span class="built_in">test</span></span><br><span class="line">$ git status <span class="comment">#查看状态 因为之前修改文件名后，合并分支的时候我将冲突文件readme添加进git库 所以这里出了冲突 这里我按照提示删掉readme文件（根据自己情况处理） </span></span><br><span class="line">interactive rebase <span class="keyword">in</span> progress; onto 33f7ae4</span><br><span class="line">Last commands <span class="keyword">done</span> (6 commands <span class="keyword">done</span>):</span><br><span class="line">   pick 4b6999e create folder and file</span><br><span class="line">   pick 543c5d8 add <span class="built_in">test</span></span><br><span class="line">  (see more <span class="keyword">in</span> file .git/rebase-merge/<span class="keyword">done</span>)</span><br><span class="line">Next commands to <span class="keyword">do</span> (5 remaining commands):</span><br><span class="line">   pick 4e43c01 Add hello world</span><br><span class="line">   pick 2241da2 Add <span class="string">"!"</span></span><br><span class="line">  (use <span class="string">"git rebase --edit-todo"</span> to view and edit)</span><br><span class="line">You are currently rebasing branch <span class="string">'master'</span> on <span class="string">'33f7ae4'</span>.</span><br><span class="line">  (fix conflicts and <span class="keyword">then</span> run <span class="string">"git rebase --continue"</span>)</span><br><span class="line">  (use <span class="string">"git rebase --skip"</span> to skip this patch)</span><br><span class="line">  (use <span class="string">"git rebase --abort"</span> to check out the original branch)</span><br><span class="line"></span><br><span class="line">Unmerged paths:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line">  (use <span class="string">"git add/rm &lt;file&gt;..."</span> as appropriate to mark resolution)</span><br><span class="line"></span><br><span class="line">	deleted by us:   readme</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line">$ git rm readme <span class="comment">#删除readme</span></span><br><span class="line">readme: needs merge</span><br><span class="line">rm <span class="string">'readme'</span></span><br><span class="line">$ git status <span class="comment">#查看状态</span></span><br><span class="line">interactive rebase <span class="keyword">in</span> progress; onto 33f7ae4</span><br><span class="line">Last commands <span class="keyword">done</span> (6 commands <span class="keyword">done</span>):</span><br><span class="line">   pick 4b6999e create folder and file</span><br><span class="line">   pick 543c5d8 add <span class="built_in">test</span></span><br><span class="line">  (see more <span class="keyword">in</span> file .git/rebase-merge/<span class="keyword">done</span>)</span><br><span class="line">Next commands to <span class="keyword">do</span> (5 remaining commands):</span><br><span class="line">   pick 4e43c01 Add hello world</span><br><span class="line">   pick 2241da2 Add <span class="string">"!"</span></span><br><span class="line">  (use <span class="string">"git rebase --edit-todo"</span> to view and edit)</span><br><span class="line">You are currently rebasing branch <span class="string">'master'</span> on <span class="string">'33f7ae4'</span>.</span><br><span class="line">  (all conflicts fixed: run <span class="string">"git rebase --continue"</span>)</span><br><span class="line"></span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">$ git rebase --<span class="built_in">continue</span> <span class="comment">#根据提示执行命令</span></span><br><span class="line">Auto-merging abc</span><br><span class="line">CONFLICT (content): Merge conflict <span class="keyword">in</span> abc</span><br><span class="line">error: could not apply ea0c484... Add hello world <span class="keyword">in</span> file</span><br><span class="line">Resolve all conflicts manually, mark them as resolved with</span><br><span class="line"><span class="string">"git add/rm &lt;conflicted_files&gt;"</span>, <span class="keyword">then</span> run <span class="string">"git rebase --continue"</span>.</span><br><span class="line">You can instead skip this commit: run <span class="string">"git rebase --skip"</span>.</span><br><span class="line">To abort and get back to the state before <span class="string">"git rebase"</span>, run <span class="string">"git rebase --abort"</span>.</span><br><span class="line">Could not apply ea0c484... Add hello world <span class="keyword">in</span> file</span><br><span class="line">$ git rebase --<span class="built_in">continue</span> <span class="comment">#我又执行了一次</span></span><br><span class="line">abc: needs merge</span><br><span class="line">You must edit all merge conflicts and <span class="keyword">then</span></span><br><span class="line">mark them as resolved using git add</span><br><span class="line">$ git status <span class="comment">#发现是还有冲突没有解决</span></span><br><span class="line">interactive rebase <span class="keyword">in</span> progress; onto 33f7ae4</span><br><span class="line">Last commands <span class="keyword">done</span> (9 commands <span class="keyword">done</span>):</span><br><span class="line">   pick 2241da2 Add <span class="string">"!"</span></span><br><span class="line">   pick ea0c484 Add hello world <span class="keyword">in</span> file</span><br><span class="line">  (see more <span class="keyword">in</span> file .git/rebase-merge/<span class="keyword">done</span>)</span><br><span class="line">Next commands to <span class="keyword">do</span> (2 remaining commands):</span><br><span class="line">   pick d2c1d2b Add add file</span><br><span class="line">   pick 9f2603b Create and Add three files. Add commit1 Add commit2 Add commit3</span><br><span class="line">  (use <span class="string">"git rebase --edit-todo"</span> to view and edit)</span><br><span class="line">You are currently rebasing branch <span class="string">'master'</span> on <span class="string">'33f7ae4'</span>.</span><br><span class="line">  (fix conflicts and <span class="keyword">then</span> run <span class="string">"git rebase --continue"</span>)</span><br><span class="line">  (use <span class="string">"git rebase --skip"</span> to skip this patch)</span><br><span class="line">  (use <span class="string">"git rebase --abort"</span> to check out the original branch)</span><br><span class="line"></span><br><span class="line">Unmerged paths:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to mark resolution)</span><br><span class="line"></span><br><span class="line">	both modified:   abc</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line">$ git add abc <span class="comment">#添加暂存区</span></span><br><span class="line">$ git commit -m<span class="string">'Modified abc file'</span> <span class="comment">#提交</span></span><br><span class="line">[detached HEAD 9e902c5] Modified abc file</span><br><span class="line"> 1 file changed, 4 insertions(+)</span><br><span class="line">$ git status <span class="comment">#查看状态</span></span><br><span class="line">interactive rebase <span class="keyword">in</span> progress; onto 33f7ae4</span><br><span class="line">Last commands <span class="keyword">done</span> (9 commands <span class="keyword">done</span>):</span><br><span class="line">   pick 2241da2 Add <span class="string">"!"</span></span><br><span class="line">   pick ea0c484 Add hello world <span class="keyword">in</span> file</span><br><span class="line">  (see more <span class="keyword">in</span> file .git/rebase-merge/<span class="keyword">done</span>)</span><br><span class="line">Next commands to <span class="keyword">do</span> (2 remaining commands):</span><br><span class="line">   pick d2c1d2b Add add file</span><br><span class="line">   pick 9f2603b Create and Add three files. Add commit1 Add commit2 Add commit3</span><br><span class="line">  (use <span class="string">"git rebase --edit-todo"</span> to view and edit)</span><br><span class="line">You are currently editing a commit <span class="keyword">while</span> rebasing branch <span class="string">'master'</span> on <span class="string">'33f7ae4'</span>.</span><br><span class="line">  (use <span class="string">"git commit --amend"</span> to amend the current commit)</span><br><span class="line">  (use <span class="string">"git rebase --continue"</span> once you are satisfied with your changes)</span><br><span class="line"></span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">$ git rebase --<span class="built_in">continue</span> <span class="comment">#再次执行continue rebase成功</span></span><br><span class="line">Successfully rebased and updated refs/heads/master.</span><br><span class="line">$ git <span class="built_in">log</span> --graph <span class="comment">#查看log 之前“readme”这条log已经没有了 被合并进了根节点</span></span><br><span class="line">* commit 437387c09feefda0188db6789e4873f7c35a2621 (HEAD -&gt; master)</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 26 13:37:51 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Create and Add three files.</span><br><span class="line">|     Add commit1</span><br><span class="line">|     Add commit2</span><br><span class="line">|     Add commit3</span><br><span class="line">| </span><br><span class="line">* commit 09460ecc7187a8e126891a041457e51e6693636c</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 19 17:03:02 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Add add file</span><br><span class="line">| </span><br><span class="line">* commit 9e902c5dd82e1ce7c4831d8b3ff46d32b409542c</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Mon May 27 21:47:37 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Modified abc file</span><br><span class="line">| </span><br><span class="line">* commit 21f4c7efb6177246d01cae84ccb2368728577aa4</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 19 17:01:01 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Add <span class="string">"!"</span></span><br><span class="line">| </span><br><span class="line">* commit 6d43e3783cc37f9490781622f56c36ae2901ab43</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 19 16:33:15 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Add hello world</span><br><span class="line">| </span><br><span class="line">* commit d463612e828044748283c6cc3a2c3a5bfb9a3386</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 19 13:50:07 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     create folder and file</span><br><span class="line">| </span><br><span class="line">* commit d88fcba14a272fd0f20f9e65315d6ed9c0db225a</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 19 13:46:22 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     create abc</span><br><span class="line">| </span><br><span class="line">* commit 3a1b19fa89e0e229f40b3bcc0bbf1f079d19b83f</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     学习工作区和暂存区</span><br><span class="line">| </span><br><span class="line">* commit 83f44c95d9456236929918dc7717a2bb9b452d93</span><br><span class="line">  Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">  Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line">  </span><br><span class="line">      Add readme.md</span><br><span class="line">      </span><br><span class="line">      Add readme</span><br><span class="line">      </span><br><span class="line">      rename</span><br></pre></td></tr></table></figure>
<h4 id="图示"><a href="#图示" class="headerlink" title="图示"></a>图示</h4><ul>
<li>交互界面</li>
</ul>
<p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/4.%E6%8A%8A%E9%97%B4%E9%9A%94%E7%9A%84%E5%87%A0%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/20190527213906.png" alt="img"></p>
<ul>
<li>将根节点的commit地址拷贝，加入第一行pick [address]，然后将原来rename那条commit复制到第一行的下边，并使用squash命令，保存退出。</li>
</ul>
<p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/4.%E6%8A%8A%E9%97%B4%E9%9A%94%E7%9A%84%E5%87%A0%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/20190527214015.png" alt="img"></p>
<ul>
<li>git rebase —continue</li>
</ul>
<p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/4.%E6%8A%8A%E9%97%B4%E9%9A%94%E7%9A%84%E5%87%A0%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/20190527214324.png" alt="img"></p>
<ul>
<li>添加message，保存退出。</li>
</ul>
<p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/4.%E6%8A%8A%E9%97%B4%E9%9A%94%E7%9A%84%E5%87%A0%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/20190527214424.png" alt="img"></p>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
</search>
