<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jamme</title>
  
  <subtitle>This is Jamme&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.jammelee.top/"/>
  <updated>2020-05-31T02:47:32.087Z</updated>
  <id>http://blog.jammelee.top/</id>
  
  <author>
    <name>Jamme</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>投影变换的推导</title>
    <link href="http://blog.jammelee.top/2020/05/31/ComputerGraphics/%E6%8A%95%E5%BD%B1%E5%8F%98%E6%8D%A2%E7%9A%84%E6%8E%A8%E5%AF%BC/"/>
    <id>http://blog.jammelee.top/2020/05/31/ComputerGraphics/%E6%8A%95%E5%BD%B1%E5%8F%98%E6%8D%A2%E7%9A%84%E6%8E%A8%E5%AF%BC/</id>
    <published>2020-05-31T02:35:25.000Z</published>
    <updated>2020-05-31T02:47:32.087Z</updated>
    
    <content type="html"><![CDATA[<h1 id="投影变换推导"><a href="#投影变换推导" class="headerlink" title="投影变换推导"></a>投影变换推导</h1><p>这里我们说到的投影分为两种：</p><ul><li>正交投影(Orthographic projection (O))</li><li>透视投影(Perspective projection (P))</li></ul><p><img src="https://raw.githubusercontent.com/JammeLee/MyPicBed/master/%E7%BB%86%E8%AF%B4%E5%9B%BE%E5%BD%A2%E5%AD%A6%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/20191118233041.png" alt="img"></p><h2 id="正交投影-Orthographic-projecton"><a href="#正交投影-Orthographic-projecton" class="headerlink" title="正交投影(Orthographic projecton)"></a>正交投影(Orthographic projecton)</h2><p>先来说一说最简单的正交投影，我们需要做的是：</p><ul><li>定义一个<script type="math/tex">[l, r] * [b, t] * [f, n]</script>的立方体</li><li>然后将定义的立方体转换成“标准(canonical)”立方体<script type="math/tex">[-1, 1]^{3}</script></li></ul><p><img src="https://raw.githubusercontent.com/JammeLee/MyPicBed/master/%E7%BB%86%E8%AF%B4%E5%9B%BE%E5%BD%A2%E5%AD%A6%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/20200531015713.png" alt="img"></p><p>如上图，我们想要把最左边的长方体变成最右边的立方体，需要两步：</p><ul><li>平移(Translate)</li><li>缩放(Scale)</li></ul><h3 id="平移-Translate"><a href="#平移-Translate" class="headerlink" title="平移(Translate)"></a>平移(Translate)</h3><p>首先我们要做的操作就是平移，先把长方体的中心点移至原点（origin）。因为我们已经知道l,r,b,t,f,n六个参数，所以我们可以计算出当前长方体的中心点，即：</p><script type="math/tex; mode=display">(x, y, z) = (\frac{(r + l)}{2}, \frac{(t + b)}{2}, \frac{(n + f)}{2})</script><p>那么平移变换矩阵就应该是一个单位矩阵加上平移部分，要想将长方体的中心点移至原点（origin），只需要把所有点都减去长方体的中心点即可。</p><script type="math/tex; mode=display">M_{Translate} = \begin{pmatrix}1 & 0 & 0 & -\frac{(r + l)}{2} \\0 & 1 & 0 & -\frac{(t + b)}{2} \\0 & 0 & 1 & -\frac{(n + f)}{2} \\0 & 0 & 0 & 1 \\\end{pmatrix}</script><h3 id="缩放-Scale"><a href="#缩放-Scale" class="headerlink" title="缩放(Scale)"></a>缩放(Scale)</h3><p>有了平移变换，接下来要做的就是缩放了，将每个点都等比缩放至<script type="math/tex">[-1, 1]^{3}</script>立方体上。那么<script type="math/tex">[l, r]</script>和<script type="math/tex">[-1, 1]</script>的比例为<script type="math/tex">\frac{2}{r - l}</script>，<script type="math/tex">[b, t]</script>和<script type="math/tex">[-1, 1]</script>的比例为<script type="math/tex">\frac{2}{t - b}</script>，<script type="math/tex">[f, n]</script>和<script type="math/tex">[-1, 1]</script>的比例为<script type="math/tex">\frac{2}{n - f}</script>（因为相机照像<script type="math/tex">-z</script>方向，所以<script type="math/tex">n</script>比<script type="math/tex">f</script>大）。</p><script type="math/tex; mode=display">M_{Scale} = \begin{pmatrix}\frac{2}{r - l} & 0 & 0 & 0 \\0 & \frac{2}{t - b} & 0 & 0 \\0 & 0 & \frac{2}{n - f} & 0 \\0 & 0 & 0 & 1 \\\end{pmatrix}</script><h3 id="两种变换相乘"><a href="#两种变换相乘" class="headerlink" title="两种变换相乘"></a>两种变换相乘</h3><p>将平移和缩放融合在一起，即两矩阵相乘：</p><script type="math/tex; mode=display">\begin{equation}\begin{split}M_{Ortho} &= M_{Scale} * M_{Translate} \\&= \begin{pmatrix}\frac{2}{r - l} & 0 & 0 & 0 \\0 & \frac{2}{t - b} & 0 & 0 \\0 & 0 & \frac{2}{n - f} & 0 \\0 & 0 & 0 & 1 \\\end{pmatrix}*\begin{pmatrix}1 & 0 & 0 & -\frac{(r + l)}{2} \\0 & 1 & 0 & -\frac{(t + b)}{2} \\0 & 0 & 1 & -\frac{(n + f)}{2} \\0 & 0 & 0 & 1 \\\end{pmatrix} \\&=\begin{pmatrix}\frac{2}{r - l} & 0 & 0 & -\frac{(r + l)}{r - l} \\0 & \frac{2}{t - b} & 0 & -\frac{(t + b)}{t - b} \\0 & 0 & \frac{2}{n - f} & -\frac{(n + f)}{n - f} \\0 & 0 & 0 & 1 \\\end{pmatrix} \\\end{split}\end{equation}</script><h2 id="透视投影-Perspective-projection"><a href="#透视投影-Perspective-projection" class="headerlink" title="透视投影(Perspective projection)"></a>透视投影(Perspective projection)</h2><p>透视投影相对于正交投影就比较困难了，不过我们可以换一种思路</p><ul><li>首先，把视锥体(view frustum)挤扁成一个立方体(cuboid)(<script type="math/tex">M_{Persp->Ortho}</script>)</li><li>然后，我们通过正交投影，即可把远平面投影至近平面</li></ul><p><img src="https://raw.githubusercontent.com/JammeLee/MyPicBed/master/%E7%BB%86%E8%AF%B4%E5%9B%BE%E5%BD%A2%E5%AD%A6%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/20200531025421.png" alt="img"></p><h3 id="把视锥体-view-frustum-挤扁成一个立方体-cuboid"><a href="#把视锥体-view-frustum-挤扁成一个立方体-cuboid" class="headerlink" title="把视锥体(view frustum)挤扁成一个立方体(cuboid)"></a>把视锥体(view frustum)挤扁成一个立方体(cuboid)</h3><p>在挤压的过程中，我们需要规定几件事情：</p><ul><li>近平面上的任意点都不会改变</li><li>远平面上的<script type="math/tex">z</script>值不变，永远都是<script type="math/tex">f</script></li><li>远平面上的中心点不变</li></ul><p>下面我们来寻找一下近平面和远平面之间的点的关系，从视锥体的右侧观察，如下图：</p><p><img src="https://raw.githubusercontent.com/JammeLee/MyPicBed/master/%E7%BB%86%E8%AF%B4%E5%9B%BE%E5%BD%A2%E5%AD%A6%E6%B8%B2%E6%9F%93%E7%AE%A1%E7%BA%BF/20200531025750.png" alt="img"></p><p>通过相似三角形的性质，可以得出<script type="math/tex">y^{'} = \frac{n}{z}y</script>，同理，<script type="math/tex">x^{'} = \frac{n}{z}x</script>。</p><p>因为<script type="math/tex">z</script>暂时未知，那么我们可以得出，点<script type="math/tex">\begin{pmatrix} x & y & z & 1\end{pmatrix}^{T}</script>经过变换后，可以得到点<script type="math/tex">\begin{pmatrix} \frac{nx}{z} & \frac{ny}{z} & unknow & 1\end{pmatrix}^{T}</script>。</p><p>通过齐次坐标，我们可以将点<script type="math/tex">\begin{pmatrix} \frac{nx}{z} & \frac{ny}{z} & unknow & 1\end{pmatrix}^{T}</script>转换为点<script type="math/tex">\begin{pmatrix} nx & ny & unknow & z\end{pmatrix}^{T}</script>。</p><p>所以，</p><script type="math/tex; mode=display">M_{Persp->Ortho} · \begin{pmatrix} x \\ y \\ z \\ 1\end{pmatrix} = \begin{pmatrix} nx \\ ny \\ unknow \\ z\end{pmatrix}</script><p>根据上述等式，我们已经可以反推出：</p><script type="math/tex; mode=display">M_{Persp->Ortho} = \begin{pmatrix} n & 0 & 0 & 0\\0 & n & 0 & 0 \\? & ? & ? & ? \\ 0 & 0 & 1 & 0 \\\end{pmatrix}</script><p>那么未知的第三行应该如何推算呢？我们可以思考两个特殊条件：</p><ul><li>近平面上任意点在做变换后，不会改变</li><li>远平面上任意点的z值在做变换后，不会改变</li></ul><h4 id="近平面上任意点变换后不会改变"><a href="#近平面上任意点变换后不会改变" class="headerlink" title="近平面上任意点变换后不会改变"></a>近平面上任意点变换后不会改变</h4><p>取近平面上点<script type="math/tex">(x, y, n, 1)^{T}</script>，通过齐次坐标，可以转换为点<script type="math/tex">(nx, ny, n^{2}, n)^{T}</script>。则：</p><script type="math/tex; mode=display">\begin{equation}\begin{split}M_{Persp->Ortho} · \begin{pmatrix}x \\ y \\ n \\ 1\\ \end{pmatrix} &= \begin{pmatrix}nx \\ ny \\ n^{2} \\ n\\ \end{pmatrix} \\\begin{pmatrix} n & 0 & 0 & 0\\0 & n & 0 & 0 \\? & ? & ? & ? \\ 0 & 0 & 1 & 0 \\\end{pmatrix}·\begin{pmatrix}x \\ y \\ n \\ 1\\ \end{pmatrix} &= \begin{pmatrix}nx \\ ny \\ n^{2} \\ n\\ \end{pmatrix}\\\end{split}\end{equation}</script><p>我们单独解出变换矩阵的第三行，即：</p><script type="math/tex; mode=display">\begin{pmatrix} ? & ? & ? & ? \\ \end{pmatrix}·\begin{pmatrix}x \\ y \\ n \\ 1\\ \end{pmatrix} = n^{2}</script><p>因为等式结果等于<script type="math/tex">n^{2}</script>，与<script type="math/tex">x</script>和<script type="math/tex">y</script>值并没有关系，所以得出：</p><script type="math/tex; mode=display">\begin{pmatrix} 0 & 0 & A & B \\ \end{pmatrix}·\begin{pmatrix}x \\ y \\ n \\ 1\\ \end{pmatrix} = n^{2}</script><p>可得出（1）式，</p><script type="math/tex; mode=display">An + B = n^{2}</script><h4 id="远平面上任意点的z值变换后不会改变"><a href="#远平面上任意点的z值变换后不会改变" class="headerlink" title="远平面上任意点的z值变换后不会改变"></a>远平面上任意点的z值变换后不会改变</h4><p>因为开始时，我们规定远平面中心点在变换后，仍然不改变，所以我们取远平面的中心点<script type="math/tex">(0, 0, f, 1)^{T}</script>，通过齐次坐标，我们可以将点转换为<script type="math/tex">(0, 0, f^{2}, f)^{T}</script>。</p><p>则，</p><script type="math/tex; mode=display">\begin{pmatrix} n & 0 & 0 & 0\\0 & n & 0 & 0 \\0 & 0 & A & B \\ 0 & 0 & 1 & 0 \\\end{pmatrix}·\begin{pmatrix}0 \\ 0 \\ f \\ 1\\ \end{pmatrix} = \begin{pmatrix}0 \\ 0 \\ f^{2} \\ f\\ \end{pmatrix}\\</script><p>因为等式结果等于<script type="math/tex">f^{2}</script>，与<script type="math/tex">x</script>和<script type="math/tex">y</script>值并没有关系，所以得出：</p><script type="math/tex; mode=display">\begin{pmatrix} 0 & 0 & A & B \\ \end{pmatrix}·\begin{pmatrix}0 \\ 0 \\ f \\ 1\\ \end{pmatrix} = f^{2}</script><p>可得出（2）式，</p><script type="math/tex; mode=display">Af + B = f^{2}</script><p>由（1）式和（2）式解得：</p><script type="math/tex; mode=display">A = n + f \\B = -nf</script><p>所以，得出：</p><script type="math/tex; mode=display">M_{Persp->Ortho} = \begin{pmatrix} n & 0 & 0 & 0\\0 & n & 0 & 0 \\0 & 0 & n + f & -nf \\ 0 & 0 & 1 & 0 \\\end{pmatrix}</script><h3 id="通过正交投影把远平面投影至近平面"><a href="#通过正交投影把远平面投影至近平面" class="headerlink" title="通过正交投影把远平面投影至近平面"></a>通过正交投影把远平面投影至近平面</h3><p>正交投影的变换矩阵在上边我们已经求出，且<script type="math/tex">M_{Persp->Ortho}</script>也已求出，所以我们可以通过矩阵乘法求得<script type="math/tex">M_{Persp}</script>。</p><p>即，</p><script type="math/tex; mode=display">\begin{equation}\begin{split}M_{Persp} &= M_{Ortho} · M_{Persp->Ortho} \\&= \begin{pmatrix}\frac{2}{r - l} & 0 & 0 & -\frac{(r + l)}{r - l} \\0 & \frac{2}{t - b} & 0 & -\frac{(t + b)}{t - b} \\0 & 0 & \frac{2}{n - f} & -\frac{(n + f)}{n - f} \\0 & 0 & 0 & 1 \\\end{pmatrix}·\begin{pmatrix} n & 0 & 0 & 0\\0 & n & 0 & 0 \\0 & 0 & n + f & -nf \\ 0 & 0 & 1 & 0 \\\end{pmatrix} \\&=\begin{pmatrix}\frac{2n}{r - l} & 0 & -\frac{r + l}{r - l} & 0 \\0 & \frac{2}{t - b} & -\frac{(t + b)}{t - b} & 0 \\0 & 0 & \frac{n + f}{n - f} & -\frac{2nf}{n - f} \\0 & 0 & 1 & 0 \\\end{pmatrix} \\\end{split}\end{equation}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;投影变换推导&quot;&gt;&lt;a href=&quot;#投影变换推导&quot; class=&quot;headerlink&quot; title=&quot;投影变换推导&quot;&gt;&lt;/a&gt;投影变换推导&lt;/h1&gt;&lt;p&gt;这里我们说到的投影分为两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;正交投影(Orthographic projecti
      
    
    </summary>
    
    
      <category term="Computer Graphics" scheme="http://blog.jammelee.top/categories/Computer-Graphics/"/>
    
    
      <category term="Derivation" scheme="http://blog.jammelee.top/tags/Derivation/"/>
    
  </entry>
  
  <entry>
    <title>Hexo使用命令生成文章</title>
    <link href="http://blog.jammelee.top/2020/05/20/Other/Hexo%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E7%94%9F%E6%88%90%E6%96%87%E7%AB%A0/"/>
    <id>http://blog.jammelee.top/2020/05/20/Other/Hexo%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E7%94%9F%E6%88%90%E6%96%87%E7%AB%A0/</id>
    <published>2020-05-19T18:01:12.000Z</published>
    <updated>2020-05-19T18:10:36.242Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hexo使用命令生成文章"><a href="#Hexo使用命令生成文章" class="headerlink" title="Hexo使用命令生成文章"></a>Hexo使用命令生成文章</h3><ul><li>hexo new &lt;文章类型&gt;  [文章名称]</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new post post1 <span class="comment">#在source/_posts/路径下生成post1.md和post1/</span></span><br><span class="line">$ hexo new post -p Path/post2 <span class="comment">#在source/_post/Path/路径下生成post2.md和post2/</span></span><br><span class="line">$ hexo new page page1 <span class="comment">#在source路径下生成page1/index/和page1/index.md</span></span><br><span class="line">$ hexo new draft draft1 <span class="comment">#在source/_draft下生成test/和test.md</span></span><br></pre></td></tr></table></figure><p>即，<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Usage: hexo new [layout] &lt;title&gt;</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">Create a new post.</span><br><span class="line"></span><br><span class="line">Arguments:</span><br><span class="line"> layout Post layout. Use post, page, draft or whatever you want.</span><br><span class="line"> title Post title. Wrap it with quotations to escape.</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line"> -p, --path Post path. Customize the path of the post.</span><br><span class="line"> -r, --replace Replace the current post <span class="keyword">if</span> existed.</span><br><span class="line"> -s, --slug Post slug. Customize the URL of the post.</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Hexo使用命令生成文章&quot;&gt;&lt;a href=&quot;#Hexo使用命令生成文章&quot; class=&quot;headerlink&quot; title=&quot;Hexo使用命令生成文章&quot;&gt;&lt;/a&gt;Hexo使用命令生成文章&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;hexo new &amp;lt;文章类型&amp;gt;  [
      
    
    </summary>
    
    
      <category term="Other" scheme="http://blog.jammelee.top/categories/Other/"/>
    
    
      <category term="Hexo" scheme="http://blog.jammelee.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo文件夹名称大小写问题</title>
    <link href="http://blog.jammelee.top/2020/05/20/Other/Hexo%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8D%E7%A7%B0%E5%A4%A7%E5%B0%8F%E5%86%99%E9%97%AE%E9%A2%98/"/>
    <id>http://blog.jammelee.top/2020/05/20/Other/Hexo%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8D%E7%A7%B0%E5%A4%A7%E5%B0%8F%E5%86%99%E9%97%AE%E9%A2%98/</id>
    <published>2020-05-19T17:43:49.000Z</published>
    <updated>2020-05-19T18:02:39.098Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hexo文件夹名称大小写问题"><a href="#Hexo文件夹名称大小写问题" class="headerlink" title="Hexo文件夹名称大小写问题"></a>Hexo文件夹名称大小写问题</h3><p>因为更换了主题，所以修改了About和Tags文件夹的名称，把首写字母改成了小写，但是因为Git不区分大小写，所以导致修改后，执行如下命令时报错。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">INFO  Copying files from extend <span class="built_in">dirs</span>...</span><br><span class="line">fatal: will not add file <span class="built_in">alias</span> <span class="string">'About/index.html'</span> (<span class="string">'about/index.html'</span> already exists <span class="keyword">in</span> index)</span><br><span class="line">FATAL Something<span class="string">'s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">Error: Spawn failed</span></span><br><span class="line"><span class="string">    at ChildProcess.task.on.code (/Users/jamme/Documents/WorkSpace/GitHub/MyBlog/JammeLee.github.blog/node_modules/hexo-deployer-git/node_modules/hexo-util/lib/spawn.js:51:21)</span></span><br><span class="line"><span class="string">    at ChildProcess.emit (events.js:182:13)</span></span><br><span class="line"><span class="string">    at Process.ChildProcess._handle.onexit (internal/child_process.js:240:12)</span></span><br></pre></td></tr></table></figure></p><p>随后，做出了如下尝试，虽然不报错了，但是GitHub pages仓库里出现了两个首写字母分别为大写和小写的文件夹：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> .deploy_git/ <span class="comment">#从blog的工作路径下切入</span></span><br><span class="line">$ git config --<span class="built_in">local</span> core.ignorecase <span class="literal">false</span> <span class="comment">#取消忽略大小写</span></span><br></pre></td></tr></table></figure><p>这种情况下可以做如下修改：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ rm -rf about/</span><br><span class="line">$ rm -rf tags/</span><br><span class="line">$ git add -u</span><br><span class="line">$ git commit -m<span class="string">'Remove'</span></span><br><span class="line">$ git push</span><br></pre></td></tr></table></figure><p>然后重新切回blog工作路径，执行<code>hexo clean</code>和<code>hexo g</code>，这个时候再次执行<code>hexo d</code>时，就OK了。<br>注：也可从Finder中直接找到<code>.deploy_git/.git</code>文件夹，然后修改其中的<code>config</code>文件。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Hexo文件夹名称大小写问题&quot;&gt;&lt;a href=&quot;#Hexo文件夹名称大小写问题&quot; class=&quot;headerlink&quot; title=&quot;Hexo文件夹名称大小写问题&quot;&gt;&lt;/a&gt;Hexo文件夹名称大小写问题&lt;/h3&gt;&lt;p&gt;因为更换了主题，所以修改了About和Tag
      
    
    </summary>
    
    
      <category term="Other" scheme="http://blog.jammelee.top/categories/Other/"/>
    
    
      <category term="Hexo" scheme="http://blog.jammelee.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>V2ray+ws+tls</title>
    <link href="http://blog.jammelee.top/2020/03/20/Other/v2ray/"/>
    <id>http://blog.jammelee.top/2020/03/20/Other/v2ray/</id>
    <published>2020-03-20T15:04:06.000Z</published>
    <updated>2020-05-19T17:45:59.935Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装V2Ray"><a href="#安装V2Ray" class="headerlink" title="安装V2Ray"></a>安装V2Ray</h3><p>装机系统版本：CentOs7</p><p>首先，安装V2ray：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://install.direct/go.sh)</span><br></pre></td></tr></table></figure></p><p>然后，设置开机启动：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> v2ray</span><br></pre></td></tr></table></figure></p><h3 id="安装SSL证书"><a href="#安装SSL证书" class="headerlink" title="安装SSL证书"></a>安装SSL证书</h3><p>安装EPEL：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install epel-release</span><br></pre></td></tr></table></figure></p><p>安装certbot用于签发SSL证书：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install certbot</span><br></pre></td></tr></table></figure><br>我这里在安装certbot时，出现了错误：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: repos-lax.psychz.net</span><br><span class="line"> * elrepo-kernel: repos.lax-noc.com</span><br><span class="line"> * extras: repos-lax.psychz.net</span><br><span class="line"> * updates: repos-lax.psychz.net</span><br><span class="line">No package certbot available.</span><br><span class="line">Error: Nothing to <span class="keyword">do</span></span><br></pre></td></tr></table></figure></p><p>需要执行以下几行命令：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum remove epel-release</span><br><span class="line">yum clean all</span><br><span class="line">yum -y install yum-utils</span><br><span class="line">yum -y install epel-release</span><br></pre></td></tr></table></figure></p><p>申请SSL证书：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">certbot certonly --standalone -d example.com</span><br></pre></td></tr></table></figure><br>这里的<em>example.com</em>替换成自己的域名</p><p>如果申请成功，证书和私钥路径如下：</p><blockquote><p>/etc/letsencrypt/live/example.com/fullchain.pem<br>/etc/letsencrypt/live/example.com/privkey.pem</p></blockquote><h3 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h3><p>添加一个Nginx安装源：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/yum.repos.d/nginx.repo</span><br></pre></td></tr></table></figure></p><p>写入：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[nginx]</span><br><span class="line">name=nginx repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/7/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure></p><p>写入完成按ESC，然后输入:wq，回车保存并退出</p><p>安装Nginx：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install nginx</span><br></pre></td></tr></table></figure></p><p>设置开机启动：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> nginx</span><br></pre></td></tr></table></figure></p><p>新建一个Nginx站点配置文件：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/nginx/conf.d/v2ray.conf</span><br></pre></td></tr></table></figure></p><p>写入如下内容：（注意example.com请更换为自己的域名）<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       443 ssl;</span><br><span class="line">    server_name  example.com;</span><br><span class="line"></span><br><span class="line">    ssl_certificate    /etc/letsencrypt/live/example.com/fullchain.pem;</span><br><span class="line">    ssl_certificate_key    /etc/letsencrypt/live/example.com/privkey.pem;</span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    ssl_session_cache shared:SSL:10m;</span><br><span class="line">    ssl_session_timeout 10m;</span><br><span class="line">    error_page 497  https://<span class="variable">$host</span><span class="variable">$request_uri</span>;</span><br><span class="line"></span><br><span class="line">location /ray &#123;</span><br><span class="line">    proxy_pass       http://127.0.0.1:10000;</span><br><span class="line">    proxy_redirect             off;</span><br><span class="line">    proxy_http_version         1.1;</span><br><span class="line">    proxy_set_header Upgrade   <span class="variable">$http_upgrade</span>;</span><br><span class="line">    proxy_set_header Connection <span class="string">"upgrade"</span>;</span><br><span class="line">    proxy_set_header Host      <span class="variable">$http_host</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其中443是网站端口同时也是V2Ray传输端口，127.0.0.1:10000其中的10000是监听端口，可以自行更改，然后防火墙放行所需端口，或者直接关闭防火墙</p><h3 id="配置V2Ray服务端"><a href="#配置V2Ray服务端" class="headerlink" title="配置V2Ray服务端"></a>配置V2Ray服务端</h3><p>备份一下v2ray的默认配置文件：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp /etc/v2ray/config.json /etc/v2ray/config.json.bak</span><br></pre></td></tr></table></figure></p><p>清空配置文件的内容：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">""</span> &gt; /etc/v2ray/config.json</span><br></pre></td></tr></table></figure></p><p>编辑配置文件：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/v2ray/config.json</span><br></pre></td></tr></table></figure></p><p>写入如下内容：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"inbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"port"</span>: 10000,</span><br><span class="line">      <span class="string">"listen"</span>:<span class="string">"127.0.0.1"</span>,</span><br><span class="line">      <span class="string">"protocol"</span>: <span class="string">"vmess"</span>,</span><br><span class="line">      <span class="string">"settings"</span>: &#123;</span><br><span class="line">        <span class="string">"clients"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="string">"id"</span>: <span class="string">"你的UUID"</span>,</span><br><span class="line">            <span class="string">"alterId"</span>: 64</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"streamSettings"</span>: &#123;</span><br><span class="line">        <span class="string">"network"</span>: <span class="string">"ws"</span>,</span><br><span class="line">        <span class="string">"wsSettings"</span>: &#123;</span><br><span class="line">        <span class="string">"path"</span>: <span class="string">"/ray"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"outbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">"protocol"</span>: <span class="string">"freedom"</span>,</span><br><span class="line">      <span class="string">"settings"</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>注：<code>port</code>字段要用上方nginx配置文件中<code>proxy_pass</code>字段里的端口号，客户端中的端口号要使用nginx中<code>listen</code>字段填写的端口号。<br>UUID可以用这个网站生成：<a href="https://www.uuidgenerator.net" target="_blank" rel="noopener">https://www.uuidgenerator.net</a><br>全部完成之后，关闭系统防火墙或者自行更改配置：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><p>同时把SELinux也关了：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/selinux/config</span><br><span class="line">SELINUX=disabled</span><br><span class="line">setenforce 0</span><br></pre></td></tr></table></figure></p><p>启动v2ray和nginx：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start v2ray</span><br><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure></p><p>检查是否运行正常：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status v2ray</span><br><span class="line">systemctl status nginx</span><br></pre></td></tr></table></figure></p><p>两个都显示为绿色的active(running)则说明运行成功<br>到此，服务端的配置完成</p><h3 id="CloudFlare"><a href="#CloudFlare" class="headerlink" title="CloudFlare"></a>CloudFlare</h3><p>HTTP ports supported by Cloudflare:</p><ul><li>80</li><li>8080</li><li>8880</li><li>2052</li><li>2082</li><li>2086</li><li><p>2095<br>HTTPS ports supported by Cloudflare:</p></li><li><p>443</p></li><li>2053</li><li>2083</li><li>2087</li><li>2096</li><li>8443</li></ul><p>参考文章：<br><a href="https://www.ecsoe.com/archives/38.html" target="_blank" rel="noopener">https://www.ecsoe.com/archives/38.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装V2Ray&quot;&gt;&lt;a href=&quot;#安装V2Ray&quot; class=&quot;headerlink&quot; title=&quot;安装V2Ray&quot;&gt;&lt;/a&gt;安装V2Ray&lt;/h3&gt;&lt;p&gt;装机系统版本：CentOs7&lt;/p&gt;
&lt;p&gt;首先，安装V2ray：&lt;br&gt;&lt;figure class
      
    
    </summary>
    
    
      <category term="Other" scheme="http://blog.jammelee.top/categories/Other/"/>
    
    
      <category term="V2ray" scheme="http://blog.jammelee.top/tags/V2ray/"/>
    
  </entry>
  
  <entry>
    <title>如何将Git仓库备份到本地</title>
    <link href="http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/12.%E5%A6%82%E4%BD%95%E5%B0%86Git%E4%BB%93%E5%BA%93%E5%A4%87%E4%BB%BD%E5%88%B0%E6%9C%AC%E5%9C%B0/"/>
    <id>http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/12.%E5%A6%82%E4%BD%95%E5%B0%86Git%E4%BB%93%E5%BA%93%E5%A4%87%E4%BB%BD%E5%88%B0%E6%9C%AC%E5%9C%B0/</id>
    <published>2019-10-21T15:19:10.000Z</published>
    <updated>2019-10-21T15:24:10.557Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="如何将Git仓库备份到本地"><a href="#如何将Git仓库备份到本地" class="headerlink" title="如何将Git仓库备份到本地"></a>如何将Git仓库备份到本地</h3><h4 id="常用的传输协议"><a href="#常用的传输协议" class="headerlink" title="常用的传输协议"></a>常用的传输协议</h4><div class="table-container"><table><thead><tr><th style="text-align:center">常用协议</th><th style="text-align:center">语法格式</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">本地协议（1）</td><td style="text-align:center">/path/to/repo.git</td><td style="text-align:center">哑协议</td></tr><tr><td style="text-align:center">本地协议（2）</td><td style="text-align:center">file:///path/to/repo.git</td><td style="text-align:center">智能协议</td></tr><tr><td style="text-align:center">http/https协议</td><td style="text-align:center"><a href="http://git-server.com:port/path/to/repo.git">http://git-server.com:port/path/to/repo.git</a><br><a href="https://git-server.com:port/path/to/repo.git">https://git-server.com:port/path/to/repo.git</a></td><td style="text-align:center">平时接触到的都是智能协议</td></tr><tr><td style="text-align:center">ssh协议</td><td style="text-align:center">user@git-server.com:path/to/repo.git</td><td style="text-align:center">工作中最常用的智能协议</td></tr></tbody></table></div><h4 id="哑协议与智能协议"><a href="#哑协议与智能协议" class="headerlink" title="哑协议与智能协议"></a>哑协议与智能协议</h4><ul><li>直观区别： 哑协议传输进度不可见；智能协议传输可见。</li><li>传输速度： 智能协议比哑协议传输速度快。</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkdir git-backup <span class="comment">#创建一个备份文件夹</span></span><br><span class="line">$ <span class="built_in">cd</span> git-backup <span class="comment">#切换到文件夹下</span></span><br><span class="line">$ git <span class="built_in">clone</span> --bare /Users/xxx/Documents/WorkSpace/GitTest/LocalTest/.git ya.git <span class="comment">#使用哑协议 克隆一个不带工作区的仓库</span></span><br><span class="line">Cloning into bare repository <span class="string">'ya.git'</span>...</span><br><span class="line"><span class="keyword">done</span>.</span><br><span class="line">$ ls</span><br><span class="line">ya.git</span><br><span class="line">$ git <span class="built_in">clone</span> --bare file:///Users/xxx/Documents/WorkSpace/GitTest/LocalTest/.git zhineng.git <span class="comment">#使用智能协议 克隆一个不带工作区的仓库（智能协议传输不仅有打包，还有压缩，所以传输速度快）</span></span><br><span class="line">Cloning into bare repository <span class="string">'zhineng.git'</span>...</span><br><span class="line">remote: Enumerating objects: 47, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (47/47), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (34/34), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 47 (delta 11), reused 0 (delta 0)</span><br><span class="line">Receiving objects: 100% (47/47), 4.06 KiB | 4.06 MiB/s, <span class="keyword">done</span>.</span><br><span class="line">Resolving deltas: 100% (11/11), <span class="keyword">done</span>.</span><br><span class="line">$ ls</span><br><span class="line">ya.git      zhineng.git</span><br></pre></td></tr></table></figure><h4 id="在工作环境中，如何把变更快速的同步到其他地方"><a href="#在工作环境中，如何把变更快速的同步到其他地方" class="headerlink" title="在工作环境中，如何把变更快速的同步到其他地方"></a>在工作环境中，如何把变更快速的同步到其他地方</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/Users/xxx/Documents/WorkSpace/GitTest/LocalTest</span><br><span class="line">$ git remote -v <span class="comment">#查看发现还没有远端仓库</span></span><br><span class="line">$ git remote add zhineng file:///Users/jamme/Documents/WorkSpace/GitTest/git-backup/zhineng.git <span class="comment">#使用智能协议创建远端仓库 仓库名zhineng</span></span><br><span class="line">$ git branch -av <span class="comment">#查看分支 此时查看上边创建远端分支(zhineng.git) 也只有master和temp分支</span></span><br><span class="line">  master 9522b28 modify content</span><br><span class="line">* temp   a82282c Modified readme.md</span><br><span class="line">$ git checkout remote_test <span class="comment">#创建新分支</span></span><br><span class="line">Switched to branch <span class="string">'remote_test'</span></span><br><span class="line">$ git branch -av</span><br><span class="line">  master      9522b28 modify content</span><br><span class="line">* remote_test a82282c Modified readme.md</span><br><span class="line">  temp        a82282c Modified readme.md</span><br><span class="line">$ git push zhineng <span class="comment">#推送到远端zhineng分支 这里需要设置upstream</span></span><br><span class="line">fatal: The current branch remote_test has no upstream branch.</span><br><span class="line">To push the current branch and <span class="built_in">set</span> the remote as upstream, use</span><br><span class="line"></span><br><span class="line">    git push --<span class="built_in">set</span>-upstream zhineng remote_test</span><br><span class="line">$ git push --<span class="built_in">set</span>-upstream zhineng remote_test <span class="comment">#意味着下次push’remote_test‘分支到’zhineng‘分支就不用再设置</span></span><br><span class="line">Total 0 (delta 0), reused 0 (delta 0)</span><br><span class="line">To file:///Users/jamme/Documents/WorkSpace/GitTest/git-backup/zhineng.git</span><br><span class="line"> * [new branch]      remote_test -&gt; remote_test</span><br><span class="line">Branch <span class="string">'remote_test'</span> <span class="built_in">set</span> up to track remote branch <span class="string">'remote_test'</span> from <span class="string">'zhineng'</span>.</span><br></pre></td></tr></table></figure><ul><li>切换至远端</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">pwd</span></span><br><span class="line">/Users/xxx/Documents/WorkSpace/GitTest/git-backup/zhineng.git</span><br><span class="line">$ git branch -av</span><br><span class="line">  master      9522b28 modify content</span><br><span class="line">  remote_test a82282c Modified readme.md</span><br><span class="line">* temp        a82282c Modified readme.md</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h3 id=&quot;如何将Git仓库备份到本地&quot;&gt;&lt;a href=&quot;#如何将Git仓库备份到本地&quot; class=&quot;headerlink&quot; title=&quot;如何将Git仓库备份到本地&quot;&gt;&lt;/a&gt;如何将Git仓库备份到本地&lt;/h3&gt;&lt;h4 id=&quot;常用的传输协议&quot;&gt;&lt;a href
      
    
    </summary>
    
    
    
      <category term="Git" scheme="http://blog.jammelee.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>指定不需要Git管理的文件</title>
    <link href="http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/11.%E6%8C%87%E5%AE%9A%E4%B8%8D%E9%9C%80%E8%A6%81Git%E7%AE%A1%E7%90%86%E7%9A%84%E6%96%87%E4%BB%B6/"/>
    <id>http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/11.%E6%8C%87%E5%AE%9A%E4%B8%8D%E9%9C%80%E8%A6%81Git%E7%AE%A1%E7%90%86%E7%9A%84%E6%96%87%E4%BB%B6/</id>
    <published>2019-10-21T15:18:52.000Z</published>
    <updated>2020-05-23T04:01:23.712Z</updated>
    
    <content type="html"><![CDATA[<h3 id="指定不需要Git管理的文件"><a href="#指定不需要Git管理的文件" class="headerlink" title="指定不需要Git管理的文件"></a>指定不需要Git管理的文件</h3><ul><li>.gitignore文件</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ mkdir doc #创建一个doc文件夹</span><br><span class="line">$ echo &#39;hi&#39; &gt; doc&#x2F;ignoret #在doc文件夹下创建一个文件</span><br><span class="line">$ git status #查看状态 提示doc目录未被追踪 需要add</span><br><span class="line">On branch temp</span><br><span class="line">Untracked files:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class="line"></span><br><span class="line">doc&#x2F;</span><br><span class="line">$ vi .gitignore #在工程根目录创建.gitignore文件 写入doc 保存退出</span><br><span class="line">$ git status #查看状态 doc目录不会再被提示未被追踪 说明Git不再管理doc目录</span><br><span class="line">On branch temp</span><br><span class="line">Untracked files:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class="line"></span><br><span class="line">.gitignore</span><br><span class="line"></span><br><span class="line">$ vi .gitignore #在把doc修改为doc&#x2F;</span><br><span class="line">$ git status #查看状态 doc目录依然不被Git所管理</span><br><span class="line">On branch temp</span><br><span class="line">Untracked files:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class="line"></span><br><span class="line">.gitignore</span><br><span class="line"></span><br><span class="line">$ rm -rf doc #删除doc文件夹</span><br><span class="line">$ echo &#39;This is file.&#39; &gt; doc #创建doc文件</span><br><span class="line">$ cat .gitignore</span><br><span class="line">doc&#x2F;</span><br><span class="line">$ git status #doc文件还是会被Git管理的</span><br><span class="line">On branch temp</span><br><span class="line">Untracked files:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class="line"></span><br><span class="line">.gitignore</span><br><span class="line">doc</span><br><span class="line"></span><br><span class="line">$ vi .gitignore #如果也不想让Git管理doc文件，那么把doc改成doc&#x2F;就可以了</span><br><span class="line">$ git status</span><br><span class="line">On branch temp</span><br><span class="line">Untracked files:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class="line"></span><br><span class="line">.gitignore</span><br><span class="line"></span><br><span class="line">$ mv .gitignore doc.gitignore #将.gitignore文件名修改为doc.gitignore</span><br><span class="line">$ git status #查看状态 doc就会重新被Git管理 所以文件名必须要是.gitignore</span><br><span class="line">On branch temp</span><br><span class="line">Untracked files:</span><br><span class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span><br><span class="line"></span><br><span class="line">doc</span><br><span class="line">doc.gitignore</span><br></pre></td></tr></table></figure><p>还有许多编程语言通用的ignore，GitHub官方都给出了文件示例，可在<a href="https://github.com/github/gitignore" target="_blank" rel="noopener">GitHub</a>上查看。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;指定不需要Git管理的文件&quot;&gt;&lt;a href=&quot;#指定不需要Git管理的文件&quot; class=&quot;headerlink&quot; title=&quot;指定不需要Git管理的文件&quot;&gt;&lt;/a&gt;指定不需要Git管理的文件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;.gitignore文件&lt;/li&gt;
&lt;/
      
    
    </summary>
    
    
    
      <category term="Git" scheme="http://blog.jammelee.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>开发中临时加塞了紧急任务应当如何处理</title>
    <link href="http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/10.%E5%BC%80%E5%8F%91%E4%B8%AD%E4%B8%B4%E6%97%B6%E5%8A%A0%E5%A1%9E%E4%BA%86%E7%B4%A7%E6%80%A5%E4%BB%BB%E5%8A%A1%E5%BA%94%E5%BD%93%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86/"/>
    <id>http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/10.%E5%BC%80%E5%8F%91%E4%B8%AD%E4%B8%B4%E6%97%B6%E5%8A%A0%E5%A1%9E%E4%BA%86%E7%B4%A7%E6%80%A5%E4%BB%BB%E5%8A%A1%E5%BA%94%E5%BD%93%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86/</id>
    <published>2019-10-21T15:18:14.000Z</published>
    <updated>2020-05-17T17:24:08.790Z</updated>
    
    <content type="html"><![CDATA[<h3 id="开发中临时加塞了紧急任务应当如何处理"><a href="#开发中临时加塞了紧急任务应当如何处理" class="headerlink" title="开发中临时加塞了紧急任务应当如何处理"></a>开发中临时加塞了紧急任务应当如何处理</h3><ul><li>git stash</li></ul><h4 id="将工作区修改的文件放入不影响下步工作的环境中"><a href="#将工作区修改的文件放入不影响下步工作的环境中" class="headerlink" title="将工作区修改的文件放入不影响下步工作的环境中"></a>将工作区修改的文件放入不影响下步工作的环境中</h4><a id="more"></a><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git status <span class="comment">#假设工作区中修改了commit3文件</span></span><br><span class="line">On branch temp</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">modified:   commit3</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line">$ git stash <span class="comment">#存入到不影响下步工作的环境当中</span></span><br><span class="line">Saved working directory and index state WIP on temp: 645c351 Modified commit2</span><br><span class="line">$ git stash list <span class="comment">#查看stash列表，会有一个stash堆栈信息</span></span><br><span class="line">stash@&#123;0&#125;: WIP on temp: 645c351 Modified commit2</span><br><span class="line">$ git status <span class="comment">#查看当前状态 当前工作区是一个干净的工作区 就可以继续下步工作</span></span><br><span class="line">On branch temp</span><br><span class="line">nothing to commit, working tree clean</span><br></pre></td></tr></table></figure><h4 id="紧急任务结束，重新恢复到接到紧急任务之前的状态"><a href="#紧急任务结束，重新恢复到接到紧急任务之前的状态" class="headerlink" title="紧急任务结束，重新恢复到接到紧急任务之前的状态"></a>紧急任务结束，重新恢复到接到紧急任务之前的状态</h4><ul><li>不弹出stash <ul><li>git stash apply</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git stash apply <span class="comment">#重新回到之前的状态，并且这个命令不谈出stash栈中的记录</span></span><br><span class="line">On branch temp</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">modified:   commit3</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line"></span><br><span class="line">$ git stash list <span class="comment">#查看stash列表 之前的stash还存在 并且可以反复使用</span></span><br><span class="line">stash@&#123;0&#125;: WIP on temp: 645c351 Modified commit2</span><br></pre></td></tr></table></figure><ul><li>弹出stash<ul><li>git stash pop</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git stash pop <span class="comment">#弹出stash 发现最后一行显示丢掉stash@&#123;0&#125;的记录</span></span><br><span class="line">On branch temp</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">modified:   commit3</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line">Dropped refs/stash@&#123;0&#125; (12397d0ad85cd29f39b1551753533aada85d3d42)</span><br><span class="line">$ git stash list <span class="comment">#再次查看stash列表 已经没有stash记录了</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;开发中临时加塞了紧急任务应当如何处理&quot;&gt;&lt;a href=&quot;#开发中临时加塞了紧急任务应当如何处理&quot; class=&quot;headerlink&quot; title=&quot;开发中临时加塞了紧急任务应当如何处理&quot;&gt;&lt;/a&gt;开发中临时加塞了紧急任务应当如何处理&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;git stash&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;将工作区修改的文件放入不影响下步工作的环境中&quot;&gt;&lt;a href=&quot;#将工作区修改的文件放入不影响下步工作的环境中&quot; class=&quot;headerlink&quot; title=&quot;将工作区修改的文件放入不影响下步工作的环境中&quot;&gt;&lt;/a&gt;将工作区修改的文件放入不影响下步工作的环境中&lt;/h4&gt;
    
    </summary>
    
    
    
      <category term="Git" scheme="http://blog.jammelee.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>正确删除文件的方法</title>
    <link href="http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/9.%E6%AD%A3%E7%A1%AE%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/9.%E6%AD%A3%E7%A1%AE%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E7%9A%84%E6%96%B9%E6%B3%95/</id>
    <published>2019-10-21T15:17:49.000Z</published>
    <updated>2019-10-21T15:17:48.534Z</updated>
    
    <content type="html"><![CDATA[<h3 id="正确删除文件的方法"><a href="#正确删除文件的方法" class="headerlink" title="正确删除文件的方法"></a>正确删除文件的方法</h3><ul><li>git rm [filename]</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ rm readme.md <span class="comment">#删除工作区的readme.md文件</span></span><br><span class="line">$ git status</span><br><span class="line">On branch temp</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add/rm &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">deleted:    readme.md</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line">$ git rm readme.md <span class="comment">#删除暂存区的readme.md 或者使用add命令更新暂存区</span></span><br><span class="line">$ git status</span><br><span class="line">On branch temp</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">deleted:    readme.md</span><br><span class="line"></span><br><span class="line">$ git reset --hard HEAD <span class="comment">#恢复工作区和暂存区到HEAD指针</span></span><br><span class="line">HEAD is now at 645c351 Modified commit2</span><br><span class="line">$ git status</span><br><span class="line">On branch temp</span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">$ git rm readme.md <span class="comment">#使用rm命令删除readme.md</span></span><br><span class="line">rm <span class="string">'readme.md'</span></span><br><span class="line">$ git status <span class="comment">#查看状态 发现和先使用rm删除工作区文件 然后再更新暂存区的效果是一样的</span></span><br><span class="line">On branch temp</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">deleted:    readme.md</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;正确删除文件的方法&quot;&gt;&lt;a href=&quot;#正确删除文件的方法&quot; class=&quot;headerlink&quot; title=&quot;正确删除文件的方法&quot;&gt;&lt;/a&gt;正确删除文件的方法&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;git rm [filename]&lt;/li&gt;
&lt;/ul&gt;
&lt;figure
      
    
    </summary>
    
    
    
      <category term="Git" scheme="http://blog.jammelee.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>查看指定文件不同提交的差异</title>
    <link href="http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/8.%E6%9F%A5%E7%9C%8B%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6%E4%B8%8D%E5%90%8C%E6%8F%90%E4%BA%A4%E7%9A%84%E5%B7%AE%E5%BC%82/"/>
    <id>http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/8.%E6%9F%A5%E7%9C%8B%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6%E4%B8%8D%E5%90%8C%E6%8F%90%E4%BA%A4%E7%9A%84%E5%B7%AE%E5%BC%82/</id>
    <published>2019-10-21T15:17:22.000Z</published>
    <updated>2019-10-21T15:17:25.716Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查看指定文件不同提交的差异"><a href="#查看指定文件不同提交的差异" class="headerlink" title="查看指定文件不同提交的差异"></a>查看指定文件不同提交的差异</h3><ul><li>git diff <a href="branch name">address</a> <a href="branch name">address</a> — [filename]</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git diff temp master <span class="comment">#可以查看分支所有文件的差异</span></span><br><span class="line">diff --git a/commit1 b/commit1</span><br><span class="line">index e885be7..33f9a70 100644</span><br><span class="line">--- a/commit1</span><br><span class="line">+++ b/commit1</span><br><span class="line">@@ -1 +1 @@</span><br><span class="line">-Hello,I<span class="string">'m commit1.     -- Modified by temp.</span></span><br><span class="line"><span class="string">+Hello,I'</span>m commit1.</span><br><span class="line">diff --git a/commit2 b/commit2</span><br><span class="line">index 827e7ef..e69de29 100644</span><br><span class="line">--- a/commit2</span><br><span class="line">+++ b/commit2</span><br><span class="line">@@ -1 +0,0 @@</span><br><span class="line">-Hello, commit2!</span><br><span class="line">diff --git a/temp.log b/temp.log</span><br><span class="line">deleted file mode 100644</span><br><span class="line">index e69de29..0000000</span><br><span class="line">$ git diff temp master -- commit1 <span class="comment">#可以过滤指定的文件</span></span><br><span class="line">diff --git a/commit1 b/commit1</span><br><span class="line">index e885be7..33f9a70 100644</span><br><span class="line">--- a/commit1</span><br><span class="line">+++ b/commit1</span><br><span class="line">@@ -1 +1 @@</span><br><span class="line">-Hello,I<span class="string">'m commit1.     -- Modified by temp.</span></span><br><span class="line"><span class="string">+Hello,I'</span>m commit1.</span><br><span class="line">$ git branch -av</span><br><span class="line">  master 9522b28 modify content</span><br><span class="line">* temp   645c351 Modified commit2</span><br><span class="line">$ git diff 645c351 9522b28 -- commit1 <span class="comment">#通过查看分支 拿到分支的地址 也可以查询指定文件的差异 效果一样</span></span><br><span class="line">diff --git a/commit1 b/commit1</span><br><span class="line">index e885be7..33f9a70 100644</span><br><span class="line">--- a/commit1</span><br><span class="line">+++ b/commit1</span><br><span class="line">@@ -1 +1 @@</span><br><span class="line">-Hello,I<span class="string">'m commit1.     -- Modified by temp.</span></span><br><span class="line"><span class="string">+Hello,I'</span>m commit1.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;查看指定文件不同提交的差异&quot;&gt;&lt;a href=&quot;#查看指定文件不同提交的差异&quot; class=&quot;headerlink&quot; title=&quot;查看指定文件不同提交的差异&quot;&gt;&lt;/a&gt;查看指定文件不同提交的差异&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;git diff &lt;a href=&quot;br
      
    
    </summary>
    
    
    
      <category term="Git" scheme="http://blog.jammelee.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>如何消除最近几次的提交</title>
    <link href="http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/7.%E5%A6%82%E4%BD%95%E6%B6%88%E9%99%A4%E6%9C%80%E8%BF%91%E5%87%A0%E6%AC%A1%E7%9A%84%E6%8F%90%E4%BA%A4/"/>
    <id>http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/7.%E5%A6%82%E4%BD%95%E6%B6%88%E9%99%A4%E6%9C%80%E8%BF%91%E5%87%A0%E6%AC%A1%E7%9A%84%E6%8F%90%E4%BA%A4/</id>
    <published>2019-10-21T15:16:42.000Z</published>
    <updated>2020-05-18T17:37:03.827Z</updated>
    
    <content type="html"><![CDATA[<h3 id="如何消除最近几次的提交"><a href="#如何消除最近几次的提交" class="headerlink" title="如何消除最近几次的提交"></a>如何消除最近几次的提交</h3><ul><li>git reset —hard [commit address]</li></ul><p><b style="color:red"> 此命令执行后，缓存区和工作区都会清空，所以一定要确定不需要这些提交信息。慎用此命令。</b><br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gitk --all <span class="comment">#查看gitk信息 如下图 </span></span><br><span class="line">$ git branch -av <span class="comment">#查看当前分支是不是再temp</span></span><br><span class="line">  master 9522b28 modify content</span><br><span class="line">* temp   59925d6 Modifed temp.log again.</span><br><span class="line">$ git <span class="built_in">log</span> --graph <span class="comment">#查看log 将"Create temp.log（1dda1ee0709c）"之前的提交都清除掉</span></span><br><span class="line">* commit 59925d6552044420a7ce96a2a7f403691bb4e8e2 (HEAD -&gt; temp)</span><br><span class="line">| Author: jiaming &lt;jamme_lee@outlook.com&gt;</span><br><span class="line">| Date:   Tue Jun 4 21:49:31 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Modifed temp.log again.</span><br><span class="line">| </span><br><span class="line">* commit 469fb6377dfa729ed09640bc6287e5e891615315</span><br><span class="line">| Author: jiaming &lt;jamme_lee@outlook.com&gt;</span><br><span class="line">| Date:   Tue Jun 4 21:47:01 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Modified temp.log</span><br><span class="line">| </span><br><span class="line">* commit 1dda1ee0709c38ee087a490bf747192d6d9106c8</span><br><span class="line">| Author: jiaming &lt;jamme_lee@outlook.com&gt;</span><br><span class="line">| Date:   Tue Jun 4 21:46:11 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Create temp.log</span><br><span class="line">| </span><br><span class="line">* commit 9522b28fd3b33c7476620bc6f0a8a99c56bd3049 (master)</span><br><span class="line">| Author: jiaming &lt;jamme_lee@outlook.com&gt;</span><br><span class="line">| Date:   Tue May 28 21:15:31 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     modify content</span><br><span class="line">| </span><br><span class="line">* commit 4628013a080a138d9542a9163b0590e64fd049a8</span><br><span class="line">| Author: jiaming &lt;jamme_lee@outlook.com&gt;</span><br><span class="line">| Date:   Tue May 28 21:04:42 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     fixed confilct</span><br><span class="line">| </span><br><span class="line">* commit 437387c09feefda0188db6789e4873f7c35a2621</span><br><span class="line">| Author: jiaming &lt;jamme_lee@outlook.com&gt;</span><br><span class="line">| Date:   Sun May 26 13:37:51 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Create and Add three files.</span><br><span class="line">|     Add commit1</span><br><span class="line">|     Add commit2</span><br><span class="line">|     Add commit3</span><br><span class="line">| </span><br><span class="line">* commit 09460ecc7187a8e126891a041457e51e6693636c</span><br><span class="line">| Author: jiaming &lt;jamme_lee@outlook.com&gt;</span><br><span class="line">| Date:   Sun May 19 17:03:02 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Add add file</span><br><span class="line">$ git reset --hard 1dda1ee0709c <span class="comment">#执行reset命令</span></span><br><span class="line">HEAD is now at 1dda1ee Create temp.log</span><br><span class="line">$ gitk --all <span class="comment">#再次查看gitk 1dda1ee0709c之前的提交全部清除 如下图</span></span><br></pre></td></tr></table></figure></p><h5 id="图示"><a href="#图示" class="headerlink" title="图示"></a>图示</h5><ul><li>清除<code>Create temp.log</code>之前的所有提交</li></ul><p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/7.%E5%A6%82%E4%BD%95%E6%B6%88%E9%99%A4%E6%9C%80%E8%BF%91%E5%87%A0%E6%AC%A1%E7%9A%84%E6%8F%90%E4%BA%A4/20190604215124.png" alt="img"></p><ul><li>已经清除提交，并且HEAD指针已经指向期望位置</li></ul><p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/7.%E5%A6%82%E4%BD%95%E6%B6%88%E9%99%A4%E6%9C%80%E8%BF%91%E5%87%A0%E6%AC%A1%E7%9A%84%E6%8F%90%E4%BA%A4/20190604215515.png" alt="img"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;如何消除最近几次的提交&quot;&gt;&lt;a href=&quot;#如何消除最近几次的提交&quot; class=&quot;headerlink&quot; title=&quot;如何消除最近几次的提交&quot;&gt;&lt;/a&gt;如何消除最近几次的提交&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;git reset —hard [commit addr
      
    
    </summary>
    
    
    
      <category term="Git" scheme="http://blog.jammelee.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>如何让暂存区的文件恢复到和HEAD一样以及如何让工作区的文件恢复到和暂存区一样</title>
    <link href="http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/6.%E5%A6%82%E4%BD%95%E8%AE%A9%E6%9A%82%E5%AD%98%E5%8C%BA%E7%9A%84%E6%96%87%E4%BB%B6%E6%81%A2%E5%A4%8D%E6%88%90%E5%92%8CHEAD%E4%B8%80%E6%A0%B7%E4%BB%A5%E5%8F%8A%E5%A6%82%E4%BD%95%E8%AE%A9%E5%B7%A5%E4%BD%9C%E5%8C%BA%E7%9A%84%E6%96%87%E4%BB%B6%E6%81%A2%E5%A4%8D%E5%88%B0%E5%92%8C%E6%9A%82%E5%AD%98%E5%8C%BA%E4%B8%80%E6%A0%B7/"/>
    <id>http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/6.%E5%A6%82%E4%BD%95%E8%AE%A9%E6%9A%82%E5%AD%98%E5%8C%BA%E7%9A%84%E6%96%87%E4%BB%B6%E6%81%A2%E5%A4%8D%E6%88%90%E5%92%8CHEAD%E4%B8%80%E6%A0%B7%E4%BB%A5%E5%8F%8A%E5%A6%82%E4%BD%95%E8%AE%A9%E5%B7%A5%E4%BD%9C%E5%8C%BA%E7%9A%84%E6%96%87%E4%BB%B6%E6%81%A2%E5%A4%8D%E5%88%B0%E5%92%8C%E6%9A%82%E5%AD%98%E5%8C%BA%E4%B8%80%E6%A0%B7/</id>
    <published>2019-10-21T15:16:21.000Z</published>
    <updated>2019-10-21T15:16:20.717Z</updated>
    
    <content type="html"><![CDATA[<h3 id="如何让暂存区的文件恢复到和HEAD一样以及如何让工作区的文件恢复到和暂存区一样"><a href="#如何让暂存区的文件恢复到和HEAD一样以及如何让工作区的文件恢复到和暂存区一样" class="headerlink" title="如何让暂存区的文件恢复到和HEAD一样以及如何让工作区的文件恢复到和暂存区一样"></a>如何让暂存区的文件恢复到和HEAD一样以及如何让工作区的文件恢复到和暂存区一样</h3><h4 id="如何让暂存区的文件恢复到和HEAD一样"><a href="#如何让暂存区的文件恢复到和HEAD一样" class="headerlink" title="如何让暂存区的文件恢复到和HEAD一样"></a>如何让暂存区的文件恢复到和HEAD一样</h4><ul><li>git reset HEAD</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git status <span class="comment">#将文件修改好加入暂存区，查看当前状态</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">modified:   a</span><br><span class="line">modified:   abc</span><br><span class="line">$ git reset HEAD <span class="comment">#根据提示 使用reset HEAD命令将所有暂存区文件都还原到HEAD</span></span><br><span class="line">Unstaged changes after reset:</span><br><span class="line">Ma</span><br><span class="line">Mabc</span><br><span class="line">$ git status <span class="comment">#OK，还原成功</span></span><br><span class="line">On branch master</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">modified:   a</span><br><span class="line">modified:   abc</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line">$ git diff --cached <span class="comment">#还可以通过这种方式查看暂存区有没有文件和HEAD存在差异，没有返回证明无差异</span></span><br></pre></td></tr></table></figure><h4 id="如何取消暂存区部分文件的修改"><a href="#如何取消暂存区部分文件的修改" class="headerlink" title="如何取消暂存区部分文件的修改"></a>如何取消暂存区部分文件的修改</h4><ul><li>git reset HEAD —[filename1,filename2,…]</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git status <span class="comment">#查看当前目录状态 有三个已经加入暂存区的文件</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">modified:   abc</span><br><span class="line">modified:   add</span><br><span class="line">modified:   commit1</span><br><span class="line"></span><br><span class="line">$ git reset HEAD -- abc commit1 <span class="comment">#使用reset命令只还原abc和commit1文件</span></span><br><span class="line">Unstaged changes after reset:</span><br><span class="line">Mabc</span><br><span class="line">Mcommit1</span><br><span class="line">$ git status <span class="comment">#再次查看目录状态 abc和commit1文件已经从暂存区中被取消</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">modified:   add</span><br><span class="line"></span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">modified:   abc</span><br><span class="line">modified:   commit1</span><br></pre></td></tr></table></figure><h4 id="如何让工作区的文件恢复到和暂存区一样"><a href="#如何让工作区的文件恢复到和暂存区一样" class="headerlink" title="如何让工作区的文件恢复到和暂存区一样"></a>如何让工作区的文件恢复到和暂存区一样</h4><ul><li>git checkout — [filename]</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vi a</span><br><span class="line">$ git add a <span class="comment">#假设修改了a文件 并将a加入暂存区</span></span><br><span class="line">$ vi a <span class="comment">#然后觉得a不太好，又修改了内容</span></span><br><span class="line">$ git diff <span class="comment">#修改后查看了工作区和暂存区的差异 发现工作区的修改还不如暂存区</span></span><br><span class="line">diff --git a/a b/a</span><br><span class="line">index 79ca77c..e63ef0c 100644</span><br><span class="line">--- a/a</span><br><span class="line">+++ b/a</span><br><span class="line">@@ -1 +1 @@</span><br><span class="line">-Hello,I<span class="string">'m a!!!</span></span><br><span class="line"><span class="string">+Hello,I'</span>m a!!!.....</span><br><span class="line">$ git status <span class="comment">#查看一下当前状态</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">modified:   a</span><br><span class="line"></span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">modified:   a</span><br><span class="line">$ git checkout -- a <span class="comment">#按照上边的提示 忽略对a文件的修改</span></span><br><span class="line">$ git status <span class="comment">#再次查看状态 工作区的修改已经被抹掉</span></span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">modified:   a</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;如何让暂存区的文件恢复到和HEAD一样以及如何让工作区的文件恢复到和暂存区一样&quot;&gt;&lt;a href=&quot;#如何让暂存区的文件恢复到和HEAD一样以及如何让工作区的文件恢复到和暂存区一样&quot; class=&quot;headerlink&quot; title=&quot;如何让暂存区的文件恢复到和H
      
    
    </summary>
    
    
    
      <category term="Git" scheme="http://blog.jammelee.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>比较工作区、暂存区和HEAD之间所含文件的差异</title>
    <link href="http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/5.%E6%AF%94%E8%BE%83%E5%B7%A5%E4%BD%9C%E5%8C%BA%E3%80%81%E6%9A%82%E5%AD%98%E5%8C%BA%E5%92%8CHEAD%E4%B9%8B%E9%97%B4%E6%89%80%E5%90%AB%E6%96%87%E4%BB%B6%E7%9A%84%E5%B7%AE%E5%BC%82/"/>
    <id>http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/5.%E6%AF%94%E8%BE%83%E5%B7%A5%E4%BD%9C%E5%8C%BA%E3%80%81%E6%9A%82%E5%AD%98%E5%8C%BA%E5%92%8CHEAD%E4%B9%8B%E9%97%B4%E6%89%80%E5%90%AB%E6%96%87%E4%BB%B6%E7%9A%84%E5%B7%AE%E5%BC%82/</id>
    <published>2019-10-21T15:15:58.000Z</published>
    <updated>2019-10-21T15:15:50.620Z</updated>
    
    <content type="html"><![CDATA[<h3 id="比较工作区、暂存区和HEAD之间所含文件的差异"><a href="#比较工作区、暂存区和HEAD之间所含文件的差异" class="headerlink" title="比较工作区、暂存区和HEAD之间所含文件的差异"></a>比较工作区、暂存区和HEAD之间所含文件的差异</h3><h4 id="比较暂存区和HEAD所含文件的差异"><a href="#比较暂存区和HEAD所含文件的差异" class="headerlink" title="比较暂存区和HEAD所含文件的差异"></a>比较暂存区和HEAD所含文件的差异</h4><ul><li>git diff —cached</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vi abc <span class="comment">#修改abc文件内容</span></span><br><span class="line">$ git add abc <span class="comment">#将abc文件添加至暂存区</span></span><br><span class="line">$ git diff --cached <span class="comment">#使用该命令查看暂存区和HEAD所含文件的差别，可以用来检查修改是否是正确的</span></span><br><span class="line">diff --git a/abc b/abc</span><br><span class="line">index 3be8c83..b61830f 100644</span><br><span class="line">--- a/abc</span><br><span class="line">+++ b/abc</span><br><span class="line">@@ -1,5 +1 @@</span><br><span class="line">-&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class="line"> hello,world!</span><br><span class="line">-=======</span><br><span class="line">-hello,world</span><br><span class="line">-&gt;&gt;&gt;&gt;&gt;&gt;&gt; ea0c484... Add hello world <span class="keyword">in</span> file</span><br></pre></td></tr></table></figure><h4 id="比较工作区和暂存区所含文件的差异"><a href="#比较工作区和暂存区所含文件的差异" class="headerlink" title="比较工作区和暂存区所含文件的差异"></a>比较工作区和暂存区所含文件的差异</h4><ul><li>git diff </li><li>git diff — [filename1,filename2,…]</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vi a <span class="comment">#修改a文件</span></span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">modified:   a</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line">$ git diff <span class="comment">#查看差异，可以看到a文件的差异</span></span><br><span class="line">diff --git a/a b/a</span><br><span class="line">index 64fa4ac..6780600 100644</span><br><span class="line">--- a/a</span><br><span class="line">+++ b/a</span><br><span class="line">@@ -1 +1 @@</span><br><span class="line">-sssssssiaaaiiiaaaaaa</span><br><span class="line">+Hello,I<span class="string">'m a.</span></span><br><span class="line"><span class="string">$ vi commit1 #修改commit1文件</span></span><br><span class="line"><span class="string">$ git diff #可以查看到所有修改文件的差异</span></span><br><span class="line"><span class="string">diff --git a/a b/a</span></span><br><span class="line"><span class="string">index 64fa4ac..6780600 100644</span></span><br><span class="line"><span class="string">--- a/a</span></span><br><span class="line"><span class="string">+++ b/a</span></span><br><span class="line"><span class="string">@@ -1 +1 @@</span></span><br><span class="line"><span class="string">-sssssssiaaaiiiaaaaaa</span></span><br><span class="line"><span class="string">+Hello,I'</span>m a.</span><br><span class="line">diff --git a/commit1 b/commit1</span><br><span class="line">index e69de29..33f9a70 100644</span><br><span class="line">--- a/commit1</span><br><span class="line">+++ b/commit1</span><br><span class="line">@@ -0,0 +1 @@</span><br><span class="line">+Hello,I<span class="string">'m commit1.</span></span><br><span class="line"><span class="string">$ git diff -- a #这里可以使用“--“过滤想要看到的文件名 只看a文件的差异</span></span><br><span class="line"><span class="string">diff --git a/a b/a</span></span><br><span class="line"><span class="string">index 64fa4ac..6780600 100644</span></span><br><span class="line"><span class="string">--- a/a</span></span><br><span class="line"><span class="string">+++ b/a</span></span><br><span class="line"><span class="string">@@ -1 +1 @@</span></span><br><span class="line"><span class="string">-sssssssiaaaiiiaaaaaa</span></span><br><span class="line"><span class="string">+Hello,I'</span>m a.</span><br><span class="line">$ git diff -- a commit1 <span class="comment">#还可以过滤多个文件名 只看a和commit1文件的差异</span></span><br><span class="line">diff --git a/a b/a</span><br><span class="line">index 64fa4ac..6780600 100644</span><br><span class="line">--- a/a</span><br><span class="line">+++ b/a</span><br><span class="line">@@ -1 +1 @@</span><br><span class="line">-sssssssiaaaiiiaaaaaa</span><br><span class="line">+Hello,I<span class="string">'m a.</span></span><br><span class="line"><span class="string">diff --git a/commit1 b/commit1</span></span><br><span class="line"><span class="string">index e69de29..33f9a70 100644</span></span><br><span class="line"><span class="string">--- a/commit1</span></span><br><span class="line"><span class="string">+++ b/commit1</span></span><br><span class="line"><span class="string">@@ -0,0 +1 @@</span></span><br><span class="line"><span class="string">+Hello,I'</span>m commit1.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;比较工作区、暂存区和HEAD之间所含文件的差异&quot;&gt;&lt;a href=&quot;#比较工作区、暂存区和HEAD之间所含文件的差异&quot; class=&quot;headerlink&quot; title=&quot;比较工作区、暂存区和HEAD之间所含文件的差异&quot;&gt;&lt;/a&gt;比较工作区、暂存区和HEAD之间所
      
    
    </summary>
    
    
    
      <category term="Git" scheme="http://blog.jammelee.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>把间隔的几个commit整理成1个</title>
    <link href="http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/4.%E6%8A%8A%E9%97%B4%E9%9A%94%E7%9A%84%E5%87%A0%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/"/>
    <id>http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/4.%E6%8A%8A%E9%97%B4%E9%9A%94%E7%9A%84%E5%87%A0%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/</id>
    <published>2019-10-21T15:15:10.000Z</published>
    <updated>2020-05-18T17:36:25.092Z</updated>
    
    <content type="html"><![CDATA[<h3 id="把间隔的几个commit整理成1个"><a href="#把间隔的几个commit整理成1个" class="headerlink" title="把间隔的几个commit整理成1个"></a>把间隔的几个commit整理成1个</h3><ul><li>git rebase -i [address]</li></ul><p>再次用到这个命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> --graph <span class="comment">#查看日志 把两个关于readme的commit合并</span></span><br><span class="line">* commit 9f2603b5aac31b0607312a51224a9691ed0670b4 (HEAD -&gt; master)</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 26 13:37:51 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Create and Add three files.</span><br><span class="line">|     Add commit1</span><br><span class="line">|     Add commit2</span><br><span class="line">|     Add commit3</span><br><span class="line">|   </span><br><span class="line">*   commit f7b88f55dc358c375cbbc26db54e7e87b551c518</span><br><span class="line">|\  Merge: 9e63410 d2c1d2b</span><br><span class="line">| | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | Date:   Sun May 26 13:34:46 2019 +0800</span><br><span class="line">| | </span><br><span class="line">| |     Merge all branch</span><br><span class="line">| | </span><br><span class="line">| * commit d2c1d2b68622e6ee11c2070eb36406ccb0e63655</span><br><span class="line">| | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | Date:   Sun May 19 17:03:02 2019 +0800</span><br><span class="line">| | </span><br><span class="line">| |     Add add file</span><br><span class="line">| | </span><br><span class="line">| * commit ea0c4843f5ee874f4d96646d7f3a8a3adb1432f0</span><br><span class="line">| | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | Date:   Sun May 19 16:33:15 2019 +0800</span><br><span class="line">| | </span><br><span class="line">| |     Add hello world <span class="keyword">in</span> file</span><br><span class="line">| |   </span><br><span class="line">* |   commit 9e63410fee4af12a8e9855d2cb6ac81a977b821e</span><br><span class="line">|\ \  Merge: 1da4f5a 2241da2</span><br><span class="line">| | | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | | Date:   Sun May 26 13:33:20 2019 +0800</span><br><span class="line">| | | </span><br><span class="line">| | |     Merge branch <span class="string">'fix_add1'</span></span><br><span class="line">| | | </span><br><span class="line">| * | commit 2241da25049ad63dea9f20b094b858f0b533ed61</span><br><span class="line">| | | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | | Date:   Sun May 19 17:01:01 2019 +0800</span><br><span class="line">| | | </span><br><span class="line">| | |     Add <span class="string">"!"</span></span><br><span class="line">| | | </span><br><span class="line">| * | commit 4e43c01c8f3c76aedd986d598a00b90809a3a588</span><br><span class="line">| |/  Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| |   Date:   Sun May 19 16:33:15 2019 +0800</span><br><span class="line">| |   </span><br><span class="line">| |       Add hello world</span><br><span class="line">| |   </span><br><span class="line">* |   commit 1da4f5a22942c99a466508cdea306619dd5c48b0</span><br><span class="line">|\ \  Merge: 4b6999e 543c5d8</span><br><span class="line">| | | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | | Date:   Sat May 25 18:27:23 2019 +0800</span><br><span class="line">| | | </span><br><span class="line">| | |     Merge branch temp</span><br><span class="line">| | | </span><br><span class="line">| * | commit 543c5d84e8b5f2996e1a40745262f39df95eebaf</span><br><span class="line">| | | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | | Date:   Mon Apr 29 22:12:57 2019 +0800</span><br><span class="line">| | | </span><br><span class="line">| | |     add <span class="built_in">test</span></span><br><span class="line">| | | </span><br><span class="line">* | | commit 4b6999eecb60df46af36c5409e3737e44b877dd7</span><br><span class="line">| |/  Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">|/|   Date:   Sun May 19 13:50:07 2019 +0800</span><br><span class="line">| |   </span><br><span class="line">| |       create folder and file</span><br><span class="line">| | </span><br><span class="line">* | commit 6d4192be4c570363865468870d14f59efaa5521e</span><br><span class="line">| | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | Date:   Sun May 19 13:46:22 2019 +0800</span><br><span class="line">| | </span><br><span class="line">| |     create abc</span><br><span class="line">| | </span><br><span class="line">* | commit 4d2bdddf4098e40ce57fdaf04bb862f7bea04918 <span class="comment">#这条</span></span><br><span class="line">|/  Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">|   Date:   Mon Apr 29 21:36:15 2019 +0800</span><br><span class="line">|   </span><br><span class="line">|       rename</span><br><span class="line">| </span><br><span class="line">* commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51 (tag: <span class="built_in">test</span>)</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     学习工作区和暂存区</span><br><span class="line">| </span><br><span class="line">* commit 33f7ae4c4d4da85453ed0077670e242b71d0a621 <span class="comment">#还有这条</span></span><br><span class="line">  Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">  Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line">  </span><br><span class="line">      Add readme</span><br><span class="line">$ git rebase -i 33f7ae4c4 <span class="comment">#因为“Add readme“这条commit已经是最父亲节点 所以就选这条commit地址 弹出交互界面 如下图</span></span><br><span class="line">The previous cherry-pick is now empty, possibly due to conflict resolution.</span><br><span class="line">If you wish to commit it anyway, use:</span><br><span class="line"></span><br><span class="line">    git commit --allow-empty</span><br><span class="line"></span><br><span class="line">Otherwise, please use <span class="string">'git reset'</span></span><br><span class="line">interactive rebase <span class="keyword">in</span> progress; onto 33f7ae4</span><br><span class="line">Last <span class="built_in">command</span> <span class="keyword">done</span> (1 <span class="built_in">command</span> <span class="keyword">done</span>):</span><br><span class="line">   pick 33f7ae4 </span><br><span class="line">Next commands to <span class="keyword">do</span> (10 remaining commands):</span><br><span class="line">   squash 4d2bddd rename</span><br><span class="line">   pick d34df54 学习工作区和暂存区</span><br><span class="line">You are currently rebasing branch <span class="string">'master'</span> on <span class="string">'33f7ae4'</span>.</span><br><span class="line"></span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">Could not apply 33f7ae4... </span><br><span class="line">$ git status <span class="comment">#查看当前状态</span></span><br><span class="line">interactive rebase <span class="keyword">in</span> progress; onto 33f7ae4</span><br><span class="line">Last <span class="built_in">command</span> <span class="keyword">done</span> (1 <span class="built_in">command</span> <span class="keyword">done</span>):</span><br><span class="line">   pick 33f7ae4 </span><br><span class="line">Next commands to <span class="keyword">do</span> (10 remaining commands):</span><br><span class="line">   squash 4d2bddd rename</span><br><span class="line">   pick d34df54 学习工作区和暂存区</span><br><span class="line">  (use <span class="string">"git rebase --edit-todo"</span> to view and edit)</span><br><span class="line">You are currently rebasing branch <span class="string">'master'</span> on <span class="string">'33f7ae4'</span>.</span><br><span class="line">  (all conflicts fixed: run <span class="string">"git rebase --continue"</span>)</span><br><span class="line"></span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">$ git rebase --<span class="built_in">continue</span> <span class="comment">#根据提示使用"git rebase --continue"命令 弹出交互界面 如下图</span></span><br><span class="line">[detached HEAD 83f44c9] Add readme.md</span><br><span class="line"> Date: Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> create mode 100644 readme.md</span><br><span class="line">CONFLICT (modify/delete): readme deleted <span class="keyword">in</span> HEAD and modified <span class="keyword">in</span> 543c5d8... add <span class="built_in">test</span>. Version 543c5d8... add <span class="built_in">test</span> of readme left <span class="keyword">in</span> tree.</span><br><span class="line">error: could not apply 543c5d8... add <span class="built_in">test</span></span><br><span class="line">Resolve all conflicts manually, mark them as resolved with</span><br><span class="line"><span class="string">"git add/rm &lt;conflicted_files&gt;"</span>, <span class="keyword">then</span> run <span class="string">"git rebase --continue"</span>.</span><br><span class="line">You can instead skip this commit: run <span class="string">"git rebase --skip"</span>.</span><br><span class="line">To abort and get back to the state before <span class="string">"git rebase"</span>, run <span class="string">"git rebase --abort"</span>.</span><br><span class="line">Could not apply 543c5d8... add <span class="built_in">test</span></span><br><span class="line">$ git status <span class="comment">#查看状态 因为之前修改文件名后，合并分支的时候我将冲突文件readme添加进git库 所以这里出了冲突 这里我按照提示删掉readme文件（根据自己情况处理） </span></span><br><span class="line">interactive rebase <span class="keyword">in</span> progress; onto 33f7ae4</span><br><span class="line">Last commands <span class="keyword">done</span> (6 commands <span class="keyword">done</span>):</span><br><span class="line">   pick 4b6999e create folder and file</span><br><span class="line">   pick 543c5d8 add <span class="built_in">test</span></span><br><span class="line">  (see more <span class="keyword">in</span> file .git/rebase-merge/<span class="keyword">done</span>)</span><br><span class="line">Next commands to <span class="keyword">do</span> (5 remaining commands):</span><br><span class="line">   pick 4e43c01 Add hello world</span><br><span class="line">   pick 2241da2 Add <span class="string">"!"</span></span><br><span class="line">  (use <span class="string">"git rebase --edit-todo"</span> to view and edit)</span><br><span class="line">You are currently rebasing branch <span class="string">'master'</span> on <span class="string">'33f7ae4'</span>.</span><br><span class="line">  (fix conflicts and <span class="keyword">then</span> run <span class="string">"git rebase --continue"</span>)</span><br><span class="line">  (use <span class="string">"git rebase --skip"</span> to skip this patch)</span><br><span class="line">  (use <span class="string">"git rebase --abort"</span> to check out the original branch)</span><br><span class="line"></span><br><span class="line">Unmerged paths:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line">  (use <span class="string">"git add/rm &lt;file&gt;..."</span> as appropriate to mark resolution)</span><br><span class="line"></span><br><span class="line">deleted by us:   readme</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line">$ git rm readme <span class="comment">#删除readme</span></span><br><span class="line">readme: needs merge</span><br><span class="line">rm <span class="string">'readme'</span></span><br><span class="line">$ git status <span class="comment">#查看状态</span></span><br><span class="line">interactive rebase <span class="keyword">in</span> progress; onto 33f7ae4</span><br><span class="line">Last commands <span class="keyword">done</span> (6 commands <span class="keyword">done</span>):</span><br><span class="line">   pick 4b6999e create folder and file</span><br><span class="line">   pick 543c5d8 add <span class="built_in">test</span></span><br><span class="line">  (see more <span class="keyword">in</span> file .git/rebase-merge/<span class="keyword">done</span>)</span><br><span class="line">Next commands to <span class="keyword">do</span> (5 remaining commands):</span><br><span class="line">   pick 4e43c01 Add hello world</span><br><span class="line">   pick 2241da2 Add <span class="string">"!"</span></span><br><span class="line">  (use <span class="string">"git rebase --edit-todo"</span> to view and edit)</span><br><span class="line">You are currently rebasing branch <span class="string">'master'</span> on <span class="string">'33f7ae4'</span>.</span><br><span class="line">  (all conflicts fixed: run <span class="string">"git rebase --continue"</span>)</span><br><span class="line"></span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">$ git rebase --<span class="built_in">continue</span> <span class="comment">#根据提示执行命令</span></span><br><span class="line">Auto-merging abc</span><br><span class="line">CONFLICT (content): Merge conflict <span class="keyword">in</span> abc</span><br><span class="line">error: could not apply ea0c484... Add hello world <span class="keyword">in</span> file</span><br><span class="line">Resolve all conflicts manually, mark them as resolved with</span><br><span class="line"><span class="string">"git add/rm &lt;conflicted_files&gt;"</span>, <span class="keyword">then</span> run <span class="string">"git rebase --continue"</span>.</span><br><span class="line">You can instead skip this commit: run <span class="string">"git rebase --skip"</span>.</span><br><span class="line">To abort and get back to the state before <span class="string">"git rebase"</span>, run <span class="string">"git rebase --abort"</span>.</span><br><span class="line">Could not apply ea0c484... Add hello world <span class="keyword">in</span> file</span><br><span class="line">$ git rebase --<span class="built_in">continue</span> <span class="comment">#我又执行了一次</span></span><br><span class="line">abc: needs merge</span><br><span class="line">You must edit all merge conflicts and <span class="keyword">then</span></span><br><span class="line">mark them as resolved using git add</span><br><span class="line">$ git status <span class="comment">#发现是还有冲突没有解决</span></span><br><span class="line">interactive rebase <span class="keyword">in</span> progress; onto 33f7ae4</span><br><span class="line">Last commands <span class="keyword">done</span> (9 commands <span class="keyword">done</span>):</span><br><span class="line">   pick 2241da2 Add <span class="string">"!"</span></span><br><span class="line">   pick ea0c484 Add hello world <span class="keyword">in</span> file</span><br><span class="line">  (see more <span class="keyword">in</span> file .git/rebase-merge/<span class="keyword">done</span>)</span><br><span class="line">Next commands to <span class="keyword">do</span> (2 remaining commands):</span><br><span class="line">   pick d2c1d2b Add add file</span><br><span class="line">   pick 9f2603b Create and Add three files. Add commit1 Add commit2 Add commit3</span><br><span class="line">  (use <span class="string">"git rebase --edit-todo"</span> to view and edit)</span><br><span class="line">You are currently rebasing branch <span class="string">'master'</span> on <span class="string">'33f7ae4'</span>.</span><br><span class="line">  (fix conflicts and <span class="keyword">then</span> run <span class="string">"git rebase --continue"</span>)</span><br><span class="line">  (use <span class="string">"git rebase --skip"</span> to skip this patch)</span><br><span class="line">  (use <span class="string">"git rebase --abort"</span> to check out the original branch)</span><br><span class="line"></span><br><span class="line">Unmerged paths:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to mark resolution)</span><br><span class="line"></span><br><span class="line">both modified:   abc</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line">$ git add abc <span class="comment">#添加暂存区</span></span><br><span class="line">$ git commit -m<span class="string">'Modified abc file'</span> <span class="comment">#提交</span></span><br><span class="line">[detached HEAD 9e902c5] Modified abc file</span><br><span class="line"> 1 file changed, 4 insertions(+)</span><br><span class="line">$ git status <span class="comment">#查看状态</span></span><br><span class="line">interactive rebase <span class="keyword">in</span> progress; onto 33f7ae4</span><br><span class="line">Last commands <span class="keyword">done</span> (9 commands <span class="keyword">done</span>):</span><br><span class="line">   pick 2241da2 Add <span class="string">"!"</span></span><br><span class="line">   pick ea0c484 Add hello world <span class="keyword">in</span> file</span><br><span class="line">  (see more <span class="keyword">in</span> file .git/rebase-merge/<span class="keyword">done</span>)</span><br><span class="line">Next commands to <span class="keyword">do</span> (2 remaining commands):</span><br><span class="line">   pick d2c1d2b Add add file</span><br><span class="line">   pick 9f2603b Create and Add three files. Add commit1 Add commit2 Add commit3</span><br><span class="line">  (use <span class="string">"git rebase --edit-todo"</span> to view and edit)</span><br><span class="line">You are currently editing a commit <span class="keyword">while</span> rebasing branch <span class="string">'master'</span> on <span class="string">'33f7ae4'</span>.</span><br><span class="line">  (use <span class="string">"git commit --amend"</span> to amend the current commit)</span><br><span class="line">  (use <span class="string">"git rebase --continue"</span> once you are satisfied with your changes)</span><br><span class="line"></span><br><span class="line">nothing to commit, working tree clean</span><br><span class="line">$ git rebase --<span class="built_in">continue</span> <span class="comment">#再次执行continue rebase成功</span></span><br><span class="line">Successfully rebased and updated refs/heads/master.</span><br><span class="line">$ git <span class="built_in">log</span> --graph <span class="comment">#查看log 之前“readme”这条log已经没有了 被合并进了根节点</span></span><br><span class="line">* commit 437387c09feefda0188db6789e4873f7c35a2621 (HEAD -&gt; master)</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 26 13:37:51 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Create and Add three files.</span><br><span class="line">|     Add commit1</span><br><span class="line">|     Add commit2</span><br><span class="line">|     Add commit3</span><br><span class="line">| </span><br><span class="line">* commit 09460ecc7187a8e126891a041457e51e6693636c</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 19 17:03:02 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Add add file</span><br><span class="line">| </span><br><span class="line">* commit 9e902c5dd82e1ce7c4831d8b3ff46d32b409542c</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Mon May 27 21:47:37 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Modified abc file</span><br><span class="line">| </span><br><span class="line">* commit 21f4c7efb6177246d01cae84ccb2368728577aa4</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 19 17:01:01 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Add <span class="string">"!"</span></span><br><span class="line">| </span><br><span class="line">* commit 6d43e3783cc37f9490781622f56c36ae2901ab43</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 19 16:33:15 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Add hello world</span><br><span class="line">| </span><br><span class="line">* commit d463612e828044748283c6cc3a2c3a5bfb9a3386</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 19 13:50:07 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     create folder and file</span><br><span class="line">| </span><br><span class="line">* commit d88fcba14a272fd0f20f9e65315d6ed9c0db225a</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 19 13:46:22 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     create abc</span><br><span class="line">| </span><br><span class="line">* commit 3a1b19fa89e0e229f40b3bcc0bbf1f079d19b83f</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     学习工作区和暂存区</span><br><span class="line">| </span><br><span class="line">* commit 83f44c95d9456236929918dc7717a2bb9b452d93</span><br><span class="line">  Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">  Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line">  </span><br><span class="line">      Add readme.md</span><br><span class="line">      </span><br><span class="line">      Add readme</span><br><span class="line">      </span><br><span class="line">      rename</span><br></pre></td></tr></table></figure><h4 id="图示"><a href="#图示" class="headerlink" title="图示"></a>图示</h4><ul><li>交互界面</li></ul><p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/4.%E6%8A%8A%E9%97%B4%E9%9A%94%E7%9A%84%E5%87%A0%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/20190527213906.png" alt="img"></p><ul><li>将根节点的commit地址拷贝，加入第一行pick [address]，然后将原来rename那条commit复制到第一行的下边，并使用squash命令，保存退出。</li></ul><p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/4.%E6%8A%8A%E9%97%B4%E9%9A%94%E7%9A%84%E5%87%A0%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/20190527214015.png" alt="img"></p><ul><li>git rebase —continue</li></ul><p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/4.%E6%8A%8A%E9%97%B4%E9%9A%94%E7%9A%84%E5%87%A0%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/20190527214324.png" alt="img"></p><ul><li>添加message，保存退出。</li></ul><p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/4.%E6%8A%8A%E9%97%B4%E9%9A%94%E7%9A%84%E5%87%A0%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/20190527214424.png" alt="img"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;把间隔的几个commit整理成1个&quot;&gt;&lt;a href=&quot;#把间隔的几个commit整理成1个&quot; class=&quot;headerlink&quot; title=&quot;把间隔的几个commit整理成1个&quot;&gt;&lt;/a&gt;把间隔的几个commit整理成1个&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;git 
      
    
    </summary>
    
    
    
      <category term="Git" scheme="http://blog.jammelee.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>把连续的多个commit整理成1个</title>
    <link href="http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/3.%E6%8A%8A%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%A4%9A%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/"/>
    <id>http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/3.%E6%8A%8A%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%A4%9A%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/</id>
    <published>2019-10-21T15:14:45.000Z</published>
    <updated>2020-05-18T17:35:26.473Z</updated>
    
    <content type="html"><![CDATA[<h3 id="把连续的多个commit整理成1个"><a href="#把连续的多个commit整理成1个" class="headerlink" title="把连续的多个commit整理成1个"></a>把连续的多个commit整理成1个</h3><h4 id="git-rebase-i-address"><a href="#git-rebase-i-address" class="headerlink" title="git rebase -i [address]"></a>git rebase -i [address]</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> -6 <span class="comment">#查看log 合并最近三条commit</span></span><br><span class="line">commit ce2abde0bf171ac220701f921fb7c80d59d1cabb (HEAD -&gt; master)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 26 13:38:08 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add commit3</span><br><span class="line"></span><br><span class="line">commit 2805221941eea19d8fea0acf26674af8315e5a3b</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 26 13:37:59 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add commit2</span><br><span class="line"></span><br><span class="line">commit 40b8a74be089723d8609f8561972069d045e33a2</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 26 13:37:51 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add commit1</span><br><span class="line"></span><br><span class="line">commit f7b88f55dc358c375cbbc26db54e7e87b551c518</span><br><span class="line">Merge: 9e63410 d2c1d2b</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 26 13:34:46 2019 +0800</span><br><span class="line"></span><br><span class="line">    Merge all branch</span><br><span class="line"></span><br><span class="line">commit 9e63410fee4af12a8e9855d2cb6ac81a977b821e</span><br><span class="line">Merge: 1da4f5a 2241da2</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 26 13:33:20 2019 +0800</span><br><span class="line"></span><br><span class="line">    Merge branch <span class="string">'fix_add1'</span></span><br><span class="line"></span><br><span class="line">commit d2c1d2b68622e6ee11c2070eb36406ccb0e63655</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 17:03:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add add file</span><br><span class="line">$ git rebase -i f7b88f55dc35 <span class="comment">#取父亲节点地址 弹出两次交互界面 如下图</span></span><br><span class="line">[detached HEAD 9f2603b] Create and Add three files. Add commit1 Add commit2 Add commit3</span><br><span class="line"> Date: Sun May 26 13:37:51 2019 +0800</span><br><span class="line"> 3 files changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> create mode 100644 commit1</span><br><span class="line"> create mode 100644 commit2</span><br><span class="line"> create mode 100644 commit3</span><br><span class="line">Successfully rebased and updated refs/heads/master.</span><br><span class="line">$ git <span class="built_in">log</span> -6 --graph <span class="comment">#再次查看log 已经合并成功 并生成了新的commit对象</span></span><br><span class="line">* commit 9f2603b5aac31b0607312a51224a9691ed0670b4 (HEAD -&gt; master)</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 26 13:37:51 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Create and Add three files.</span><br><span class="line">|     Add commit1</span><br><span class="line">|     Add commit2</span><br><span class="line">|     Add commit3</span><br><span class="line">|   </span><br><span class="line">*   commit f7b88f55dc358c375cbbc26db54e7e87b551c518</span><br><span class="line">|\  Merge: 9e63410 d2c1d2b</span><br><span class="line">| | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | Date:   Sun May 26 13:34:46 2019 +0800</span><br><span class="line">| | </span><br><span class="line">| |     Merge all branch</span><br><span class="line">| | </span><br><span class="line">| * commit d2c1d2b68622e6ee11c2070eb36406ccb0e63655</span><br><span class="line">| | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | Date:   Sun May 19 17:03:02 2019 +0800</span><br><span class="line">| | </span><br><span class="line">| |     Add add file</span><br><span class="line">| | </span><br><span class="line">| * commit ea0c4843f5ee874f4d96646d7f3a8a3adb1432f0</span><br><span class="line">| | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | Date:   Sun May 19 16:33:15 2019 +0800</span><br><span class="line">| | </span><br><span class="line">| |     Add hello world <span class="keyword">in</span> file</span><br><span class="line">| |   </span><br><span class="line">* |   commit 9e63410fee4af12a8e9855d2cb6ac81a977b821e</span><br><span class="line">|\ \  Merge: 1da4f5a 2241da2</span><br><span class="line">| | | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | | Date:   Sun May 26 13:33:20 2019 +0800</span><br><span class="line">| | | </span><br><span class="line">| | |     Merge branch <span class="string">'fix_add1'</span></span><br><span class="line">| | | </span><br><span class="line">| * | commit 2241da25049ad63dea9f20b094b858f0b533ed61</span><br><span class="line">| | | Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| | | Date:   Sun May 19 17:01:01 2019 +0800</span><br><span class="line">| | | </span><br><span class="line">| | |     Add <span class="string">"!"</span></span><br></pre></td></tr></table></figure><h4 id="图示"><a href="#图示" class="headerlink" title="图示"></a>图示</h4><ul><li>执行“git rebase -i f7b88f55dc35”命令后，弹出第一个交互</li></ul><p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/3.%E6%8A%8A%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%A4%9A%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/20190526132915.png" alt="img"></p><ul><li>选择squash命令，修改pick为s，保存退出</li></ul><p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/3.%E6%8A%8A%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%A4%9A%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/20190526132924.png" alt="img"></p><ul><li>第二个交互界面</li></ul><p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/3.%E6%8A%8A%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%A4%9A%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/20190526155824.png" alt="img"></p><ul><li>插入新message，保留旧的message，保存退出</li></ul><p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/3.%E6%8A%8A%E8%BF%9E%E7%BB%AD%E7%9A%84%E5%A4%9A%E4%B8%AAcommit%E6%95%B4%E7%90%86%E6%88%901%E4%B8%AA/20190526160006.png" alt="img"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;把连续的多个commit整理成1个&quot;&gt;&lt;a href=&quot;#把连续的多个commit整理成1个&quot; class=&quot;headerlink&quot; title=&quot;把连续的多个commit整理成1个&quot;&gt;&lt;/a&gt;把连续的多个commit整理成1个&lt;/h3&gt;&lt;h4 id=&quot;git-r
      
    
    </summary>
    
    
    
      <category term="Git" scheme="http://blog.jammelee.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>修改commit的message</title>
    <link href="http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/2.%E4%BF%AE%E6%94%B9commit%E7%9A%84message/"/>
    <id>http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/2.%E4%BF%AE%E6%94%B9commit%E7%9A%84message/</id>
    <published>2019-10-21T15:14:13.000Z</published>
    <updated>2020-05-18T17:34:01.553Z</updated>
    
    <content type="html"><![CDATA[<h3 id="修改commit的message"><a href="#修改commit的message" class="headerlink" title="修改commit的message"></a>修改commit的message</h3><h4 id="修改最新commit的message"><a href="#修改最新commit的message" class="headerlink" title="修改最新commit的message"></a>修改最新commit的message</h4><ul><li>$ git commit —amend<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> <span class="comment">#先查看log 第一条信息为merge branch temp</span></span><br><span class="line">commit 5524853e5b062ee5536925dc1e6a8b70db415253 (HEAD -&gt; master)</span><br><span class="line">Merge: 4b6999e 543c5d8</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sat May 25 18:27:23 2019 +0800</span><br><span class="line"></span><br><span class="line">    merge branch temp</span><br><span class="line"></span><br><span class="line">commit 4b6999eecb60df46af36c5409e3737e44b877dd7</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:50:07 2019 +0800</span><br><span class="line"></span><br><span class="line">    create folder and file</span><br><span class="line"></span><br><span class="line">commit 6d4192be4c570363865468870d14f59efaa5521e</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:46:22 2019 +0800</span><br><span class="line"></span><br><span class="line">    create abc</span><br><span class="line"></span><br><span class="line">commit 543c5d84e8b5f2996e1a40745262f39df95eebaf</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 22:12:57 2019 +0800</span><br><span class="line"></span><br><span class="line">    add <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">commit 4d2bdddf4098e40ce57fdaf04bb862f7bea04918</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:36:15 2019 +0800</span><br><span class="line"></span><br><span class="line">    rename</span><br><span class="line"></span><br><span class="line">commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51 (tag: <span class="built_in">test</span>)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    学习工作区和暂存区</span><br><span class="line"></span><br><span class="line">commit 33f7ae4c4d4da85453ed0077670e242b71d0a621</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add readme</span><br><span class="line">$ git commit --amend <span class="comment">#将merge改成Merge</span></span><br><span class="line">[master 1da4f5a] Merge branch temp</span><br><span class="line"> Date: Sat May 25 18:27:23 2019 +0800</span><br><span class="line">$ git <span class="built_in">log</span> <span class="comment">#再次查看 message已经被修改</span></span><br><span class="line">commit 1da4f5a22942c99a466508cdea306619dd5c48b0 (HEAD -&gt; master)</span><br><span class="line">Merge: 4b6999e 543c5d8</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sat May 25 18:27:23 2019 +0800</span><br><span class="line"></span><br><span class="line">    Merge branch temp</span><br><span class="line"></span><br><span class="line">commit 4b6999eecb60df46af36c5409e3737e44b877dd7</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:50:07 2019 +0800</span><br><span class="line"></span><br><span class="line">    create folder and file</span><br><span class="line"></span><br><span class="line">commit 6d4192be4c570363865468870d14f59efaa5521e</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:46:22 2019 +0800</span><br><span class="line"></span><br><span class="line">    create abc</span><br><span class="line"></span><br><span class="line">commit 543c5d84e8b5f2996e1a40745262f39df95eebaf</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 22:12:57 2019 +0800</span><br><span class="line"></span><br><span class="line">    add <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">commit 4d2bdddf4098e40ce57fdaf04bb862f7bea04918</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:36:15 2019 +0800</span><br><span class="line"></span><br><span class="line">    rename</span><br><span class="line"></span><br><span class="line">commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51 (tag: <span class="built_in">test</span>)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    学习工作区和暂存区</span><br><span class="line"></span><br><span class="line">commit 33f7ae4c4d4da85453ed0077670e242b71d0a621</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add readme</span><br></pre></td></tr></table></figure><h4 id="修改老旧commit的message"><a href="#修改老旧commit的message" class="headerlink" title="修改老旧commit的message"></a>修改老旧commit的message</h4></li><li>$ git rebase -i 6d4192be<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> -3 <span class="comment">#查看近三次的log</span></span><br><span class="line">commit d2c1d2b68622e6ee11c2070eb36406ccb0e63655 (HEAD -&gt; fix_add)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 17:03:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add add file</span><br><span class="line"></span><br><span class="line">commit ea0c4843f5ee874f4d96646d7f3a8a3adb1432f0</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 16:33:15 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add hello world</span><br><span class="line"></span><br><span class="line">commit 6d4192be4c570363865468870d14f59efaa5521e</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:46:22 2019 +0800</span><br><span class="line"></span><br><span class="line">    create abc</span><br><span class="line">$ git rebase -i 6d4192be <span class="comment">#使用rebase命令 选择需要修改message的父亲commit地址 会弹出交互界面 如下图</span></span><br><span class="line">[detached HEAD ea0c484] Add hello world <span class="keyword">in</span> file</span><br><span class="line"> Date: Sun May 19 16:33:15 2019 +0800</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line">Successfully rebased and updated refs/heads/fix_add. <span class="comment">#这里表示修改成功</span></span><br><span class="line">$ git branch -av</span><br><span class="line">* fix_add  d2c1d2b Add add file</span><br><span class="line">  fix_add1 2241da2 Add <span class="string">"!"</span></span><br><span class="line">  master   1da4f5a Merge branch temp</span><br><span class="line">$ git <span class="built_in">log</span> -n3 --graph <span class="comment">#查看log 已经将Add hello world成功修改为Add hello world in file</span></span><br><span class="line">* commit d2c1d2b68622e6ee11c2070eb36406ccb0e63655 (HEAD -&gt; fix_add)</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 19 17:03:02 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Add add file</span><br><span class="line">| </span><br><span class="line">* commit ea0c4843f5ee874f4d96646d7f3a8a3adb1432f0</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 19 16:33:15 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     Add hello world <span class="keyword">in</span> file</span><br><span class="line">| </span><br><span class="line">* commit 6d4192be4c570363865468870d14f59efaa5521e</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Sun May 19 13:46:22 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     create abc</span><br></pre></td></tr></table></figure><h5 id="图示"><a href="#图示" class="headerlink" title="图示"></a>图示</h5><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/2.%E4%BF%AE%E6%94%B9commit%E7%9A%84message/20190525213324.png" alt="img"></li><li>将pick改为reword简称r，然后退出保存</li></ul><p><img src="/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/2.%E4%BF%AE%E6%94%B9commit%E7%9A%84message/20190525213433.png" alt="img"></p><ul><li>退出保存后，会弹出一个新的交互界面，将message修改为新的message，保存退出即可。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;修改commit的message&quot;&gt;&lt;a href=&quot;#修改commit的message&quot; class=&quot;headerlink&quot; title=&quot;修改commit的message&quot;&gt;&lt;/a&gt;修改commit的message&lt;/h3&gt;&lt;h4 id=&quot;修改最新commi
      
    
    </summary>
    
    
    
      <category term="Git" scheme="http://blog.jammelee.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>删除不需要的分支</title>
    <link href="http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/1.%E5%88%A0%E9%99%A4%E4%B8%8D%E9%9C%80%E8%A6%81%E7%9A%84%E5%88%86%E6%94%AF/"/>
    <id>http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%BA%8C%E7%AB%A0/1.%E5%88%A0%E9%99%A4%E4%B8%8D%E9%9C%80%E8%A6%81%E7%9A%84%E5%88%86%E6%94%AF/</id>
    <published>2019-10-21T15:13:55.000Z</published>
    <updated>2019-10-21T15:13:58.717Z</updated>
    
    <content type="html"><![CDATA[<h3 id="删除不需要的分支"><a href="#删除不需要的分支" class="headerlink" title="删除不需要的分支"></a>删除不需要的分支</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git branch -av <span class="comment">#查看分支 假设我们不需要temp分支</span></span><br><span class="line">  fix_add  fd98d3d Add add file</span><br><span class="line">  fix_add1 2241da2 Add <span class="string">"!"</span></span><br><span class="line">* master   4b6999e create folder and file</span><br><span class="line">  temp     543c5d8 add <span class="built_in">test</span></span><br><span class="line">$ git branch -d temp <span class="comment">#删除temp分支 会提示我temp还没有合并 如果真的要删除使用-D</span></span><br><span class="line">error: The branch <span class="string">'temp'</span> is not fully merged.</span><br><span class="line">If you are sure you want to delete it, run <span class="string">'git branch -D temp'</span>.</span><br><span class="line">$ git merge temp <span class="comment">#或者进行merge 这里产生了冲突 master上我rename了readme</span></span><br><span class="line">CONFLICT (modify/delete): readme deleted <span class="keyword">in</span> HEAD and modified <span class="keyword">in</span> temp. Version temp of readme left <span class="keyword">in</span> tree.</span><br><span class="line">Automatic merge failed; fix conflicts and <span class="keyword">then</span> commit the result.</span><br><span class="line">$ git commit -m <span class="string">'merge branch temp'</span> <span class="comment">#解决冲突后提交合并</span></span><br><span class="line">[master 5524853] merge branch temp</span><br><span class="line">$ git branch -d temp <span class="comment">#这时候再使用-d就可以删除了</span></span><br><span class="line">Deleted branch temp (was 543c5d8).</span><br><span class="line">$ git branch -av</span><br><span class="line">  fix_add  fd98d3d Add add file</span><br><span class="line">  fix_add1 2241da2 Add <span class="string">"!"</span></span><br><span class="line">* master   5524853 merge branch temp</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;删除不需要的分支&quot;&gt;&lt;a href=&quot;#删除不需要的分支&quot; class=&quot;headerlink&quot; title=&quot;删除不需要的分支&quot;&gt;&lt;/a&gt;删除不需要的分支&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
    
    
      <category term="Git" scheme="http://blog.jammelee.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>分离头指针情况下的注意事项</title>
    <link href="http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/8.%E5%88%86%E7%A6%BB%E5%A4%B4%E6%8C%87%E9%92%88%E6%83%85%E5%86%B5%E4%B8%8B%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <id>http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/8.%E5%88%86%E7%A6%BB%E5%A4%B4%E6%8C%87%E9%92%88%E6%83%85%E5%86%B5%E4%B8%8B%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</id>
    <published>2019-10-21T15:13:36.000Z</published>
    <updated>2020-05-18T17:03:48.701Z</updated>
    
    <content type="html"><![CDATA[<h3 id="分离头指针情况下的注意事项"><a href="#分离头指针情况下的注意事项" class="headerlink" title="分离头指针情况下的注意事项"></a>分离头指针情况下的注意事项</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span></span><br><span class="line">commit 4b6999eecb60df46af36c5409e3737e44b877dd7 (HEAD -&gt; master)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:50:07 2019 +0800</span><br><span class="line"></span><br><span class="line">    create folder and file</span><br><span class="line"></span><br><span class="line">commit 6d4192be4c570363865468870d14f59efaa5521e</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:46:22 2019 +0800</span><br><span class="line"></span><br><span class="line">    create abc</span><br><span class="line"></span><br><span class="line">commit 4d2bdddf4098e40ce57fdaf04bb862f7bea04918</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:36:15 2019 +0800</span><br><span class="line"></span><br><span class="line">    rename</span><br><span class="line"></span><br><span class="line">commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51 (tag: <span class="built_in">test</span>)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    学习工作区和暂存区</span><br><span class="line"></span><br><span class="line">commit 33f7ae4c4d4da85453ed0077670e242b71d0a621</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add readme</span><br><span class="line">$ git checkout 6d4192 <span class="comment">#分离头指针 本意上就是指我们现在正工作在没有分支的状态下 这个时候如果产生commit或者很多变更 假设突然有个任务 有个bug要修复 需要切换到master上去修复 这个时候切换 分离头指针地方做开发的commit没有branch挂钩 就有可能被git当作垃圾清理掉</span></span><br><span class="line">Note: checking out <span class="string">'6d4192'</span>.</span><br><span class="line"></span><br><span class="line">You are <span class="keyword">in</span> <span class="string">'detached HEAD'</span> state. You can look around, make experimental</span><br><span class="line">changes and commit them, and you can discard any commits you make <span class="keyword">in</span> this</span><br><span class="line">state without impacting any branches by performing another checkout.</span><br><span class="line"></span><br><span class="line">If you want to create a new branch to retain commits you create, you may</span><br><span class="line"><span class="keyword">do</span> so (now or later) by using -b with the checkout <span class="built_in">command</span> again. Example:</span><br><span class="line"></span><br><span class="line">  git checkout -b &lt;new-branch-name&gt;</span><br><span class="line"></span><br><span class="line">HEAD is now at 6d4192b create abc</span><br><span class="line">$ vi abc <span class="comment">#修改abc文件</span></span><br><span class="line">$ git status <span class="comment">#查看当前状态 发现git会提示当前头指针没有指向任何分支 是基于6d4192b做的</span></span><br><span class="line">HEAD detached at 6d4192b</span><br><span class="line">Changes not staged <span class="keyword">for</span> commit:</span><br><span class="line">  (use <span class="string">"git add &lt;file&gt;..."</span> to update what will be committed)</span><br><span class="line">  (use <span class="string">"git checkout -- &lt;file&gt;..."</span> to discard changes <span class="keyword">in</span> working directory)</span><br><span class="line"></span><br><span class="line">modified:   abc</span><br><span class="line"></span><br><span class="line">no changes added to commit (use <span class="string">"git add"</span> and/or <span class="string">"git commit -a"</span>)</span><br><span class="line">$ git add -u <span class="comment">#将修改添加至暂存区</span></span><br><span class="line">$ git commit -m <span class="string">'Add hello world'</span></span><br><span class="line">[detached HEAD 4e43c01] Add hello world</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line">$ git <span class="built_in">log</span> <span class="comment">#会发现head指针没有指向任何分支 这样就叫分离头指针的状态</span></span><br><span class="line">commit 4e43c01c8f3c76aedd986d598a00b90809a3a588 (HEAD)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 16:33:15 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add hello world</span><br><span class="line"></span><br><span class="line">commit 6d4192be4c570363865468870d14f59efaa5521e</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:46:22 2019 +0800</span><br><span class="line"></span><br><span class="line">    create abc</span><br><span class="line"></span><br><span class="line">commit 4d2bdddf4098e40ce57fdaf04bb862f7bea04918</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:36:15 2019 +0800</span><br><span class="line"></span><br><span class="line">    rename</span><br><span class="line"></span><br><span class="line">commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51 (tag: <span class="built_in">test</span>)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    学习工作区和暂存区</span><br><span class="line"></span><br><span class="line">commit 33f7ae4c4d4da85453ed0077670e242b71d0a621</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add readme</span><br><span class="line">$ git branch -av</span><br><span class="line">* (HEAD detached from 6d4192b) 4e43c01 Add hello world</span><br><span class="line">  master                       4b6999e create folder and file</span><br><span class="line">  temp                         543c5d8 add <span class="built_in">test</span></span><br><span class="line">$ git checkout master <span class="comment">#假设这个时候接到任务 必须要到master去修复问题</span></span><br><span class="line">Warning: you are leaving 1 commit behind, not connected to</span><br><span class="line">any of your branches: <span class="comment">#git提醒你有一个commit在后边，而且没有连接你任何的分支</span></span><br><span class="line"></span><br><span class="line">  4e43c01 Add hello world</span><br><span class="line"></span><br><span class="line">If you want to keep it by creating a new branch, this may be a good time</span><br><span class="line">to <span class="keyword">do</span> so with: <span class="comment">#下边再次提醒 问你要不要为4e43c01创建一个新的分支</span></span><br><span class="line"></span><br><span class="line"> git branch &lt;new-branch-name&gt; 4e43c01</span><br><span class="line"></span><br><span class="line">Switched to branch <span class="string">'master'</span></span><br><span class="line">$ gitk --all <span class="comment">#如图1 会发现找不到commit记录 证明这条commit在git看来是不重要的 就很有可能被git清理掉</span></span><br><span class="line">$ git branch fix_add 4e43c01 <span class="comment">#假设这个时候我们发现这条commit很重要 那么按照上边的提示 创建一个分支出来</span></span><br><span class="line">$ gitk --all <span class="comment">#这个时候再看 就会发现已经有了这条记录 如图2</span></span><br></pre></td></tr></table></figure><p><img src="/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/8.%E5%88%86%E7%A6%BB%E5%A4%B4%E6%8C%87%E9%92%88%E6%83%85%E5%86%B5%E4%B8%8B%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/20190519164230.png" alt="imges"></p><p><img src="/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/8.%E5%88%86%E7%A6%BB%E5%A4%B4%E6%8C%87%E9%92%88%E6%83%85%E5%86%B5%E4%B8%8B%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/20190519165124.png" alt="img"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;分离头指针情况下的注意事项&quot;&gt;&lt;a href=&quot;#分离头指针情况下的注意事项&quot; class=&quot;headerlink&quot; title=&quot;分离头指针情况下的注意事项&quot;&gt;&lt;/a&gt;分离头指针情况下的注意事项&lt;/h3&gt;&lt;figure class=&quot;highlight bash
      
    
    </summary>
    
    
    
      <category term="Git" scheme="http://blog.jammelee.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>commit、tree、blob三个对象之间的关系</title>
    <link href="http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/7.commit%E3%80%81tree%E3%80%81blob%E4%B8%89%E4%B8%AA%E5%AF%B9%E8%B1%A1%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB/"/>
    <id>http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/7.commit%E3%80%81tree%E3%80%81blob%E4%B8%89%E4%B8%AA%E5%AF%B9%E8%B1%A1%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB/</id>
    <published>2019-10-21T15:13:06.000Z</published>
    <updated>2019-10-21T15:13:05.862Z</updated>
    
    <content type="html"><![CDATA[<h3 id="commit、tree、blob三个对象之间的关系"><a href="#commit、tree、blob三个对象之间的关系" class="headerlink" title="commit、tree、blob三个对象之间的关系"></a>commit、tree、blob三个对象之间的关系</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span></span><br><span class="line">commit 4b6999eecb60df46af36c5409e3737e44b877dd7 (HEAD -&gt; master)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:50:07 2019 +0800</span><br><span class="line"></span><br><span class="line">    create folder and file</span><br><span class="line"></span><br><span class="line">commit 6d4192be4c570363865468870d14f59efaa5521e</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun May 19 13:46:22 2019 +0800</span><br><span class="line"></span><br><span class="line">    create abc</span><br><span class="line"></span><br><span class="line">commit 4d2bdddf4098e40ce57fdaf04bb862f7bea04918</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:36:15 2019 +0800</span><br><span class="line"></span><br><span class="line">    rename</span><br><span class="line"></span><br><span class="line">commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51 (tag: <span class="built_in">test</span>)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    学习工作区和暂存区</span><br><span class="line"></span><br><span class="line">commit 33f7ae4c4d4da85453ed0077670e242b71d0a621</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add readme</span><br><span class="line">$ git cat-file -p 4b6999ee <span class="comment">#查看一下地址为4b6999ee的commit内容 发现里边有一颗树</span></span><br><span class="line">tree 283144d15658fc8307f3cc01e7c962c3959a0121</span><br><span class="line">parent 6d4192be4c570363865468870d14f59efaa5521e</span><br><span class="line">author xxx &lt;jamme_lee@outlook.com&gt; 1558245007 +0800</span><br><span class="line">committer xxx &lt;jamme_lee@outlook.com&gt; 1558245007 +0800</span><br><span class="line"></span><br><span class="line">create folder and file</span><br><span class="line">$ git cat-file -p 283144d <span class="comment">#查看tree的内容 下边存了a、abc、readme.md文件和folder文件夹</span></span><br><span class="line">100644 blob 64fa4ac5cffbaa8c5b03f26eec62ae6244f2b435a</span><br><span class="line">100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391abc</span><br><span class="line">040000 tree c32d14e3847d3a6e6f31261adfb0cb0b334beec5folder</span><br><span class="line">100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391readme.md</span><br><span class="line">$ git cat-file -p c32d14e <span class="comment">#再查看folder文件夹的tree 发现内容就是files文件的blob对象</span></span><br><span class="line">100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391files</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;commit、tree、blob三个对象之间的关系&quot;&gt;&lt;a href=&quot;#commit、tree、blob三个对象之间的关系&quot; class=&quot;headerlink&quot; title=&quot;commit、tree、blob三个对象之间的关系&quot;&gt;&lt;/a&gt;commit、tree
      
    
    </summary>
    
    
    
      <category term="Git" scheme="http://blog.jammelee.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>探秘.git目录</title>
    <link href="http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/6.%E6%8E%A2%E7%A7%98.git%E7%9B%AE%E5%BD%95/"/>
    <id>http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/6.%E6%8E%A2%E7%A7%98.git%E7%9B%AE%E5%BD%95/</id>
    <published>2019-10-21T15:12:19.000Z</published>
    <updated>2019-10-21T15:12:37.400Z</updated>
    
    <content type="html"><![CDATA[<h3 id="探秘-git目录"><a href="#探秘-git目录" class="headerlink" title="探秘.git目录"></a>探秘.git目录</h3><p>在此之前，提一下gitk命令，gitk会调出一个git图形界面工具，不具体赘述，可以自己查看。</p><h4 id="HEAD文件"><a href="#HEAD文件" class="headerlink" title="HEAD文件"></a>HEAD文件</h4><p>首先打开.git目录<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> .git/ <span class="comment">#在git工程主目录下打开.git目录，.git是个隐藏目录</span></span><br><span class="line">$ ls -la</span><br><span class="line">total 56</span><br><span class="line">drwxr-xr-x  15 jamme  staff  480  5 14 22:49 .</span><br><span class="line">drwxr-xr-x   5 jamme  staff  160  4 29 22:10 ..</span><br><span class="line">-rw-r--r--   1 jamme  staff    9  4 29 22:12 COMMIT_EDITMSG</span><br><span class="line">-rw-r--r--   1 jamme  staff   21  4 29 22:08 HEAD</span><br><span class="line">-rw-r--r--   1 jamme  staff   41  4 29 21:31 ORIG_HEAD</span><br><span class="line">drwxr-xr-x   2 jamme  staff   64  4 28 22:08 branches</span><br><span class="line">-rw-r--r--   1 jamme  staff  191  4 28 22:10 config</span><br><span class="line">-rw-r--r--   1 jamme  staff   73  4 28 22:08 description</span><br><span class="line">-rw-r--r--   1 jamme  staff  375  5 14 22:49 gitk.cache</span><br><span class="line">drwxr-xr-x  13 jamme  staff  416  4 28 22:08 hooks</span><br><span class="line">-rw-r--r--   1 jamme  staff  201  4 29 22:12 index</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 28 22:08 info</span><br><span class="line">drwxr-xr-x   4 jamme  staff  128  4 28 22:19 logs</span><br><span class="line">drwxr-xr-x  20 jamme  staff  640  5 14 22:53 objects</span><br><span class="line">drwxr-xr-x   4 jamme  staff  128  4 28 22:08 refs</span><br><span class="line">$ cat HEAD<span class="comment">#查看HEAD文件，会发现他是个引用，指向temp分支</span></span><br><span class="line">ref: refs/heads/temp</span><br><span class="line">$ git branch -av<span class="comment">#查看分支 *代表当前在哪个工作分支</span></span><br><span class="line">  master 4d2bddd rename</span><br><span class="line">* temp   543c5d8 add <span class="built_in">test</span></span><br><span class="line">$ <span class="built_in">cd</span> ..<span class="comment">#切换到主目录下</span></span><br><span class="line">$ git checkout master<span class="comment">#切换master分支</span></span><br><span class="line">Switched to branch <span class="string">'master'</span></span><br><span class="line">$ cat .git/HEAD<span class="comment">#重新查看HEAD文件，发现引用已经指向了master</span></span><br><span class="line">ref: refs/heads/master</span><br></pre></td></tr></table></figure></p><h4 id="config文件"><a href="#config文件" class="headerlink" title="config文件"></a>config文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat .git/config </span><br><span class="line">[core]</span><br><span class="line">repositoryformatversion = 0</span><br><span class="line">filemode = <span class="literal">true</span></span><br><span class="line">bare = <span class="literal">false</span></span><br><span class="line">logallrefupdates = <span class="literal">true</span></span><br><span class="line">ignorecase = <span class="literal">true</span></span><br><span class="line">precomposeunicode = <span class="literal">true</span></span><br><span class="line">[user]</span><br><span class="line">name = xxx</span><br><span class="line">email = xxx@xxx.com</span><br><span class="line">$ vi .git/config<span class="comment">#修改user.name</span></span><br><span class="line">$ git config --<span class="built_in">local</span> --list<span class="comment">#查看local config 发现name已经变了</span></span><br><span class="line">core.repositoryformatversion=0</span><br><span class="line">core.filemode=<span class="literal">true</span></span><br><span class="line">core.bare=<span class="literal">false</span></span><br><span class="line">core.logallrefupdates=<span class="literal">true</span></span><br><span class="line">core.ignorecase=<span class="literal">true</span></span><br><span class="line">core.precomposeunicode=<span class="literal">true</span></span><br><span class="line">user.name=jamme</span><br><span class="line">user.email=xxx@xxx.com</span><br><span class="line">$ git config --<span class="built_in">local</span> user.name<span class="comment">#用这种方式查看name</span></span><br><span class="line">jamme</span><br><span class="line">$ git config --<span class="built_in">local</span> user.name <span class="string">'xxx'</span> <span class="comment">#修改name</span></span><br><span class="line">$ git config --<span class="built_in">local</span> user.name<span class="comment">#查看 修改成功</span></span><br><span class="line">xxx</span><br><span class="line">$ cat .git/config<span class="comment">#再查看config文件 也发生变化</span></span><br><span class="line">[core]</span><br><span class="line">repositoryformatversion = 0</span><br><span class="line">filemode = <span class="literal">true</span></span><br><span class="line">bare = <span class="literal">false</span></span><br><span class="line">logallrefupdates = <span class="literal">true</span></span><br><span class="line">ignorecase = <span class="literal">true</span></span><br><span class="line">precomposeunicode = <span class="literal">true</span></span><br><span class="line">[user]</span><br><span class="line">name = xxx</span><br><span class="line">email = xxx@xxx.com</span><br></pre></td></tr></table></figure><h4 id="refs目录"><a href="#refs目录" class="headerlink" title="refs目录"></a>refs目录</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> .git/refs/</span><br><span class="line">$ ls -la</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x   4 jamme  staff  128  4 28 22:08 .</span><br><span class="line">drwxr-xr-x  15 jamme  staff  480  5 14 23:14 ..</span><br><span class="line">drwxr-xr-x   4 jamme  staff  128  4 29 22:12 heads<span class="comment">#分支</span></span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  5 14 22:53 tags<span class="comment">#tag标签</span></span><br><span class="line">$ <span class="built_in">cd</span> heads/</span><br><span class="line">$ ls -la</span><br><span class="line">total 16</span><br><span class="line">drwxr-xr-x  4 jamme  staff  128  4 29 22:12 .</span><br><span class="line">drwxr-xr-x  4 jamme  staff  128  4 28 22:08 ..</span><br><span class="line">-rw-r--r--  1 jamme  staff   41  4 29 21:36 master<span class="comment">#master分支</span></span><br><span class="line">-rw-r--r--  1 jamme  staff   41  4 29 22:12 temp<span class="comment">#temp分支</span></span><br><span class="line">$ cat master</span><br><span class="line">4d2bdddf4098e40ce57fdaf04bb862f7bea04918</span><br><span class="line">$ git cat-file -t 4d2bdddf4098e40ce57fda<span class="comment">#查看引用的object是什么类型 这里是commit类型</span></span><br><span class="line">commit</span><br><span class="line">$ git branch -av</span><br><span class="line">* master 4d2bddd rename<span class="comment">#看到这里master指向的地址就是上边master文件中存储的地址</span></span><br><span class="line">  temp   543c5d8 add <span class="built_in">test</span></span><br><span class="line">$ cat temp <span class="comment">#temp文件中存储的地址和上方temp分支指向的地址是一样的 如果较短的hash值可以表示唯一 就可以使用短hash值</span></span><br><span class="line">543c5d84e8b5f2996e1a40745262f39df95eebaf</span><br><span class="line">$ <span class="built_in">cd</span> ../tags/ <span class="comment">#进入refs目录下的tags目录</span></span><br><span class="line">$ ls -la</span><br><span class="line">total 8</span><br><span class="line">drwxr-xr-x  3 jamme  staff   96  5 14 22:53 .</span><br><span class="line">drwxr-xr-x  4 jamme  staff  128  4 28 22:08 ..</span><br><span class="line">-rw-r--r--  1 jamme  staff   41  5 14 22:53 <span class="built_in">test</span></span><br><span class="line">$ cat <span class="built_in">test</span><span class="comment">#查看test文件中存储的地址</span></span><br><span class="line">0eaa4776504680c4df3677d5d66a7f4b8f0c5ffe</span><br><span class="line">$ git cat-file -t 0eaa47765<span class="comment">#查看该地址指向的对象类型 tag类型</span></span><br><span class="line">tag</span><br><span class="line">$ git cat-file -p 0eaa47765<span class="comment">#查看该地址指向对象的内容</span></span><br><span class="line">object d34df54beffb33cf6e4f4e97d0f0e24f2b676d51</span><br><span class="line"><span class="built_in">type</span> commit</span><br><span class="line">tag <span class="built_in">test</span></span><br><span class="line">tagger xxx &lt;xxx@xxx.com&gt; 1557845639 +0800</span><br><span class="line"></span><br><span class="line">tag <span class="built_in">test</span></span><br><span class="line">$ git cat-file -t d34df5<span class="comment">#上边地址指向tag对象的内容中 存储的类型实际上是个commit</span></span><br><span class="line">commit</span><br></pre></td></tr></table></figure><h4 id="objects目录"><a href="#objects目录" class="headerlink" title="objects目录"></a>objects目录</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> objects/<span class="comment">#切换到.git目录下的objects目录</span></span><br><span class="line">$ ls -la</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x  20 jamme  staff  640  5 14 22:53 .</span><br><span class="line">drwxr-xr-x  15 jamme  staff  480  5 14 23:14 ..</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  5 14 22:53 0e</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 28 22:19 33</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 21:36 4d</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 22:12 54</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 20:48 5d</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 20:48 64</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 21:02 85</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 20:47 8b</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 20:47 90</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 22:12 9c</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 21:36 9f</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 22:12 c9</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 21:02 d3</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 29 21:05 dd</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 28 22:17 e6</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 28 22:19 e8</span><br><span class="line">drwxr-xr-x   2 jamme  staff   64  4 28 22:08 info</span><br><span class="line">drwxr-xr-x   2 jamme  staff   64  4 28 22:08 pack<span class="comment">#如果上边的松散文件夹比较多的情况下 git会自动把他们打包到pack目录下</span></span><br><span class="line">$ <span class="built_in">cd</span> e8/<span class="comment">#进入e8目录</span></span><br><span class="line">$ ls -la</span><br><span class="line">total 8</span><br><span class="line">drwxr-xr-x   3 jamme  staff   96  4 28 22:19 .</span><br><span class="line">drwxr-xr-x  20 jamme  staff  640  5 14 22:53 ..</span><br><span class="line">-r--r--r--   1 jamme  staff   51  4 28 22:19 0ad49ace82167de62e498622d70377d913c79e<span class="comment">#这个文件名拼上目录名就是一个地址</span></span><br><span class="line">$ git cat-file -t e80ad49ace82167de62e498622d70377d913c79e<span class="comment">#查看该地址的类型 是一棵树</span></span><br><span class="line">tree</span><br><span class="line">$ git cat-file -p e80ad49ace82167de62e498622d70377d913c79e<span class="comment">#查看该地址的内容 blob是文件 文件名叫readme</span></span><br><span class="line">100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391readme</span><br><span class="line">$ git cat-file -t e69de29bb2d1d64<span class="comment">#看一下类型 确实是blob</span></span><br><span class="line">blob</span><br><span class="line">$ git cat-file -p e69de29bb2d1d64<span class="comment">#查看内容 就是文件内写入的内容</span></span><br><span class="line">sssssss</span><br></pre></td></tr></table></figure><p>git中有一个神奇的地方，只要任何文件的文件内容相同，那么在git的眼里就是一个唯一的blob。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;探秘-git目录&quot;&gt;&lt;a href=&quot;#探秘-git目录&quot; class=&quot;headerlink&quot; title=&quot;探秘.git目录&quot;&gt;&lt;/a&gt;探秘.git目录&lt;/h3&gt;&lt;p&gt;在此之前，提一下gitk命令，gitk会调出一个git图形界面工具，不具体赘述，可以自己查看
      
    
    </summary>
    
    
    
      <category term="Git" scheme="http://blog.jammelee.top/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>查看版本演变历史</title>
    <link href="http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/5.%E6%9F%A5%E7%9C%8B%E7%89%88%E6%9C%AC%E6%BC%94%E5%8F%98%E5%8E%86%E5%8F%B2/"/>
    <id>http://blog.jammelee.top/2019/10/21/Git/%E7%AC%AC%E4%B8%80%E7%AB%A0/5.%E6%9F%A5%E7%9C%8B%E7%89%88%E6%9C%AC%E6%BC%94%E5%8F%98%E5%8E%86%E5%8F%B2/</id>
    <published>2019-10-21T15:11:56.000Z</published>
    <updated>2019-10-21T15:12:15.742Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查看版本演变历史"><a href="#查看版本演变历史" class="headerlink" title="查看版本演变历史"></a>查看版本演变历史</h3><h4 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">log</span> <span class="comment">#查看版本历史</span></span><br><span class="line">$ git <span class="built_in">log</span> --oneline <span class="comment">#简洁的查看版本历史</span></span><br><span class="line">4d2bddd (HEAD -&gt; master) rename</span><br><span class="line">d34df54 学习工作区和暂存区</span><br><span class="line">33f7ae4 Add readme</span><br><span class="line">$ git <span class="built_in">log</span> -n2 <span class="comment">#查看最近两次的版本历史</span></span><br><span class="line">commit 4d2bdddf4098e40ce57fdaf04bb862f7bea04918 (HEAD -&gt; master)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:36:15 2019 +0800</span><br><span class="line"></span><br><span class="line">    rename</span><br><span class="line"></span><br><span class="line">commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    学习工作区和暂存区</span><br><span class="line">$ git <span class="built_in">log</span> -n2 --oneline <span class="comment">#可以组合使用 查看最近两次的简洁列表</span></span><br><span class="line">4d2bddd (HEAD -&gt; master) rename</span><br><span class="line">d34df54 学习工作区和暂存区</span><br><span class="line">$ git branch -v <span class="comment">#查看当前分支列表</span></span><br><span class="line">* master 4d2bddd rename</span><br><span class="line">$ git checkout -b temp d34df54beffb33cf6e4f <span class="comment">#创建一个新的临时分支 temp</span></span><br><span class="line">Switched to a new branch <span class="string">'temp'</span></span><br><span class="line">$ vi readme <span class="comment">#修改readme文件内容</span></span><br><span class="line">$ git commit -am <span class="string">'add test'</span> <span class="comment">#将工作区的文件直接提交到版本历史库里</span></span><br><span class="line">[temp 543c5d8] add <span class="built_in">test</span></span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line">$ git branch -av <span class="comment">#查看所有分支</span></span><br><span class="line">  master 4d2bddd rename</span><br><span class="line">* temp   543c5d8 add <span class="built_in">test</span></span><br><span class="line">$ git <span class="built_in">log</span> <span class="comment">#会看到HEAD指针指向了temp分支</span></span><br><span class="line">commit 543c5d84e8b5f2996e1a40745262f39df95eebaf (HEAD -&gt; temp)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 22:12:57 2019 +0800</span><br><span class="line"></span><br><span class="line">    add <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    学习工作区和暂存区</span><br><span class="line"></span><br><span class="line">commit 33f7ae4c4d4da85453ed0077670e242b71d0a621</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add readme</span><br><span class="line">$ git <span class="built_in">log</span> --all <span class="comment">#查看所有分支的日志 HEAD指向temp 还可以看到master分支所指向的位置</span></span><br><span class="line">commit 543c5d84e8b5f2996e1a40745262f39df95eebaf (HEAD -&gt; temp)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 22:12:57 2019 +0800</span><br><span class="line"></span><br><span class="line">    add <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">commit 4d2bdddf4098e40ce57fdaf04bb862f7bea04918 (master)</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:36:15 2019 +0800</span><br><span class="line"></span><br><span class="line">    rename</span><br><span class="line"></span><br><span class="line">commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line"></span><br><span class="line">    学习工作区和暂存区</span><br><span class="line"></span><br><span class="line">commit 33f7ae4c4d4da85453ed0077670e242b71d0a621</span><br><span class="line">Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line"></span><br><span class="line">    Add readme</span><br><span class="line">$ git <span class="built_in">log</span> --all --graph <span class="comment">#通过图形化的方式 查看各分支引入的版本</span></span><br><span class="line">* commit 543c5d84e8b5f2996e1a40745262f39df95eebaf (HEAD -&gt; temp)</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Mon Apr 29 22:12:57 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     add <span class="built_in">test</span></span><br><span class="line">|   </span><br><span class="line">| * commit 4d2bdddf4098e40ce57fdaf04bb862f7bea04918 (master)</span><br><span class="line">|/  Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">|   Date:   Mon Apr 29 21:36:15 2019 +0800</span><br><span class="line">|   </span><br><span class="line">|       rename</span><br><span class="line">| </span><br><span class="line">* commit d34df54beffb33cf6e4f4e97d0f0e24f2b676d51</span><br><span class="line">| Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">| Date:   Mon Apr 29 21:02:02 2019 +0800</span><br><span class="line">| </span><br><span class="line">|     学习工作区和暂存区</span><br><span class="line">| </span><br><span class="line">* commit 33f7ae4c4d4da85453ed0077670e242b71d0a621</span><br><span class="line">  Author: xxx &lt;xxx@xxx.com&gt;</span><br><span class="line">  Date:   Sun Apr 28 22:19:09 2019 +0800</span><br><span class="line">  </span><br><span class="line">      Add readme</span><br><span class="line">$ git <span class="built_in">log</span> --oneline --all <span class="comment">#组合使用 所有分支日志的列表</span></span><br><span class="line">543c5d8 (HEAD -&gt; temp) add <span class="built_in">test</span></span><br><span class="line">4d2bddd (master) rename</span><br><span class="line">d34df54 学习工作区和暂存区</span><br><span class="line">33f7ae4 Add readme</span><br><span class="line">$ git <span class="built_in">log</span> --oneline --all -n3 <span class="comment">#组合使用 指定个数的所有分支日志列表</span></span><br><span class="line">543c5d8 (HEAD -&gt; temp) add <span class="built_in">test</span></span><br><span class="line">4d2bddd (master) rename</span><br><span class="line">d34df54 学习工作区和暂存区</span><br><span class="line">$ git <span class="built_in">log</span> --oneline --all -n3 --graph <span class="comment">#组合使用 指定个数的所有分支日志列表的图形化展示</span></span><br><span class="line">* 543c5d8 (HEAD -&gt; temp) add <span class="built_in">test</span></span><br><span class="line">| * 4d2bddd (master) rename</span><br><span class="line">|/  </span><br><span class="line">* d34df54 学习工作区和暂存区</span><br><span class="line">$ git <span class="built_in">log</span> --oneline --all temp <span class="comment">#虽然指定了temp分支 但是以--all优先</span></span><br><span class="line">543c5d8 (HEAD -&gt; temp) add <span class="built_in">test</span></span><br><span class="line">4d2bddd (master) rename</span><br><span class="line">d34df54 学习工作区和暂存区</span><br><span class="line">33f7ae4 Add readme</span><br><span class="line">$ git <span class="built_in">log</span> --oneline temp <span class="comment">#指定temp分支的日志</span></span><br><span class="line">543c5d8 (HEAD -&gt; temp) add <span class="built_in">test</span></span><br><span class="line">d34df54 学习工作区和暂存区</span><br><span class="line">33f7ae4 Add readme</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;查看版本演变历史&quot;&gt;&lt;a href=&quot;#查看版本演变历史&quot; class=&quot;headerlink&quot; title=&quot;查看版本演变历史&quot;&gt;&lt;/a&gt;查看版本演变历史&lt;/h3&gt;&lt;h4 id=&quot;git-log&quot;&gt;&lt;a href=&quot;#git-log&quot; class=&quot;header
      
    
    </summary>
    
    
    
      <category term="Git" scheme="http://blog.jammelee.top/tags/Git/"/>
    
  </entry>
  
</feed>
